#include <a_samp>
#include <a_mysql>
#include <sscanf2>
#include <dc_cmd>
#include <streamer>
#include <md5>

main()
{
}

//new strChatBubble[144];//Переменные для глобального использования
new strHeaderPlayerDialog[64];//Заголовок диалоговых окон
new strIOText[256];//Любой вводимый текст будь это диалоговое окно или чат
new strTextPlayerDialog[2048];//Для текста всего диалогового окна
new strSQLQuery[1024];//Для запросов к базе данных

new houses;// Количество домов в базе
new vehicles;// Количество машин в базе

//MySQL Configuration
#define SQL_HOST			"localhost"
#define SQL_DB				"EVE_H3961"
#define SQL_USER			"H3961"
#define SQL_PASS			"1234q56q"

#define SERVER_NAME			"Roleplay"
#define SERVER_NUMBER		"Development"
<<<<<<< HEAD
#define SERVER_COUNTRY		"San Andreas"
#define GAMEMODE_NAME		"Roleplay"
=======
#define SERVER_COUNTRY		"San Fierro"
#define GAMEMODE_NAME		"VRP"
>>>>>>> 2a66ec60059c564a0acb9ad9fbef0522ce1acbe6
#define GAMEMODE_VERSION	"0.0.8"

#define M_QUIT				"* Введите /q(uit), чтобы выйти из игры."

#define MAX_HOUSES			500
#define MAX_ITEMID			35
#define MAX_FACTION			500
#define MAX_INI_ENTRY_TEXT	80
#define MAX_INTERIORS		145
#define KickEx(%0)			playerInfo[%0][aForKick] = true

#define D_MSGBOX            1
#define D_LOGIN             2
#define D_REGISTER          5
#define D_ANIMLIST          10
#define D_INV               20
#define D_PHONE             30
#define D_ADDPROP           40

#define S_ACCEPT			1054
#define S_DENY              1055
#define S_MISSIONCOMPLETE	1058

#define COLOR_WHITE			0xFFFFFFFF
#define COLOR_LOGO          0x565656FF
#define COLOR_GRAY          0x919191FF
#define COLOR_GRAY2         0x565656FF
#define COLOR_PINK          0xFFC0CBFF
#define COLOR_RED           0xE91218FF
#define COLOR_YELLOW        0xe6e912FF
#define COLOR_GREEN         0x12e97bFF
#define COLOR_BLACK         0x000000FF

#define cOLOR_WHITE			FFFFFF
#define cOLOR_ORANGE        e94b12
#define cOLOR_GRAY          919191
#define cOLOR_GRAY2         565656
#define cOLOR_BLACK         000000
#define cOLOR_AQUA          68C4AF
#define cOLOR_GREEN         12e97b
#define cOLOR_RED           E91218
#define cOLOR_PINK          FFC0CB

enum GPSInfo
{
        zone_name[30],
    Float:zone_minx,
    Float:zone_miny,
    Float:zone_minz,
    Float:zone_maxx,
    Float:zone_maxy,
    Float:zone_maxz
}

new Float:Cities[][GPSInfo] =
{
	{"Los Santos",                    44.60,     -2892.90,	-242.90, 2997.00,  -768.00,  900.00},
	{"San Fierro",                    -2997.40,  -1115.50,  -242.90, -1213.90, 1659.60,  900.00},
	{"Las Venturas",                  869.40,    596.30,    -242.90, 2997.00,  2993.80,  900.00}
};

new Float:Zones[][GPSInfo] = {
	{ "'The Big Ear'",                -410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00},
	{ "Aldea Malvada",               -1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00},
	{ "Angel Pine",                  -2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00},
	{ "Arco del Oeste",               -901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00},
	{ "Avispa Country Club",         -2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00},
	{ "Avispa Country Club",         -2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00},
	{ "Avispa Country Club",         -2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00},
	{ "Avispa Country Club",         -2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10},
	{ "Avispa Country Club",         -2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10},
	{ "Avispa Country Club",         -2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70},
	{ "Back o Beyond",               -1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00},
	{ "Battery Point",               -2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00},
	{ "Bayside",                     -2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00},
	{ "Bayside Marina",              -2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00},
	{ "Beacon Hill",                  -399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50},
	{ "Blackfield",                    964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90},
	{ "Blackfield",                    964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90},
	{ "Blackfield Chapel",            1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90},
	{ "Blackfield Chapel",            1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90},
	{ "Blackfield Intersection",      1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90},
	{ "Blackfield Intersection",      1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90},
	{ "Blackfield Intersection",      1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90},
	{ "Blackfield Intersection",      1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90},
	{ "Blueberry",                     104.50,  -220.10,     2.30,   349.60,   152.20,   200.00},
	{ "Blueberry",                      19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00},
	{ "Blueberry Acres",              -319.60,  -220.10,     0.00,   104.50,   293.30,   200.00},
	{ "Caligula's Palace",            2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90},
	{ "Caligula's Palace",            2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90},
	{ "Calton Heights",              -2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00},
	{ "Chinatown",                   -2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00},
	{ "City Hall",                   -2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00},
	{ "Come-A-Lot",                   2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90},
	{ "Commerce",                     1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90},
	{ "Commerce",                     1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90},
	{ "Commerce",                     1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90},
	{ "Commerce",                     1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90},
	{ "Commerce",                     1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90},
	{ "Commerce",                     1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90},
	{ "Conference Center",            1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90},
	{ "Conference Center",            1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90},
	{ "Cranberry Station",           -2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00},
	{ "Creek",                        2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90},
	{ "Dillimore",                     580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00},
	{ "Doherty",                     -2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00},
	{ "Doherty",                     -2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00},
	{ "Downtown",                    -1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00},
	{ "Downtown",                    -1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00},
	{ "Downtown",                    -1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00},
	{ "Downtown",                    -1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00},
	{ "Downtown",                    -2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00},
	{ "Downtown",                    -1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00},
	{ "Downtown Los Santos",          1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90},
	{ "Downtown Los Santos",          1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90},
	{ "Downtown Los Santos",          1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90},
	{ "Downtown Los Santos",          1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90},
	{ "Downtown Los Santos",          1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90},
	{ "Downtown Los Santos",          1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90},
	{ "Downtown Los Santos",          1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90},
	{ "Downtown Los Santos",          1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90},
	{ "Downtown Los Santos",          1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90},
	{ "East Beach",                   2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90},
	{ "East Beach",                   2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90},
	{ "East Beach",                   2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90},
	{ "East Beach",                   2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90},
	{ "East Los Santos",              2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90},
	{ "East Los Santos",              2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90},
	{ "East Los Santos",              2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90},
	{ "East Los Santos",              2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90},
	{ "East Los Santos",              2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90},
	{ "East Los Santos",              2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90},
	{ "East Los Santos",              2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90},
	{ "Easter Basin",                -1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00},
	{ "Easter Basin",                -1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00},
	{ "Easter Bay Airport",          -1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00},
	{ "Easter Bay Airport",          -1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00},
	{ "Easter Bay Airport",          -1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00},
	{ "Easter Bay Airport",          -1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00},
	{ "Easter Bay Airport",          -1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00},
	{ "Easter Bay Airport",          -1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40},
	{ "Easter Bay Airport",          -1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40},
	{ "Easter Bay Airport",          -1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40},
	{ "Easter Bay Chemicals",        -1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00},
	{ "Easter Bay Chemicals",        -1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00},
	{ "El Castillo del Diablo",       -464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00},
	{ "El Corona",                    1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90},
	{ "El Corona",                    1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90},
	{ "El Quebrados",                -1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00},
	{ "Esplanade East",              -1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00},
	{ "Esplanade East",              -1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00},
	{ "Esplanade East",              -1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30},
	{ "Esplanade North",             -2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00},
	{ "Esplanade North",             -1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00},
	{ "Esplanade North",             -1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00},
	{ "Fallen Tree",                  -792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00},
	{ "Fallow Bridge",                 434.30,   366.50,     0.00,   603.00,   555.60,   200.00},
	{ "Fern Ridge",                    508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00},
	{ "Financial",                   -1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00},
	{ "Fisher's Lagoon",              1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00},
	{ "Flint Intersection",           -187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90},
	{ "Flint Range",                  -594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00},
	{ "Fort Carson",                  -376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00},
	{ "Foster Valley",               -2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00},
	{ "Foster Valley",               -2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00},
	{ "Frederick Bridge",             2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00},
	{ "Gant Bridge",                 -2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00},
	{ "Gant Bridge",                 -2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00},
	{ "Ganton",                       2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90},
	{ "Ganton",                       2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90},
	{ "Garcia",                      -2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00},
	{ "Garcia",                      -2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00},
	{ "Garver Bridge",               -1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90},
	{ "~yGarver Bridge",               -1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90},
	{ "Garver Bridge",               -1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30},
	{ "Glen Park",                    1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90},
	{ "Glen Park",                    1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90},
	{ "Glen Park",                    1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90},
	{ "Green Palms",                   176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00},
	{ "Greenglass College",            964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90},
	{ "Greenglass College",            964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90},
	{ "Hampton Barns",                 603.00,   264.30,     0.00,   761.90,   366.50,   200.00},
	{ "Hankypanky Point",             2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00},
	{ "Harry Gold Parkway",           1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90},
	{ "Hashbury",                    -2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00},
	{ "Hilltop Farm",                  967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00},
	{ "Hunter Quarry",                 337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70},
	{ "Idlewood",                     1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90},
	{ "Idlewood",                     1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90},
	{ "Idlewood",                     1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90},
	{ "Idlewood",                     1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90},
	{ "Idlewood",                     2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90},
	{ "Idlewood",                     1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90},
	{ "Jefferson",                    1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90},
	{ "Jefferson",                    2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90},
	{ "Jefferson",                    2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90},
	{ "Jefferson",                    2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90},
	{ "Jefferson",                    2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90},
	{ "Jefferson",                    2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90},
	{ "Julius Thruway East",          2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90},
	{ "Julius Thruway East",          2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90},
	{ "Julius Thruway East",          2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90},
	{ "Julius Thruway East",          2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90},
	{ "Julius Thruway North",         2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90},
	{ "Julius Thruway North",         2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90},
	{ "Julius Thruway North",         2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90},
	{ "Julius Thruway North",         1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90},
	{ "Julius Thruway North",         1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90},
	{ "Julius Thruway North",         1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90},
	{ "Julius Thruway North",         1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90},
	{ "Julius Thruway North",         1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90},
	{ "Julius Thruway South",         1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90},
	{ "Julius Thruway South",         2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90},
	{ "Julius Thruway West",          1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90},
	{ "Julius Thruway West",          1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90},
	{ "Juniper Hill",                -2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00},
	{ "Juniper Hollow",              -2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00},
	{ "K.A.C.C. Military Fuels",      2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90},
	{ "Kincaid Bridge",              -1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90},
	{ "Kincaid Bridge",              -1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90},
	{ "Kincaid Bridge",              -1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90},
	{ "King's",                      -2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00},
	{ "King's",                      -2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00},
	{ "King's",                      -2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00},
	{ "LVA Freight Depot",            1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90},
	{ "LVA Freight Depot",            1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90},
	{ "LVA Freight Depot",            1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90},
	{ "LVA Freight Depot",            1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90},
	{ "LVA Freight Depot",            1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90},
	{ "Las Barrancas",                -926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00},
	{ "Las Brujas",                   -365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00},
	{ "Las Colinas",                  1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90},
	{ "Las Colinas",                  2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90},
	{ "Las Colinas",                  2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90},
	{ "Las Colinas",                  2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90},
	{ "Las Colinas",                  2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90},
	{ "Las Colinas",                  2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90},
	{ "Las Colinas",                  2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90},
	{ "Las Payasadas",                -354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00},
	{ "Las Venturas Airport",         1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90},
	{ "Las Venturas Airport",         1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90},
	{ "Las Venturas Airport",         1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90},
	{ "Las Venturas Airport",         1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50},
	{ "Last Dime Motel",              1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90},
	{ "Leafy Hollow",                -1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00},
	{ "Lil' Probe Inn",                -90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00},
	{ "Linden Side",                  2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90},
	{ "Linden Station",               2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90},
	{ "Linden Station",               2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40},
	{ "Little Mexico",                1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90},
	{ "Little Mexico",                1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90},
	{ "Los Flores",                   2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90},
	{ "Los Flores",                   2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90},
	{ "Los Santos International",     1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90},
	{ "Los Santos International",     1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90},
	{ "Los Santos International",     1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90},
	{ "Los Santos International",     1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90},
	{ "Los Santos International",     1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90},
	{ "Los Santos International",     2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90},
	{ "Marina",                        647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90},
	{ "Marina",                        647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90},
	{ "Marina",                        807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90},
	{ "Market",                        787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90},
	{ "Market",                        952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90},
	{ "Market",                       1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90},
	{ "Market",                        926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90},
	{ "Market Station",                787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80},
	{ "Martin Bridge",                -222.10,   293.30,     0.00,  -122.10,   476.40,   200.00},
	{ "Missionary Hill",             -2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00},
	{ "Montgomery",                   1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00},
	{ "Montgomery",                   1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00},
	{ "Montgomery Intersection",      1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00},
	{ "Montgomery Intersection",      1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00},
	{ "Mulholland",                   1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90},
	{ "Mulholland",                   1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90},
	{ "Mulholland",                   1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90},
	{ "Mulholland",                   1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90},
	{ "Mulholland",                   1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90},
	{ "Mulholland",                   1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90},
	{ "Mulholland",                    768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90},
	{ "Mulholland",                    687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90},
	{ "Mulholland",                    737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90},
	{ "Mulholland",                   1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90},
	{ "Mulholland",                    952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90},
	{ "Mulholland",                    911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90},
	{ "Mulholland",                    861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90},
	{ "Mulholland Intersection",      1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90},
	{ "North Rock",                   2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00},
	{ "Ocean Docks",                  2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90},
	{ "Ocean Docks",                  2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90},
	{ "Ocean Docks",                  2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90},
	{ "Ocean Docks",                  2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90},
	{ "Ocean Docks",                  2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90},
	{ "Ocean Docks",                  2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90},
	{ "Ocean Docks",                  2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90},
	{ "Ocean Flats",                 -2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00},
	{ "Octane Springs",                338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00},
	{ "Old Venturas Strip",           2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90},
	{ "Palisades",                   -2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00},
	{ "Palomino Creek",               2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00},
	{ "Paradiso",                    -2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00},
	{ "Pershing Square",              1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90},
	{ "Pilgrim",                      2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90},
	{ "Pilgrim",                      2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90},
	{ "Pilson Intersection",          1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90},
	{ "Pirates in Men's Pants",       1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90},
	{ "Playa del Seville",            2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90},
	{ "Prickle Pine",                 1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90},
	{ "Prickle Pine",                 1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90},
	{ "Prickle Pine",                 1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90},
	{ "Prickle Pine",                 1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90},
	{ "Queens",                      -2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00},
	{ "Queens",                      -2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00},
	{ "Queens",                      -2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00},
	{ "Randolph Industrial Estate",   1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90},
	{ "Redsands East",                1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90},
	{ "Redsands East",                1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90},
	{ "Redsands East",                1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90},
	{ "Redsands West",                1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90},
	{ "Redsands West",                1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90},
	{ "Redsands West",                1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90},
	{ "Redsands West",                1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90},
	{ "Regular Tom",                  -405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00},
	{ "Richman",                       647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90},
	{ "Richman",                       647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90},
	{ "Richman",                       225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90},
	{ "Richman",                       225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90},
	{ "Richman",                        72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90},
	{ "Richman",                        72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90},
	{ "Richman",                       321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90},
	{ "Richman",                       321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90},
	{ "Richman",                       321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90},
	{ "Richman",                       321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90},
	{ "Robada Intersection",         -1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90},
	{ "Roca Escalante",               2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90},
	{ "Roca Escalante",               2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90},
	{ "Rockshore East",               2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90},
	{ "Rockshore West",               1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90},
	{ "Rockshore West",               2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90},
	{ "Rodeo",                          72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90},
	{ "Rodeo",                          72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90},
	{ "Rodeo",                         225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90},
	{ "Rodeo",                         225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90},
	{ "Rodeo",                         334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90},
	{ "Rodeo",                         312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90},
	{ "Rodeo",                         422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90},
	{ "Rodeo",                         558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90},
	{ "Rodeo",                         466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90},
	{ "Rodeo",                         422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90},
	{ "Rodeo",                         466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90},
	{ "Rodeo",                         334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90},
	{ "Royal Casino",                 2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90},
	{ "San Andreas Sound",            2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00},
	{ "Santa Flora",                 -2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00},
	{ "Santa Maria Beach",             342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90},
	{ "Santa Maria Beach",              72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90},
	{ "Shady Cabin",                 -1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00},
	{ "Shady Creeks",                -1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00},
	{ "Shady Creeks",                -2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00},
	{ "Sobell Rail Yards",            2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90},
	{ "Spinybed",                     2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90},
	{ "Starfish Casino",              2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90},
	{ "Starfish Casino",              2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90},
	{ "Starfish Casino",              2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90},
	{ "Temple",                       1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90},
	{ "Temple",                       1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90},
	{ "Temple",                       1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90},
	{ "Temple",                        952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90},
	{ "Temple",                       1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90},
	{ "Temple",                       1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90},
	{ "The Camel's Toe",              2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90},
	{ "The Clown's Pocket",           2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90},
	{ "The Emerald Isle",             2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90},
	{ "The Farm",                    -1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90},
	{ "The Four Dragons Casino",      1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90},
	{ "The High Roller",              1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90},
	{ "The Mako Span",                1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00},
	{ "The Panopticon",               -947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00},
	{ "The Pink Swan",                1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90},
	{ "The Sherman Dam",              -968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00},
	{ "The Strip",                    2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90},
	{ "The Strip",                    2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90},
	{ "The Strip",                    2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90},
	{ "The Strip",                    2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90},
	{ "The Visage",                   1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90},
	{ "The Visage",                   1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90},
	{ "Unity Station",                1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50},
	{ "Valle Ocultado",               -936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00},
	{ "Verdant Bluffs",                930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90},
	{ "Verdant Bluffs",               1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90},
	{ "Verdant Bluffs",               1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90},
	{ "Verdant Meadows",                37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00},
	{ "Verona Beach",                  647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90},
	{ "Verona Beach",                  930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90},
	{ "Verona Beach",                  851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90},
	{ "Verona Beach",                 1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90},
	{ "Verona Beach",                 1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90},
	{ "Vinewood",                      787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90},
	{ "Vinewood",                      787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90},
	{ "Vinewood",                      647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90},
	{ "Vinewood",                      647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90},
	{ "Whitewood Estates",             883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90},
	{ "Whitewood Estates",            1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90},
	{ "Willowfield",                  1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90},
	{ "Willowfield",                  2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90},
	{ "Willowfield",                  2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90},
	{ "Willowfield",                  2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90},
	{ "Willowfield",                  2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90},
	{ "Willowfield",                  2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90},
	{ "Willowfield",                  2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90},
	{ "~~Yellow Bell Station",          1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00},
	// Main Zones
	{ "Los Santos",                     44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00},
	{ "Las Venturas",                  869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00},
	{ "Bone County",                  -480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00},
	{ "Tierra Robada",               -2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00},
	{ "Tierra Robada",               -1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00},
	{ "San Fierro",                  -2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00},
	{ "Red County",                  -1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00},
	{ "Flint County",                -1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00},
	{ "Whetstone",                   -2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}
};

stock GetZone(Float:x,Float:y,Float:z)
{
	for(new i=0;i<sizeof(Zones);i++)
	{
		if(x > Zones[i][zone_minx] && y > Zones[i][zone_miny] && z > Zones[i][zone_minz] && x < Zones[i][zone_maxx] && y < Zones[i][zone_maxy] && z < Zones[i][zone_maxz])
		return i;
	}
	return false;
}

stock GetCity(Float:x,Float:y,Float:z)
{
	for(new i=0;i<sizeof(Cities);i++)
	{
		if(x > Cities[i][zone_minx] && y > Cities[i][zone_miny] && z > Cities[i][zone_minz] && x < Cities[i][zone_maxx] && y < Cities[i][zone_maxy] && z < Cities[i][zone_maxz])
		return i;
	}
	return false;
}

stock SPD(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
    ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
    SetPVarInt(playerid, "USEDIALOGID", dialogid);
    return 1;
}
#define ShowPlayerDialog SPD

enum fInfo{
	fID,
	fOWID,
	fName[30]
};

new factionInfo[MAX_FACTION][fInfo];

enum itInfo{
	itObjectID,
	itPrice,
	itName[30],
	itDesc[120]
};
new itemInfo[MAX_ITEMID][itInfo] = {
	{1575, 10, "Ключи от двери", "Можно передать другому человеку"},
	{1575, 10, "Ключи от т/с", "С их помощью можно управлять дверьми на расстоянии и заводить двигатель"},//1
	{1212, 1, "Деньги", "Валюта США"},
	{2768, 2, "Гамбургер", "Две мясные котлеты гриль. Специальный соус сыр. Огурцы салат и лук. Всё на булочке с кунжутом. Только так и это бик мак"},
	{1242, 150, "Бронежилет","Made in USA"},
	{19418, 30, "Наручники", "Маркировка SFPD"},//5
	{367, 300, "Фотоаппарат","Made in USA"},
	{365, 10, "Балончик с краской","Made in USA"},
	{336, 10, "Бейсбольная бита","Made in USA"},
	{334, 40, "Полицейская дубинка","Made in USA"},
	{325, 20, "Букет цветов","Made in USA"},//10
	{339, 450, "Катана","Made in JAPAN"},
	{337, 35, "Лопата","Made in USA"},
	{335, 20, "Охотничий нож","Made in USA"},
	{333, 50, "Клюшка для гольфа","Made in USA"},
	{366, 200, "Огнетушитель","Made in USA"},//15
	{348, 2000, "Desert Eagle","Made in USA"},
	{346, 2000, "9mm","Made in USA"},
	{347, 2000, "Tazer","Made in USA"},
	{352, 2000, "UZI","Made in USA"},
	{353, 2000, "MP5","Made in USA"},//20
	{372, 2000, "TEC-9","Made in USA"},
	{349, 2000, "Shotgun","Made in USA"},
	{351, 2000, "Combat Shotgun","Made in USA"},
	{355, 2000, "AK-47","Made in USSR"},
	{356, 2000, "M4","Made in USA"},//25
	{357, 2000, "Country Rifle","Made in USA"},
	{358, 2000, "Sniper Rifle","Made in USA"},
	{18868, 150, "Мобильный телефон","GayPhone"},
	{330, 150, "Рация","Охотничья рация"},
	{1575, 10, "Паспорт","Паспорт гражданина США"},//30
	{3027, 30, "Наркотики","Незаконное наркотическое вещество"},
	{1581, 10, "Карта допуска", "Белая пластиковая карта с магнитной лентой"},
	{19347, 10, "Жетон полицейского","Маркировка SAPD"},
	{2704, 100, "Одежда","Пам-пам-пам"}
};

#define MAX_PERMISSIONS 27
enum perInfo
{
	perName[60],
	perDesc[128]
};

new permissionInfo[MAX_PERMISSIONS][perInfo] =
{
	{"Управлять разрешениями", "/setperm"},
	{"Удалять аккаунты", "Недоступно"},//1
	{"Изменять аккаунты", "Недоступно"},
	{"Блокировать аккаунты", "/ban"},
	{"Блокировать чат", "/mute"},
	{"Выкидывать с сервера", "/kick"},//5
	{"Выдавать предупреждения", "/warn"},
	{"Удалять персонажей", "Недоступно"},
	{"Изменять персонажей", "Недоступно"},
	{"Управлять инвентарем", "Недоступно"},
	{"Удалять фракции", "/delfaction"},//10
	{"Создавать фракции", "/createfaction"},
	{"Изменять фракции", "/setfactionname"},
	{"Управлять фракциями", "/setleader"},
	{"Удалять недвижимость", "/delhouse"},
	{"Создавать недвижимость", "/createhouse"},//15
	{"Изменять недвижимость", "/hname, /hdesc"},
	{"Управлять недвижимостью", "/lock"},
	{"Удалять транспорт", "Недоступно"},
	{"Создавать транспорт", "Недоступно"},
	{"Изменять транспорт", "Недоступно"},//20
	{"Управлять транспортом", "Недоступно"},
	{"Разблокировать аккаунты", "/unban"},
	{"Выдавать временный скин", "/setskin"},
	{"Телепортироваться к игрокам", "/teleport"},
	{"Просматривать интерьеры", "/showint"},//25
	{"Перезапускать сервер", "/restart"}
};

enum iInfo{
	iName[30],
	iInterior,
	Float:iX,
	Float:iY,
	Float:iZ,
	iClass,
	iRooms
};

new interiorInfo[MAX_INTERIORS][iInfo] = {
	{"Spawn",0,-1976.0231,137.8876,27.6875,0,1},
	{"Дом",3,235.508994,1189.169897,1080.339966,0,1},
	{"Дом",2,225.756989,1240.000000,1082.149902 ,0,1},
	{"Дом",1,223.1405,1287.0768,1082.1406,0,1},
	{"Дом",7,225.630997,1022.479980,1084.069946,0,1},
	{"Дом",15,295.138977,1474.469971,1080.519897,0,1},
	{"Дом",15,328.493988,1480.589966,1084.449951,0,1},
	{"Дом",15,385.803986,1471.769897,1080.209961,0,1},
	{"Дом",15,2220.26,-1148.01,1025.80,0,1},
	{"Дом",2,2451.77,-1699.80,1013.51 ,0,1},
	{"Дом",9,2251.85,-1138.16,1050.63,0,1},
	{"Дом",10,2260.76,-1210.45,1049.02,0,1},
	{"Дом",3,2496.65,-1696.55,1014.74 ,0,1},
	{"Дом",5,1299.14,-794.77,1084.00,0,1},
	{"Дом",10,2262.83,-1137.71,1050.63 ,0,1},
	{"Дом",9,2365.42,-1131.85,1050.88 ,0,1},
	{"Дом",12,2324.33,-1144.79,1050.71 ,0,1},
	{"Дом",5,2233.6919,-1112.8107,1050.8828 ,0,1},
	{"Дом",9,2319.1272,-1023.9562,1050.2109,0,1},
	{"Дом",5,239.2819,1114.1991,1080.9922 ,0,1},
	{"Дом",12,446.3247,509.9662,1001.4195 ,0,1},
	{"Дом",2,446.626,1397.738,1084.3047,0,1},
	{"Дом",4,261.1165,1287.2197,1080.2578,0,1},
	{"Дом",4,306.1966,307.819,1003.3047,0,1},
	{"Дом",10,24.3769,1341.1829,1084.375,0,1},
	{"Дом",4,221.6766,1142.4962,1082.6094,0,1},
	{"Дом",4,-262.1759,1456.6158,1084.3672 ,0,1},
	{"Дом",6,234.2826,1065.229,1084.2101 ,0,1},
	{"Дом",6, -68.5145,1353.8485,1080.2109,0,1},
	{"Дом",15,-285.2511,1471.197,1084.375 ,0,1},
	{"Дом",8,-42.5267,1408.23,1084.4297 ,0,1},
	{"Дом",9,84.9244,1324.2983,1083.8594 ,0,1},
	{"Дом",5,22.7322,1404.7037,1084.4297 ,0,1},
	{"Дом",1,244.6048,304.8997,999.1484 ,0,1},
	{"Дом",1,2216.1282,-1076.3052,1050.4844,0,1},
	{"24\"7 1",17,-25.884498,-185.868988,1003.546875,0,1},
	{"24\"7 2",10,6.091179,-29.271898,1003.549438,0,1},
	{"24\"7 3",18,-30.946699,-89.609596,1003.546875,0,1},
	{"24\"7 4",16,-25.132598,-139.066986,1003.546875,0,1},
	{"24\"7 5",4,-27.312299,-29.277599,1003.557250,0,1},
	{"24\"7 6",6,-26.691598,-55.714897,1003.546875,0,1},
	{"Airport ticket desk",14,-1827.147338,7.207417,1061.143554,0,1},
	{"Airport baggage reclaim",14,-1861.936889,54.908092,1061.143554,0,1},
	{"Shamal",1,1.808619,32.384357,1199.593750,0,1},
	{"Andromada",9,315.745086,984.969299,1958.919067,0,1},
	{"Ammunation 1",1,286.148986,-40.644397,1001.515625,0,1},
	{"Ammunation 2",4,286.800994,-82.547599,1001.515625,0,1},
	{"Ammunation 3",6,296.919982,-108.071998,1001.515625,0,1},
	{"Ammunation 4",7,314.820983,-141.431991,999.601562,0,1},
	{"Ammunation 5",6,316.524993,-167.706985,999.593750,0,1},
	{"Ammunation booths",7,302.292877,-143.139099,1004.062500,0,1},
	{"Ammunation range",7,298.507934,-141.647048,1004.054748,0,1},
	{"Blastin fools hallway",3,1038.531372,0.111030,1001.284484,0,1},
	{"Budget inn motel room",12,444.646911,508.239044,1001.419494,0,1},
	{"Jefferson motel",15,2215.454833,-1147.475585,1025.796875,0,1},
	{"Off track betting shop",3,833.269775,10.588416,1004.179687,0,1},
	{"Sex shop",3,-103.559165,-24.225606,1000.718750,0,1},
	{"Meat factory",1,963.418762,2108.292480,1011.030273,0,1},
	{"Zero's RC shop",6,-2240.468505,137.060440,1035.414062,0,1},
	{"Dillimore gas station",0,663.836242,-575.605407,16.343263,0,1},
	{"Catigula's basement",1,2169.461181,1618.798339,999.976562,0,1},
	{"FDC Janitors room",10,1889.953369,1017.438293,31.882812,0,1},
	{"Woozie's office",1,-2159.122802,641.517517,1052.381713,0,1},
	{"Binco",15,207.737991,-109.019996,1005.132812,0,1},
	{"Didier sachs",14,204.332992,-166.694992,1000.523437,0,1},
	{"Prolaps",3,207.054992,-138.804992,1003.507812,0,1},
	{"Suburban",1,203.777999,-48.492397,1001.804687,0,1},
	{"Victim",5,226.293991,-7.431529,1002.210937,0,1},
	{"Zip",18,161.391006,-93.159156,1001.804687,0,1},
	{"Club",17,493.390991,-22.722799,1000.679687,0,1},
	{"Bar",11,501.980987,-69.150199,998.757812,0,1},
	{"Lil' probe inn",18,-227.027999,1401.229980,27.765625,0,1},
	{"Jay's diner",4,457.304748,-88.428497,999.554687,0,1},
	{"Gant bridge diner",5,454.973937,-110.104995,1000.077209,0,1},
	{"Secret valley diner",6,435.271331,-80.958938,999.554687,0,1},
	{"World of coq",1,681.557861,-455.680053,-25.609874,0,1},
	{"Welcome pump",3,1038.531372,0.111030,1001.284484,0,1},
	{"Burger shot",10,375.962463,-65.816848,1001.507812,0,1},
	{"Cluckin' bell",9,369.579528,-4.487294,1001.858886,0,1},
	{"Well stacked pizza",5,373.825653,-117.270904,1001.499511,0,1},
	{"Rusty browns donuts",17,381.169189,-188.803024,1000.632812,0,1},
	{"Denise room",1,244.411987,305.032989,999.148437,0,1},
	{"Katie room",2,266.7554,304.8581,999.1484,0,1},
	{"Helena room",3,-25.884498,-185.868988,1003.546875,0,1},
	{"Michelle room",4,302.180999,300.722991,999.148437,0,1},
	{"Barbara room",5,322.197998,302.497985,999.148437,0,1},
	{"Millie room",6,346.870025,309.259033,999.155700,0,1},
	{"Sherman dam",17,-959.564392,1848.576782,9.000000,0,1},
	{"Planning dept.",3,384.808624,173.804992,1008.382812,0,1},
	{"Area 51",0,223.431976,1872.400268,13.734375,0,1},
	{"LS gym",5,772.111999,-3.898649,1000.728820,0,1},
	{"SF gym",6,774.213989,-48.924297,1000.585937,0,1},
	{"LV gym",7,773.579956,-77.096694,1000.655029,0,1},
	{"B Dup's house",3,1527.229980,-11.574499,1002.097106,0,1},
	{"B Dup's crack pad",2,1523.509887,-47.821197,1002.130981,0,1},
	{"Cj's house",3,2496.049804,-1695.238159,1014.742187,0,1},
	{"Madd Doggs mansion",5,1267.663208,-781.323242,1091.906250,0,1},
	{"Og Loc's house",3,513.882507,-11.269994,1001.565307,0,1},
	{"Ryders house",2,2454.717041,-1700.871582,1013.51519,0,1},
	{"Sweet's house",1,2527.654052,-1679.388305,1015.498596,0,1},
	{"Crack factory",2,2543.462646,-1308.379882,1026.728393,0,1},
	{"Big spread ranch",3,1212.019897,-28.663099,1000.953125,0,1},
	{"Fanny batters",6,761.412963,1440.191650,1102.703125,0,1},
	{"Strip club",2,1204.809936,-11.586799,1000.921875,0,1},
	{"Strip club private room",2,1204.809936,13.897239,1000.921875,0,1},
	{"Unnamed brothel",3,942.171997,-16.542755,1000.929687,0,1},
	{"Tiger skin brothel",3,964.106994,-53.205497,1001.124572,0,1},
	{"Pleasure domes",3,-2640.762939,1406.682006,906.460937,0,1},
	{"Liberty city outside",1,-729.276000,503.086944,1371.971801,0,1},
	{"Liberty city inside",1,-794.806396,497.738037,1376.195312,0,1},
	{"Gang house",5,2350.339843,-1181.649902,1027.976562,0,1},
	{"Colonel Furhberger's",8,2807.619873,-1171.899902,1025.570312,0,1},
	{"Crack den",5,318.564971,1118.209960,1083.882812,0,1},
	{"Warehouse 1",1,1412.639892,-1.787510,1000.924377,0,1},
	{"Warehouse 2",18,1302.519897,-1.787510,1001.028259,0,1},
	{"Sweets garage",0,2522.000000,-1673.383911,14.866223,0,1},
	{"Lil' probe inn toilet",18,-221.059051,1408.984008,27.773437,0,1},
	{"Unused safe house",12,2324.419921,-1145.568359,1050.710083,0,1},
	{"RC Battlefieldr",10,-975.975708,1060.983032,1345.671875,0,1},
	{"Barber 1",2,411.625976,-21.433298,1001.804687,0,1},
	{"Barber 2",3,418.652984,-82.639793,1001.804687,0,1},
	{"Barber 3",12,412.021972,-52.649898,1001.898437,0,1},
	{"Tatoo parlour 1",16,-204.439987,-26.453998,1002.273437,0,1},
	{"Tatoo parlour 2",17,-204.439987,-8.469599,1002.273437,0,1},
	{"Tatoo parlour 3",3,-204.439987,-43.652496,1002.273437,0,1},
	{"LS police HQ",6,246.783996,63.900199,1003.640625,0,1},
	{"SF police HQ",10,246.375991,109.245994,1003.218750,0,1},
	{"LV police HQ",3,288.745971,169.350997,1007.171875,0,1},
	{"Car school",3,-2029.798339,-106.675910,1035.171875,0,1},
	{"8-Track",7,-1398.065307,-217.028900,1051.115844,0,1},
	{"Bloodbowl",15,-1398.103515,937.631164,1036.479125,0,1},
	{"Dirt track",4,-1444.645507,-664.526000,1053.572998,0,1},
	{"Kickstart",14,-1465.268676,1557.868286,1052.531250,0,1},
	{"Vice stadium",1,-1401.829956,107.051300,1032.273437,0,1},
	{"SF Garage",0,-1790.378295,1436.949829,7.187500,0,1},
	{"LS Garage",0,1643.839843,-1514.819580,13.566620,0,1},
	{"SF Bomb shop",0,-1685.636474,1035.476196,45.210937,0,1},
	{"Blueberry warehouse",0,76.632553,-301.156829,1.578125,0,1},
	{"LV Warehouse 1",0,1059.895996,2081.685791,10.820312,0,1},
	{"LV Warehouse 2 (hidden part)",0,1059.180175,2148.938720,10.820312,0,1},
	{"Catigula's hidden room",1,2131.507812,1600.818481,1008.359375,0,1},
	{"Bank",0,2315.952880,-1.618174,26.742187,0,1},
	{"Bank (behind desk)",0,2319.714843,-14.838361,26.749565,0,1},
	{"LS Atruim",18,1710.433715,-1669.379272,20.225049,0,1},
	{"Bike School",3,1494.325195,1304.942871,1093.289062,0,1}
};

enum mInfo
{
	mName[MAX_PLAYER_NAME],
	mPrice
};

new aVehicleNames[212][mInfo] = {	// Vehicle Names - Betamaster
	{"Landstalker",26500},
	{"Bravura",3000},
	{"Buffalo",60000},
	{"Linerunner",50000},
	{"Perrenial",4500},
	{"Sentinel",35000},
	{"Dumper",80000},
	{"Firetruck",50000},
	{"Trashmaster",35000},
	{"Stretch",60000},
	{"Manana",3500},
	{"Infernus",12000},
	{"Voodoo",17000},
	{"Pony",5000},
	{"Mule",6000},
	{"Cheetah",80000},
	{"Ambulance",50000},
	{"Leviathan",300000},
	{"Moonbeam",5000},
	{"Esperanto",8500},
	{"Taxi",3000},
	{"Washington",40000},
	{"Bobcat",27500},
	{"Mr Whoopee",14000},
	{"BF Injection",30000},
	{"Hunter",1000000},
	{"Premier",45000},
	{"Enforcer",100000},
	{"Securicar",100000},
	{"Banshee",75000},
	{"Predator",500000},
	{"Bus",50000},
	{"Rhino",2000000},
	{"Barracks",50000},
	{"Hotknife",100000},
	{"Trailer 1",20000}, //artict1
	{"Previon",6500},
	{"Coach",50000},
	{"Cabbie",25000},
	{"Stallion",18000},
	{"Rumpo",5000},
	{"RC Bandit",1000},
	{"Romero",30000},
	{"Packer",75000},
	{"Monster",100000},
	{"Admiral",30000},
	{"Squalo",140000},
	{"Seasparrow",1000000},
	{"Pizzaboy",500},
	{"Tram",1000000},
	{"Trailer 2",20000}, //artict2
	{"Turismo",105000},
	{"Speeder",150000},
	{"Reefer",50000},
	{"Tropic",100000},
	{"Flatbed",40000},
	{"Yankee",35000},
	{"Caddy",7000},
	{"Solair",35000},
	{"Berkley's RC Van",7000},
	{"Skimmer",150000},
	{"PCJ-600",10000},
	{"Faggio",1500},
	{"Freeway",12000},
	{"RC Baron",5000},
	{"RC Raider",5000},
	{"Glendale",8000},
	{"Oceanic",10000},
	{"Sanchez",10000},
	{"Sparrow",1000000},
	{"Patriot",50000},
	{"Quad",8000},
	{"Coastguard",4500},
	{"Dinghy",30000},
	{"Hermes",15000},
	{"Sabre",27000},
	{"Rustler",1000000},
	{"ZR-350",80000},
	{"Walton",5000},
	{"Regina",20000},
	{"Comet",60000},
	{"BMX",500},
	{"Burrito",10000},
	{"Camper",6500},
	{"Marquis",50000},
	{"Baggage",15000},
	{"Dozer",100000},
	{"Maverick",200000},
	{"News Chopper",185000},
	{"Rancher",30000},
	{"FBI Rancher",30000},
	{"Virgo",13500},
	{"Greenwood",20000},
	{"Jetmax",170000},
	{"Hotring",20000},
	{"Sandking",105000},
	{"Blista Compact",24000},
	{"Police Maverick",200000},
	{"Boxville",12500},
	{"Benson",8000},
	{"Mesa",30000},
	{"RC Goblin",5000},
	{"Hotring Racer A",100000}, //hotrina
	{"Hotring Racer B",100000}, //hotrinb
	{"Bloodring Banger",100000},
	{"Rancher",30000},
	{"Super GT",80000},
	{"Elegant",35000},
	{"Journey",80000},
	{"Bike",300},
	{"Mountain Bike",700},
	{"Beagle",1000000},
	{"Cropdust",1000000},
	{"Stunt",1000000},
	{"Tanker",50000}, //petro
	{"Roadtrain",50000},
	{"Nebula",17000},
	{"Majestic",15500},
	{"Buccaneer",22000},
	{"Shamal",2000000},
	{"Hydra",2000000},
	{"FCR-900",30000},
	{"NRG-500",50000},
	{"HPV1000",1000000},
	{"Cement Truck",50000},
	{"Tow Truck",1000000},
	{"Fortune",30000},
	{"Cadrona",32000},
	{"FBI Truck",30000},
	{"Willard",100000},
	{"Forklift",25000},
	{"Tractor",10000},
	{"Combine",20000},
	{"Feltzer",55000},
	{"Remington",27000},
	{"Slamvan",30000},
	{"Blade",25000},
	{"Freight",100000},
	{"Streak",100000},
	{"Vortex",100000},
	{"Vincent",31000},
	{"Bullet",100000},
	{"Clover",6000},
	{"Sadler",7000},
	{"Firetruck LA",35000}, //firela
	{"Hustler",70000},
	{"Intruder",28000},
	{"Primo",26000},
	{"Cargobob",100000},
	{"Tampa",18000},
	{"Sunrise",29500},
	{"Merit",31000},
	{"Utility",100000},
	{"Nevada",100000},
	{"Yosemite",37000},
	{"Windsor",40000},
	{"Monster A",150000}, //monstera
	{"Monster B",150000}, //monsterb
	{"Uranus",50000},
	{"Jester",55000},
	{"Sultan",57000},
	{"Stratum",50000},
	{"Elegy",70000},
	{"Raindance",100000},
	{"RC Tiger",100000},
	{"Flash",49000},
	{"Tahoma",28000},
	{"Savanna",24000},
	{"Bandito",100000},
	{"Freight Flat",100000}, //freiflat
	{"Streak Carriage",100000}, //streakc
	{"Kart",100000},
	{"Mower",100000},
	{"Duneride",100000},
	{"Sweeper",100000},
	{"Broadway",22000},
	{"Tornado",21000},
	{"AT-400",100000},
	{"DFT-30",40000},
	{"Huntley",50000},
	{"Stafford",55000},
	{"BF-400",12000},
	{"Newsvan",30000},
	{"Tug",100000},
	{"Trailer 3",100000}, //petrotr
	{"Emperor",27000},
	{"Wayfarer",18000},
	{"Euros",65000},
	{"Hotdog",29000},
	{"Club",45000},
	{"Freight Carriage",100000}, //freibox
	{"Trailer 3",100000}, //artict3
	{"Andromada",100000},
	{"Dodo",100000},
	{"RC Cam",100000},
	{"Launch",100000},
	{"Police Car (LSPD)",100000},
	{"Police Car (SFPD)",100000},
	{"Police Car (LVPD)",100000},
	{"Police Ranger",100000},
	{"Picador",17500},
	{"S.W.A.T. Van",100000},
	{"Alpha",75000},
	{"Phoenix",4800},
	{"Glendale",100000},
	{"Sadler",100000},
	{"Luggage Trailer A",100000}, //bagboxa
	{"Luggage Trailer B",100000}, //bagboxb
	{"Stair Trailer",100000}, //tugstair
	{"Boxville",100000},
	{"Farm Plow",100000}, //farmtr1
	{"Utility Trailer",100000} //utiltr1
};

enum pInfo {
	aID,
	aLogin[MAX_PLAYER_NAME],
	aPass[50],
	aEMail[50],
	aBaned,
	aMuted,
	aBans,
	aMutes,
	aWarns,
	aKicks,
	aWrongPass,
	pID,
	pName[MAX_PLAYER_NAME],
	pSkin,
	pFaction,
	pHomeID,
	Float: pExitX,
	Float: pExitY,
	Float: pExitZ,
	pExitVW,
	pExitInt,
	pExp,
	pLvl,
	bool: aLogged,
	bool: aForKick,
	Text3D: pMDO[3]
};

new playerInfo[MAX_PLAYERS][pInfo];

enum hInfo{
	hID,
	hOWID,
	hInteriorID,
	hPrice,
	hSell,
	hName[30],
	hDesc[256],
	Float: hX,
	Float: hY,
	Float: hZ,
	hVW,
	hInterior,
	hLock,
	Text3D:hText,
	hMapIcon
};

new houseInfo[MAX_HOUSES][hInfo];

enum cInfo{
	cName[30]
};

new classInfo[1][cInfo] = {
	{"Дом"}
};

enum vInfo{
	vArID,
	vID,
	vModelID,
	Float: vX,
	Float: vY,
	Float: vZ,
	Float: vA,
	vColor1,
	vColor2,
	vRespawn
};

new vehicleInfo[MAX_VEHICLES][vInfo];

AntiDeAMX()
{
    new a[][] =
    {
        "Unarmed (Fist)",
        "Brass K"
    };
    #pragma unused a
}

new syncTimeTimer;
forward payDay();

public payDay()
{
    for(new i;i<MAX_PLAYERS;i++)
	{
	    if(!playerInfo[i][aLogged]) continue;
	    addItem(i, 2, 300, "0");
	    PlayerPlaySound(i, S_MISSIONCOMPLETE, 0.0, 0.0, 10.0);
		//if(playerInfo[i][pHomeID] !=0) playerInfo[i][pMoney] -= houseInfo[getPropArrayID(playerInfo[i][pHomeID])][hPrice]*0.01;
	    playerInfo[i][pExp]++;
		if(playerInfo[i][pLvl]*4 == playerInfo[i][pExp])
		{
			playerInfo[i][pLvl]++;
			playerInfo[i][pExp]=0;
			SetPlayerScore(i, playerInfo[i][pLvl]);
		}
	}
	new hour,minute,second;
	gettime(hour,minute,second);
	SetWorldTime(hour);
	SetWeather(random(5));
	
	KillTimer(syncTimeTimer);
	syncTimeTimer = SetTimer("payDay", 3600000-minute*59*1000, 1);
	printf("PayDay через: ", 3600000-minute*60*1000);
	return 1;
}

public OnGameModeInit()
{
    mysql_debug(1);
	mysql_connect(SQL_HOST, SQL_USER,SQL_DB, SQL_PASS);
    mysql_query("SET CHARSET cp1251");
	mysql_query("SET COLLATION_CONNECTION=cp1251");
	mysql_query("SET CHARACTER_SET_CLIENT=cp1251");
	mysql_query("SET CHARACTER_SET_RESULTS=cp1251");
	mysql_query("SET NAMES cp1251;");
    mysql_query("SET SESSION character_set_server=cp1251;");
	AntiDeAMX();
	payDay();
	DisableInteriorEnterExits();
	ShowPlayerMarkers(0);
	EnableStuntBonusForAll(0);
	SetNameTagDrawDistance(5);
	LimitGlobalChatRadius(20);
	ManualVehicleEngineAndLights();
	SendRconCommand("hostname "SERVER_NAME" | Server: "SERVER_NUMBER);
	SendRconCommand("mapname "SERVER_COUNTRY);
	SetGameModeText(GAMEMODE_NAME" v"GAMEMODE_VERSION);
	AddPlayerClass( 0, -1976.0231,137.8876,27.6875, 0.0, 0, 0, 0, 0, 0, 0);
	
	mysql_query("SELECT * FROM `houses`");
    mysql_store_result();
    for(new i;i<mysql_num_rows();i++)
	{
	    mysql_fetch_row_format(strSQLQuery, "|");
	    sscanf(strSQLQuery, "p<|>iiiiis[30]s[256]fffiii",
	        houseInfo[i][hID],
			houseInfo[i][hOWID],
			houseInfo[i][hInteriorID],
			houseInfo[i][hPrice],
			houseInfo[i][hSell],
			houseInfo[i][hName],
			houseInfo[i][hDesc],
			houseInfo[i][hX],
			houseInfo[i][hY],
			houseInfo[i][hZ],
			houseInfo[i][hVW],
			houseInfo[i][hInterior],
			houseInfo[i][hLock]);
        
		houses++;
		updateProp(i);
	}
	mysql_free_result();
	
	mysql_query("SELECT * FROM `vehicles`");
    mysql_store_result();
    for(new i;i<mysql_num_rows();i++)
	{
	    mysql_fetch_row_format(strSQLQuery, "|");
	    sscanf(strSQLQuery, "p<|>iiffffiii",
	        	vehicleInfo[i][vID],
				vehicleInfo[i][vModelID],
				vehicleInfo[i][vX],
				vehicleInfo[i][vY],
				vehicleInfo[i][vZ],
				vehicleInfo[i][vA],
				vehicleInfo[i][vColor1],
				vehicleInfo[i][vColor2],
				vehicleInfo[i][vRespawn]);
				
		
		vehicleInfo[i][vArID] = CreateVehicle(vehicleInfo[i][vModelID], vehicleInfo[i][vX], vehicleInfo[i][vY], vehicleInfo[i][vZ], vehicleInfo[i][vA], vehicleInfo[i][vColor1], vehicleInfo[i][vColor2], vehicleInfo[i][vRespawn]);
        SetVehicleNumberPlate(vehicleInfo[i][vArID], vehicleInfo[i][vID]);
        SetVehicleToRespawn(vehicleInfo[i][vArID]);
		vehicles++;
	}
	mysql_free_result();
	return 1;
}

public OnGameModeExit()
{
    mysql_close();
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	
	return 1;
}

stock RemovePlayerInfo(playerid)
{
    playerInfo[playerid][aWrongPass] = 0;
    playerInfo[playerid][aLogged] = false;
    playerInfo[playerid][aForKick] = false;
	return 1;
}

public OnPlayerConnect(playerid)
{
    RemovePlayerInfo(playerid);
	GetPlayerName(playerid, playerInfo[playerid][aLogin], 30);
	SetPlayerColor(playerid, COLOR_BLACK);
    format(strIOText,sizeof(strIOText),"SELECT * FROM `accounts` WHERE `name` = '%s' LIMIT 1", playerInfo[playerid][aLogin]);
    mysql_query(strIOText);
    mysql_store_result();
    if(mysql_num_rows() == 1)//Авторизация
	{
		format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Добро пожаловать на {"#cOLOR_AQUA"}"#SERVER_NAME"{"#cOLOR_GRAY"}.\nВаш логин: {"#cOLOR_AQUA"}%s{"#cOLOR_GRAY"}\n\nДанный аккаунт {"#cOLOR_AQUA"}зарегистрирован{"#cOLOR_GRAY"}.\nЧтобы авторизоваться введите пароль:", playerInfo[playerid][aLogin] );
		ShowPlayerDialog(playerid,D_LOGIN,DIALOG_STYLE_PASSWORD,"{"#cOLOR_ORANGE"}Авторизация",strTextPlayerDialog,"Ввод","");
	}
	else//Регистрация
	{
		format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Добро пожаловать на {"#cOLOR_AQUA"}"#SERVER_NAME"{"#cOLOR_GRAY"}.\nВаш логин: {"#cOLOR_AQUA"}%s{"#cOLOR_GRAY"}\n\nАккаунт с данным именем {"#cOLOR_AQUA"}не зарегистрирован{"#cOLOR_GRAY"}.\nЧтобы зарегистрироваться введите пароль:", playerInfo[playerid][aLogin] );
		ShowPlayerDialog(playerid,D_REGISTER,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Регистрация",strTextPlayerDialog,"Ввод","");
	}
	DC_CMD(playerid, "/cc");
	mysql_free_result();
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
    if(!playerInfo[playerid][aLogged]) return 1;
	format(strSQLQuery,sizeof(strSQLQuery),"UPDATE `accounts` SET `name`=\"%s\",", playerInfo[playerid][aLogin]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `pass`=\"%s\",",strSQLQuery,playerInfo[playerid][aPass]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `email`=\"%s\",",strSQLQuery,playerInfo[playerid][aEMail]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `baned`=\"%d\",",strSQLQuery,playerInfo[playerid][aBaned]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `muted`=\"%d\",",strSQLQuery,playerInfo[playerid][aMuted]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `bans`=\"%d\",",strSQLQuery,playerInfo[playerid][aBans]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `warns`=\"%d\",",strSQLQuery,playerInfo[playerid][aWarns]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `mutes`=\"%d\",",strSQLQuery,playerInfo[playerid][aMutes]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `kicks`=\"%d\"",strSQLQuery,playerInfo[playerid][aKicks]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s WHERE (`id`=\"%d\")",strSQLQuery,playerInfo[playerid][aID]);
	mysql_query(strSQLQuery);
	
	GetPlayerPos(playerid, playerInfo[playerid][pExitX], playerInfo[playerid][pExitY], playerInfo[playerid][pExitZ]);
	playerInfo[playerid][pExitVW] = GetPlayerVirtualWorld(playerid);
	playerInfo[playerid][pExitInt] = GetPlayerInterior(playerid);
	format(strSQLQuery,sizeof(strSQLQuery),"UPDATE `players` SET `name`=\"%s\",", playerInfo[playerid][pName]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `ownerid`=\"%d\",",strSQLQuery, playerInfo[playerid][aID]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `skin`=\"%d\",",strSQLQuery,playerInfo[playerid][pSkin]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `faction`=\"%d\",",strSQLQuery,playerInfo[playerid][pFaction]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `homeid`=\"%d\",",strSQLQuery,playerInfo[playerid][pHomeID]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `exitx`=\"%f\",",strSQLQuery,playerInfo[playerid][pExitX]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `exity`=\"%f\",",strSQLQuery,playerInfo[playerid][pExitY]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `exitz`=\"%f\",",strSQLQuery,playerInfo[playerid][pExitZ]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `exitvw`=\"%d\",",strSQLQuery,playerInfo[playerid][pExitVW]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `exitint`=\"%d\",",strSQLQuery,playerInfo[playerid][pExitInt]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `lvl`=\"%d\",",strSQLQuery,playerInfo[playerid][pLvl]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `exp`=\"%d\"",strSQLQuery,playerInfo[playerid][pExp]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s WHERE (`id`=\"%d\")",strSQLQuery,playerInfo[playerid][pID]);
	mysql_query(strSQLQuery);
	return 1;
}

public OnPlayerSpawn(playerid)
{
    if(!playerInfo[playerid][aLogged]) KickEx(playerid);
    DC_CMD(playerid, "/cc");
    SetPlayerPos(playerid, playerInfo[playerid][pExitX], playerInfo[playerid][pExitY], playerInfo[playerid][pExitZ]);
    SetPlayerVirtualWorld(playerid, playerInfo[playerid][pExitVW]);
    SetPlayerInterior(playerid, playerInfo[playerid][pExitInt]);
    SetPlayerSkin(playerid,playerInfo[playerid][pSkin]);
    SetPlayerScore(playerid, playerInfo[playerid][pLvl]);
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	return 1;
}
//-----------------------------------------------Чат и все что с ним связано----

public OnPlayerText(playerid, text[])
{
    if(!playerInfo[playerid][aLogged] || playerInfo[playerid][aMuted] != 0)
    {
        SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Вам недоступна отправка сообщений в чат");
        return 0;
    }
    if(GetPVarInt(playerid,"talkID") != 0)
    {
        format(strIOText, sizeof(strIOText), "%s[Телефон]: %s", playerInfo[playerid][pName], text);
        ProxDetectorNew(playerid,20.0, COLOR_WHITE,strIOText);
        format(strIOText, sizeof(strIOText), "[Телефон]: %s", text);
		SendClientMessageEx(getPlayerID(GetPVarInt(playerid,"talkID")), COLOR_WHITE, strIOText);
		return 0;
    }
    else
    {
		format(strIOText, sizeof(strIOText), "%s: %s", playerInfo[playerid][pName], text);
		ProxDetectorNew(playerid,20.0, COLOR_WHITE,strIOText);
	}
	return 0;
}

stock ProxDetectorNew(playerid,Float:Radi=10.0,color,text[])
{
    new Float:pos[3];
    GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
    for(new i;i<GetMaxPlayers();i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInRangeOfPoint(i,Radi,pos[0],pos[1],pos[2]))
            {
                if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid) && GetPlayerInterior(playerid) == GetPlayerInterior(i)) SendClientMessageEx(i,color,text);
            }
        }
    }
}

CMD:b(playerid,params[])
{
    if(sscanf(params,"s[128]",params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/b [сообщение]");
	format(strIOText, sizeof(strIOText), "(( %s: %s ))", playerInfo[playerid][pName],params);
	ProxDetectorNew(playerid,5.0,COLOR_GRAY,strIOText);
	return 1;
}

CMD:my(playerid, params[])
{
	new mdoid;
    if(sscanf(params,"is[128]",mdoid,params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/my [id метки] [сообщение]");
    if(mdoid < 1 || mdoid > 3) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Номер метки должен быть {"#cOLOR_GRAY"}от 1 до 3");
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x ,y ,z);
    format(strIOText, sizeof(strIOText), "%s\n{"#cOLOR_GRAY"}(( %s[%d] ))",params,playerInfo[playerid][pName], mdoid);
    Delete3DTextLabel(playerInfo[playerid][pMDO][mdoid-1]);
    playerInfo[playerid][pMDO][mdoid-1] = Create3DTextLabel(strIOText, COLOR_PINK, x ,y ,z-1.0, 5.0, 0, 0);
    return 1;
}

CMD:delmy(playerid, params[])
{
    new mdoid;
    if(sscanf(params,"i",mdoid)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/delmy [id метки]");
    if(mdoid < 1 || mdoid > 3) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Номер метки должен быть {"#cOLOR_GRAY"}от 1 до 3");
    Delete3DTextLabel(playerInfo[playerid][pMDO][mdoid-1]);
    return 1;
}

CMD:try(playerid,params[])
{
    if(sscanf(params,"s[128]",params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/try [сообщение]");
	format(strIOText,sizeof(strIOText),"%s %s {"#cOLOR_GRAY"}(( %s ))",playerInfo[playerid][pName],params[0],random(2) == 1 ? ("Удачно") : ("Неудачно"));
	ProxDetectorNew(playerid,5.0,COLOR_PINK,strIOText);
	return 1;
}

CMD:do(playerid,params[])
{
    if(sscanf(params,"s[128]",params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/do [сообщение]");
	format(strIOText, sizeof(strIOText), "%s {"#cOLOR_GRAY"}(( %s ))",params,playerInfo[playerid][pName]);
	ProxDetectorNew(playerid,5.0, COLOR_PINK,strIOText);
	return 1;
}

CMD:ado(playerid,params[])
{
    if(sscanf(params,"s[128]",params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/ado [сообщение]");
	format(strIOText, sizeof(strIOText), "* %s {"#cOLOR_GRAY"}(( %s ))",params,playerInfo[playerid][pName]);
	SetPlayerChatBubble(playerid, params, COLOR_PINK, 10.0, 7000);
	SendClientMessageEx(playerid,COLOR_PINK,strIOText);
	return 1;
}

CMD:ame(playerid,params[])
{
    if(sscanf(params,"s[128]",params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/ame [сообщение]");
	format(strIOText, sizeof(strIOText), "* %s %s", playerInfo[playerid][pName],params);
	SetPlayerChatBubble(playerid, params, COLOR_PINK, 10.0, 7000);
	SendClientMessageEx(playerid,COLOR_PINK,strIOText);
	return 1;
}

CMD:low(playerid,params[])
{
    if(sscanf(params,"s[128]",params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/low [сообщение]");
	format(strIOText, sizeof(strIOText), "%s тихо произнес: %s", playerInfo[playerid][pName],params);
	ProxDetectorNew(playerid,2.0,COLOR_WHITE,strIOText);
	return 1;
}

CMD:s(playerid,params[])
{
    if(sscanf(params,"s[128]",params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/s [сообщение]");
	format(strIOText, sizeof(strIOText), "%s крикнул: %s", playerInfo[playerid][pName],params);
	ProxDetectorNew(playerid,50.0,COLOR_WHITE,strIOText);
	ApplyAnimationEx(playerid,"ON_LOOKERS","shout_01",4.1,0,0,0,0,0,0);
	return 1;
}

CMD:w(playerid,params[])
{
	new wid;
    if(sscanf(params,"is[128]",wid,params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/w [id] [сообщение]");
    if(!playerInfo[wid][aLogged]) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Игрок не авторизован");
    if(wid == playerid) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Нельзя отправлять сообщения себе");
	format(strIOText, sizeof(strIOText), "%s прошептал: %s", playerInfo[playerid][pName],params);
	SendClientMessage(playerid, COLOR_WHITE, strIOText);
	SendClientMessage(wid, COLOR_WHITE, strIOText);
	return 1;
}

CMD:pm(playerid,params[])
{
    new wid;
    if(sscanf(params,"is[128]",wid,params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/pm [id] [сообщение]");
    if(!playerInfo[wid][aLogged]) return SendClientMessageEx(playerid,COLOR_YELLOW,"Ошибка: {"#cOLOR_WHITE"}Игрок не авторизован");
    if(wid == playerid) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Нельзя отправлять сообщения себе");
    PlayerPlaySound(wid, S_DENY, 0.0, 0.0, 10.0);
	format(strIOText, sizeof(strIOText), "(( %s: %s ))", playerInfo[playerid][pName],params);
	SendClientMessageEx(wid, COLOR_GRAY, strIOText);
	SendClientMessageEx(playerid, COLOR_GRAY, strIOText);
	return 1;
}

CMD:me(playerid,params[])
{
    if(sscanf(params,"s[128]",params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/me [сообщение]");
	format(strIOText, sizeof(strIOText), "%s %s", playerInfo[playerid][pName],params);
	ProxDetectorNew(playerid,5.0,COLOR_PINK,strIOText);
	return 1;
}

CMD:r(playerid, params[])
{
    if(!ifPlayerHaveItem(playerid, 29, 1)) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}У вас нет рации");
    if(sscanf(params,"s[126]",params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/r [сообщение]");
    if(GetPVarInt(playerid, "radioChanel") == 0) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Не выбрана частота. Используйте {"#cOLOR_GRAY"}/rset [1-100]");
    format(strIOText, sizeof(strIOText), "%s сказал в рацию: %s", playerInfo[playerid][pName], params);
    for(new i;i<MAX_PLAYERS;i++)
	{
		if(GetPVarInt(playerid, "radioChanel") == GetPVarInt(i, "radioChanel"))
		{
			SendClientMessageEx(i,COLOR_WHITE,strIOText);
		}
	}
	return 1;
}

CMD:rset(playerid, params[])
{
    if(!ifPlayerHaveItem(playerid, 29, 1)) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}У вас нет рации");
	new chanel;
	if(sscanf(params,"i",chanel)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/rset [1-100]");
    SetPVarInt(playerid, "radioChanel", chanel);
    return 1;
}

CMD:call(playerid, params[])
{
    if(!ifPlayerHaveItem(playerid, 28, 1)) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}У вас нет телефона");
	new callid;
	if(sscanf(params,"i",callid)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/call [id]");
	if(!playerInfo[callid][aLogged]) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Игрок не авторизован");
	if(!ifPlayerHaveItem(callid, 28, 1)) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}У игрока нет телефона");
	if(GetPVarInt(callid, "talkID") != 0) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Телефон занят");
	SetPVarInt(callid,"callID", playerInfo[playerid][pID]);
	SendClientMessageEx(callid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Вам поступил входящий звонок. Нажмите {"#cOLOR_GREEN"}Y{"#cOLOR_WHITE"} - для ответа или {"#cOLOR_RED"}N{"#cOLOR_WHITE"} - для сброса");
	SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Ожидайте ответа абонента");
	return 1;
}
/*
CMD:sms(playerid, params[])
{
	new senderid;
    if(sscanf(params,"is[128]",senderid, params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/sms [id] [сообщение]");
    if(!playerInfo[senderid][aLogged]) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Игрок не авторизован");
	format(strSQLQuery, sizeof(strSQLQuery), "INSERT INTO `messages` (`ownerid`, `sender`, `message`) VALUE ('%d', '%d', '%s')", playerInfo[senderid][pID], playerInfo[playerid][pID], params);
	mysql_query(strSQLQuery);
	format(strIOText,sizeof(strIOText),"SMS отправлено %s:{"#cOLOR_WHITE"}%s", playerInfo[senderid][pName], params);
	SendClientMessageEx(playerid,COLOR_GRAY,strIOText);
	format(strIOText,sizeof(strIOText),"SMS от %s:{"#cOLOR_WHITE"}%s", playerInfo[playerid][pName], params);
	SendClientMessageEx(senderid,COLOR_GRAY,strIOText);
	return 1;
}

CMD:hsms(playerid)
{
    format(strSQLQuery, sizeof(strSQLQuery),"SELECT `sender`, `date` FROM `messages` WHERE `ownerid` = '%d'", playerInfo[playerid][pID]);
	mysql_query(strSQLQuery);
    mysql_store_result();
    if(mysql_num_rows() != 0)
    {
        format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "");
        for(new i;i<mysql_num_rows();i++)
		{
		    new name[24],timestamp[19];
	    	mysql_fetch_row_format(strSQLQuery, "|");
	    	sscanf(strSQLQuery, "p<|>s[24]s[19]", name, timestamp);
			format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "%s{"#cOLOR_GRAY"}>> [%s] - {"#cOLOR_WHITE"}%s\n",strTextPlayerDialog, timestamp, name);
		}
		ShowPlayerDialog(playerid,D_PHONE,DIALOG_STYLE_LIST,"{"#cOLOR_WHITE"}SMS",strTextPlayerDialog,"Выбор","Закрыть");
	}
	return 1;
}*/

stock SendClientMessageEx(playerid, color, text[])
{
	if(strlen(text) > 128)
	{
		new text2[128];
		strmid(text2,text,65,strlen(text),strlen(text));
		strdel(text, 65, strlen(text));
		format(text, 128,"%s ...", text);
		format(text2, 128, "... %s", text2);
	    SendClientMessage(playerid, color, text);
   	    SendClientMessage(playerid, color, text2);
	}
	else
	{
	    SendClientMessage(playerid, color, text);
	}
	return 1;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	if(!playerInfo[playerid][aLogged])
	{
	    SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Для начала авторизуйтесь");
		return 0;
	}
	return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Команда не доступна или не найдена. Используйте {"#cOLOR_GRAY"}/help");
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	RemoveVehicleComponent(vehicleid,componentid);
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
    ChangeVehiclePaintjob(vehicleid, 0);
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys==KEY_WALK && !IsPlayerInAnyVehicle(playerid))
	{
		for(new i = 0; i < houses; i++)
		{
			if(!PlayerToPoint(2.0,playerid,houseInfo[i][hX],houseInfo[i][hY],houseInfo[i][hZ])) continue;
		}
	}
    if(newkeys==KEY_SUBMISSION && IsPlayerInAnyVehicle(playerid))
	{
	    new engine, lights, alarm, doors, bonnet, boot, objective;
    	GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
    	if(engine == 0)
    	{
    	    engine = 1;
		}
		else
		{
		    engine = 0;
		}
	    SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
	}
	if(newkeys==KEY_CTRL_BACK)
	{
	    DC_CMD(playerid, "/inv");
	}
	if(newkeys==KEY_YES && GetPVarInt(playerid, "callID") != 0)
	{
	    SetPVarInt(playerid,"talkID",GetPVarInt(playerid, "callID"));
	    SetPVarInt(getPlayerID(GetPVarInt(playerid, "callID")),"talkID",playerInfo[playerid][pID]);
	    SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Нажмите на {"#cOLOR_RED"}N{"#cOLOR_WHITE"}, чтобы закончить разговор");
	    SendClientMessageEx(getPlayerID(GetPVarInt(playerid, "talkID")),COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Нажмите на {"#cOLOR_RED"}N{"#cOLOR_WHITE"}, чтобы закончить разговор");
	    SetPVarInt(playerid,"callID",0);
	}
	if(newkeys==KEY_NO && GetPVarInt(playerid, "talkID") != 0)
	{
	    SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Разговор закончен");
	    SendClientMessageEx(getPlayerID(GetPVarInt(playerid, "talkID")),COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Разговор закончен");
	    SetPVarInt(getPlayerID(GetPVarInt(playerid, "talkID")), "talkID", 0);
	    SetPVarInt(playerid, "talkID", 0);
	}
	if(newkeys==KEY_NO && GetPVarInt(playerid, "callID") != 0)
	{
	    SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Звонок сброшен");
	    SendClientMessageEx(getPlayerID(GetPVarInt(playerid, "callID")),COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Звонок сброшен");
	    SetPVarInt(playerid, "callID", 0);
	}
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    showPlayerItemAction(playerid);
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	return 1;
}

public OnPlayerUpdate(playerid)
{
    if(playerInfo[playerid][aForKick] == true) Kick(playerid);
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new Float:vhealth;
	    GetVehicleHealth(GetPlayerVehicleID(playerid), vhealth);
	    if(vhealth < 650)
		{
		    new engine, lights, alarm, doors, bonnet, boot, objective;
	    	GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
	    	SetVehicleParamsEx(GetPlayerVehicleID(playerid), false, lights, alarm, doors, bonnet, boot, objective);
		}
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    if(GetPVarInt(playerid,"USEDIALOGID") != dialogid) return Kick(playerid);
	switch(dialogid)
	{
		case D_LOGIN://Авторизация: ввод пароля
		{
			if(!response)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				
 				KickEx(playerid);
				return 1;
			}
 			if(!strlen(inputtext))
		 	{
		 	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
   				format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Добро пожаловать на {"#cOLOR_AQUA"}"#SERVER_NAME"{"#cOLOR_GRAY"}.\nВаш логин: {"#cOLOR_AQUA"}%s{"#cOLOR_GRAY"}\n\nДанный аккаунт {"#cOLOR_AQUA"}зарегистрирован{"#cOLOR_GRAY"}.\n{"#cOLOR_RED"}Чтобы авторизоваться введите пароль:{"#cOLOR_GRAY"}", playerInfo[playerid][aLogin] );
				ShowPlayerDialog(playerid,D_LOGIN,DIALOG_STYLE_PASSWORD,"{"#cOLOR_ORANGE"}Авторизация",strTextPlayerDialog,"Ввод","");
				return 1;
			}
			format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `accounts` WHERE `name` = '%s' AND `pass` ='%s' LIMIT 1", playerInfo[playerid][aLogin], MD5_Hash(inputtext));
			mysql_query(strSQLQuery);
        	mysql_store_result();
        	if(mysql_num_rows() == 1)//Авторизация: загрузка персонажей
        	{
                PlayerPlaySound(playerid, S_ACCEPT, 0.0, 0.0, 10.0);
        	    mysql_fetch_row_format(strSQLQuery, "|");
        	    sscanf(strSQLQuery, "p<|>is[24]s[33]s[50]iiiiii",
	        	    playerInfo[playerid][aID],
	        	    playerInfo[playerid][aLogin],
	        	    playerInfo[playerid][aPass],
					playerInfo[playerid][aEMail],
					playerInfo[playerid][aBaned],
					playerInfo[playerid][aMuted],
					playerInfo[playerid][aBans],
					playerInfo[playerid][aWarns],
					playerInfo[playerid][aKicks],
					playerInfo[playerid][aMutes]);
                mysql_free_result();
                
                ShowPlayerCharacterList(playerid);//Авторизация: показ списка персонажей
        	}
        	else//Авторизация: неправильный пароль
        	{
        	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
        	    if(playerInfo[playerid][aWrongPass] == 2)
				{
                    format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Добро пожаловать на {"#cOLOR_AQUA"}"#SERVER_NAME"{"#cOLOR_GRAY"}.\nВаш логин: {"#cOLOR_AQUA"}%s{"#cOLOR_GRAY"}\n\nДанный аккаунт {"#cOLOR_AQUA"}зарегистрирован{"#cOLOR_GRAY"}.\n{"#cOLOR_RED"}Вы потратили все попытки авторизации. Введите {"#cOLOR_AQUA"}/q(uit){"#cOLOR_RED"}, чтобы выйти из игры.{"#cOLOR_GRAY"}", playerInfo[playerid][aLogin] );
					ShowPlayerDialog(playerid,D_MSGBOX,DIALOG_STYLE_MSGBOX,"{"#cOLOR_ORANGE"}Авторизация. Попыток: {"#cOLOR_RED"}0",strTextPlayerDialog,"Выход","");
					KickEx(playerid);
					return 1;
				}
        	    playerInfo[playerid][aWrongPass]++;
        	    format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Добро пожаловать на {"#cOLOR_AQUA"}"#SERVER_NAME"{"#cOLOR_GRAY"}.\nВаш логин: {"#cOLOR_AQUA"}%s{"#cOLOR_GRAY"}\n\nДанный аккаунт {"#cOLOR_AQUA"}зарегистрирован{"#cOLOR_GRAY"}.\n{"#cOLOR_RED"}Введеный вами пароль не подходит. Попробуйте снова:{"#cOLOR_GRAY"}", playerInfo[playerid][aLogin] );
				format(strHeaderPlayerDialog, sizeof(strHeaderPlayerDialog),"{"#cOLOR_ORANGE"}Авторизация. Попыток: {"#cOLOR_RED"}%d", 3 - playerInfo[playerid][aWrongPass]);
				ShowPlayerDialog(playerid,D_LOGIN,DIALOG_STYLE_PASSWORD,strHeaderPlayerDialog,strTextPlayerDialog,"Ввод","");
        	}
		}
		case D_LOGIN+1://Авторизация: вывод персонажей
		{
			if(!response)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				
 				KickEx(playerid);
				return 1;
			}
			format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `players` WHERE `ownerid` = '%d'", playerInfo[playerid][aID]);
			mysql_query(strSQLQuery);
        	mysql_store_result();
        	if(listitem != mysql_num_rows())
        	{
        	    
        	    //Выбираем запись и загружаем персонажа
        	    for(new i;i<listitem;i++)
        	    {
        	        mysql_retrieve_row();
        	    }
        	    mysql_fetch_row_format(strSQLQuery, "|");
  	    		sscanf(strSQLQuery, "p<|>iis[24]iiifffiiii",
	        	    playerInfo[playerid][pID],
	        	   	playerInfo[playerid][aID],
	        	    playerInfo[playerid][pName],
					playerInfo[playerid][pSkin],
					playerInfo[playerid][pFaction],
					playerInfo[playerid][pHomeID],
					playerInfo[playerid][pExitX],
					playerInfo[playerid][pExitY],
					playerInfo[playerid][pExitZ],
					playerInfo[playerid][pExitVW],
					playerInfo[playerid][pExitInt],
					playerInfo[playerid][pLvl],
					playerInfo[playerid][pExp]);
                playerInfo[playerid][aLogged] = true;
                SetPlayerName(playerid, playerInfo[playerid][pName]);
                SpawnPlayer(playerid);
                SetPlayerColor(playerid, COLOR_WHITE);
                
                
			}
        	else
        	{
				ShowPlayerDialog(playerid,D_REGISTER+4,DIALOG_STYLE_INPUT,"Введите имя персонажа","Введите имя Вашего будущего персонажа\nНастоятельно рекомендуем выбирать имя отличное от логина","Ввод","");
        	}
        	PlayerPlaySound(playerid, S_ACCEPT, 0.0, 0.0, 10.0);
        	mysql_free_result();
		}
		case D_REGISTER://Регистрация: ввод пароля
		{
			if(!response)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				
 				KickEx(playerid);
				return 1;
			}
 			if(!strlen(inputtext))
		 	{
		 	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
   				format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Добро пожаловать на {"#cOLOR_AQUA"}"#SERVER_NAME"{"#cOLOR_GRAY"}.\nВаш логин: {"#cOLOR_AQUA"}%s{"#cOLOR_GRAY"}\n\nАккаунт с данным именем {"#cOLOR_AQUA"}не зарегистрирован{"#cOLOR_GRAY"}.\n{"#cOLOR_RED"}Чтобы зарегистрироваться введите пароль:", playerInfo[playerid][aLogin] );
				ShowPlayerDialog(playerid,D_REGISTER,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Регистрация",strTextPlayerDialog,"Ввод","");
				return 1;
			}
			if(strlen(inputtext) < 5 || strlen(inputtext) > 50)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
			    format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Добро пожаловать на {"#cOLOR_AQUA"}"#SERVER_NAME"{"#cOLOR_GRAY"}.\nВаш логин: {"#cOLOR_AQUA"}%s{"#cOLOR_GRAY"}\n\nАккаунт с данным именем {"#cOLOR_AQUA"}не зарегистрирован{"#cOLOR_GRAY"}.\n{"#cOLOR_RED"}Пароль должен иметь длинну от {"#cOLOR_AQUA"}5{"#cOLOR_RED"}, до {"#cOLOR_AQUA"}50{"#cOLOR_RED"} символов. Попробуйте еще:", playerInfo[playerid][aLogin] );
				ShowPlayerDialog(playerid,D_REGISTER,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Регистрация",strTextPlayerDialog,"Ввод","");
				return 1;
			}
			PlayerPlaySound(playerid, S_ACCEPT, 0.0, 0.0, 10.0);
		 	mysql_real_escape_string(MD5_Hash(inputtext), playerInfo[playerid][aPass]);
			format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Введите свой точный адрес электронной почты.\nНапример: {"#cOLOR_AQUA"}%s@gmail.com{"#cOLOR_GRAY"}\nБез него не получится восстановить доступ к аккаунту в случае утери пароля:", playerInfo[playerid][aLogin] );
			ShowPlayerDialog(playerid,D_REGISTER+1,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите ваш EMail",strTextPlayerDialog,"Ввод","");
		}
		case D_REGISTER+1://Регистрация: ввод почты
		{
			if(!response)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				
 				KickEx(playerid);
				return 1;
			}
 			if(!strlen(inputtext))
		 	{
		 	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
   				format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Введите свой точный адрес электронной почты.\nНапример: {"#cOLOR_AQUA"}%s@gmail.com{"#cOLOR_RED"}\nБез него не получится восстановить доступ к аккаунту в случае утери пароля:", playerInfo[playerid][aLogin] );
				ShowPlayerDialog(playerid,D_REGISTER+1,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите ваш EMail",strTextPlayerDialog,"Ввод","");
				return 1;
			}
			if((strfind(inputtext,"@", true) == -1) || (strfind(inputtext,".", true) == -1))
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
      			format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Введите свой точный адрес электронной почты.\nНапример: {"#cOLOR_AQUA"}%s@gmail.com{"#cOLOR_RED"}\nЭтот адрес не является корректным. Попробуйте снова:", playerInfo[playerid][aLogin] );
				ShowPlayerDialog(playerid,D_REGISTER+1,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите ваш EMail",strTextPlayerDialog,"Ввод","");
				return 1;
			}
			if(strlen(inputtext) < 5 || strlen(inputtext) > 50)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
			    format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Введите свой точный адрес электронной почты.\nНапример: {"#cOLOR_AQUA"}%s@gmail.com{"#cOLOR_RED"}\nАдрес должен иметь длинну от {"#cOLOR_AQUA"}5{"#cOLOR_RED"} до {"#cOLOR_AQUA"}50{"#cOLOR_RED"} символов. Попробуйте еще:", playerInfo[playerid][aLogin] );
				ShowPlayerDialog(playerid,D_REGISTER+1,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите ваш EMail",strTextPlayerDialog,"Ввод","");
				return 1;
			}
			mysql_real_escape_string(inputtext, playerInfo[playerid][aEMail]);
			format(strIOText, sizeof(strIOText),"SELECT * FROM `accounts` WHERE `email` = '%s' LIMIT 1", playerInfo[playerid][aEMail]);
			mysql_query(strIOText);
        	mysql_store_result();
        	if(mysql_num_rows() == 1)
        	{
        	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
             	format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Введите свой точный адрес электронной почты.\nНапример: {"#cOLOR_AQUA"}%s@gmail.com{"#cOLOR_RED"}\nВведенный вами EMail уже используется. Попробуйте еще:", playerInfo[playerid][aLogin] );
				ShowPlayerDialog(playerid,D_REGISTER+1,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите ваш EMail",strTextPlayerDialog,"Ввод","");
                return 1;
			}
			PlayerPlaySound(playerid, S_ACCEPT, 0.0, 0.0, 10.0);
			mysql_real_escape_string(inputtext, playerInfo[playerid][aEMail]);
			format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Мы выслали код подтверждения регистрации Вам на почту.\nДля продолжения регистрации введите его ниже:\n\n{"#cOLOR_RED"}p.s Сейчас эта функция не работает =(\nМы обещаем скоро это исправить!\nА пока, просто введите: {"#cOLOR_AQUA"}000000");
			ShowPlayerDialog(playerid,D_REGISTER+3,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите код подтверждения",strTextPlayerDialog,"Ввод","");
		}
		case D_REGISTER+3://Регистрация: ввод кода подтверждения
		{
			if(!response)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				
 				KickEx(playerid);
				return 1;
			}
 			if(!strlen(inputtext))
		 	{
		 	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
   				format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Мы выслали код подтверждения регистрации Вам на почту.\n{"#cOLOR_RED"}Для продолжения регистрации введите его ниже:\n\n{"#cOLOR_RED"}p.s Сейчас эта функция не работает =(\nМы обещаем скоро это исправить!\nА пока, просто введите: {"#cOLOR_AQUA"}000000");
				ShowPlayerDialog(playerid,D_REGISTER+3,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите код подтверждения",strTextPlayerDialog,"Ввод","");
				return 1;
			}
			if(!IsNumeric(inputtext))
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
   				format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Мы выслали код подтверждения регистрации Вам на почту.\n{"#cOLOR_RED"}Это не код. Попробуйте еще:\n\n{"#cOLOR_RED"}p.s Сейчас эта функция не работает =(\nМы обещаем скоро это исправить!\nА пока, просто введите: {"#cOLOR_AQUA"}000000");
				ShowPlayerDialog(playerid,D_REGISTER+3,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите код подтверждения",strTextPlayerDialog,"Ввод","");
				return 1;
			}
			if(strval(inputtext) != 000000)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
			    format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Мы выслали код подтверждения регистрации Вам на почту.\n{"#cOLOR_RED"}Вы потратили все попытки авторизации. Введите {"#cOLOR_AQUA"}/q(uit){"#cOLOR_RED"}, чтобы выйти из игры.{"#cOLOR_GRAY"}\n\n{"#cOLOR_RED"}p.s Сейчас эта функция не работает =(\nМы обещаем скоро это исправить!\nА пока, просто введите: {"#cOLOR_AQUA"}000000");
				ShowPlayerDialog(playerid,D_MSGBOX,DIALOG_STYLE_MSGBOX,"{"#cOLOR_ORANGE"}Введите код подтверждения",strTextPlayerDialog,"Выход","");
 				KickEx(playerid);
				return 1;
			}
			PlayerPlaySound(playerid, S_ACCEPT, 0.0, 0.0, 10.0);
			format(strSQLQuery, sizeof(strSQLQuery), "INSERT INTO `accounts` (`name`, `pass`, `email`) VALUE ('%s', '%s', '%s')", playerInfo[playerid][aLogin], playerInfo[playerid][aPass], playerInfo[playerid][aEMail]);
			mysql_query(strSQLQuery);
			format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "{"#cOLOR_GRAY"}Добро пожаловать на {"#cOLOR_AQUA"}"#SERVER_NAME"{"#cOLOR_GRAY"}.\nВаш логин: {"#cOLOR_AQUA"}%s{"#cOLOR_GRAY"}\n\nДанный аккаунт {"#cOLOR_AQUA"}зарегистрирован{"#cOLOR_GRAY"}.\nЧтобы авторизоваться введите пароль:", playerInfo[playerid][aLogin] );
			ShowPlayerDialog(playerid,D_LOGIN,DIALOG_STYLE_PASSWORD,"{"#cOLOR_ORANGE"}Авторизация",strTextPlayerDialog,"Ввод","");
		}
		case D_REGISTER+4://Регистрация(создание персонажа): ввод имени нового персонажа
		{
			if(!response)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
 				KickEx(playerid);
				return 1;
			}
 			if(!strlen(inputtext))
		 	{
		 	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
   				ShowPlayerDialog(playerid,D_REGISTER+4,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите имя персонажа","{"#cOLOR_GRAY"}Введите имя Вашего будущего персонажа:","Ввод","");
	   			return 1;
			}
			if(strlen(inputtext) < 5 || strlen(inputtext) > MAX_PLAYER_NAME)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
			    ShowPlayerDialog(playerid,D_REGISTER+4,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите имя персонажа","{"#cOLOR_GRAY"}Введите имя Вашего будущего персонажа:","Ввод","");
				return 1;
			}
			if(!IsRPNick(inputtext))
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
			    ShowPlayerDialog(playerid,D_REGISTER+4,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите имя персонажа","{"#cOLOR_GRAY"}Введите имя Вашего будущего персонажа:","Ввод","");
				return 1;
			}
			mysql_real_escape_string(inputtext, playerInfo[playerid][pName]);
			format(strIOText, sizeof(strIOText),"SELECT `id` FROM `players` WHERE `name` = '%s' LIMIT 1", playerInfo[playerid][pName]);
			mysql_query(strIOText);
        	mysql_store_result();
        	if(mysql_num_rows() == 1)
        	{
        	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
             	ShowPlayerDialog(playerid,D_REGISTER+4,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите имя персонажа","{"#cOLOR_RED"}Персонаж с данным именем уже существует. Попробуйте другое:","Ввод","");
                return 1;
			}
			PlayerPlaySound(playerid, S_ACCEPT, 0.0, 0.0, 10.0);
			format(strIOText, sizeof(strIOText), "INSERT INTO `players` (`name`, `ownerid`) VALUE ('%s', '%d')", playerInfo[playerid][pName], playerInfo[playerid][aID]);
			mysql_query(strIOText);
			ShowPlayerCharacterList(playerid);//Авторизация: показ списка персонажей
		}
		case D_INV:
		{
		    if(!response)
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				return 1;
			}
			format(strSQLQuery, sizeof(strSQLQuery),"SELECT `id` FROM `items` WHERE `ownerid` = '%d' LIMIT 30", playerInfo[playerid][pID]);
			mysql_query(strSQLQuery);
		    mysql_store_result();
		   	if(mysql_num_rows() > 0)
			{
			    for(new i;i<mysql_num_rows();i++)
				{
				    new itemid;
				    mysql_fetch_row_format(strSQLQuery);
				    sscanf(strSQLQuery, "i",itemid);
				    if(listitem != i) continue;
					SetPVarInt(playerid, "selectItem", itemid);
				    showPlayerItemAction(playerid);
				    break;
				}
			}
			else
			{
			    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
			}
		}
		case D_INV+1:
		{
		    if(!response)
		    {
		        PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				return 1;
		    }
		    switch(listitem)
		    {
		        case 0:
		        {
		            useItem(playerid, GetPVarInt(playerid, "selectItem"));
		        }
		        case 1:
		        {
		            ShowPlayerDialog(playerid,D_INV+2,DIALOG_STYLE_INPUT,"{"#cOLOR_WHITE"}Инвентарь >> Передача: Получатель","{"#cOLOR_WHITE"}Введите имя человека","Ввод","Назад");
		        }
		    }
		}
		case D_INV+2:
		{
		    if(!response)
		    {
		        PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				return 1;
		    }
		    //Вводим имя игрока для передачи
		    ShowPlayerDialog(playerid,D_INV+3,DIALOG_STYLE_INPUT,"{"#cOLOR_WHITE"}Инвентарь >> Передача: Количество","{"#cOLOR_WHITE"}Введите количество","Ввод","Назад");
		}
		case D_INV+3:
		{
		    if(!response)
		    {
		        PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				return 1;
		    }
			//Вводим количество предмета
		}
		case D_ADDPROP:
		{
		    if(!response)
		    {
		        PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				return 1;
		    }
		    SetPVarInt(playerid, "addPropInt", listitem);
		}
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}

CMD:cc(playerid)
{
    for(new i=0; i<20; i++) SendClientMessageEx(playerid,COLOR_WHITE," ");
    return 1;
}

CMD:stats(playerid,params[])
{
	new showid;
    if(sscanf(params,"i",showid))
    {
  		ShowPlayerStats(playerid, playerid);
	}
	else
	{
	    ShowPlayerStats(playerid, showid);
	}
	return 1;
}

stock ShowPlayerStats(playerid, showid)
{
	if(!playerInfo[showid][aLogged]) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Этот игрок не авторизован");
	new fname[30],hname[30];
	if(playerInfo[showid][pFaction] != 0) fname = factionInfo[playerInfo[showid][pFaction]][fName];
	if(playerInfo[showid][pHomeID] != 0) format(hname, sizeof(hname),"№%d", playerInfo[showid][pHomeID]);
	
	format(strHeaderPlayerDialog, sizeof(strHeaderPlayerDialog),"{"#cOLOR_ORANGE"}Статистика: {"#cOLOR_AQUA"}%s", playerInfo[showid][pName]);
	format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"\t\t{"#cOLOR_GRAY2"}ПЕРСОНАЖ:\n\n");
	format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"%s{"#cOLOR_GRAY"}Имя: \t\t\t\t\t{"#cOLOR_AQUA"}%s\n", strTextPlayerDialog, playerInfo[showid][pName]);
	format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"%s{"#cOLOR_GRAY"}Регистрационный номер: \t\t\t{"#cOLOR_AQUA"}%d\n", strTextPlayerDialog, playerInfo[showid][pID]);
	format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"%s{"#cOLOR_GRAY"}Скин: \t\t\t\t\t{"#cOLOR_AQUA"}%d\n", strTextPlayerDialog, playerInfo[showid][pSkin]);
    format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"%s{"#cOLOR_GRAY"}Фракция: \t\t\t\t{"#cOLOR_AQUA"}%s\n", strTextPlayerDialog, playerInfo[showid][pFaction] == 0 ? ("Не состоит") : (fname));
    format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"%s{"#cOLOR_GRAY"}Недвижимость: \t\t\t{"#cOLOR_AQUA"}%s\n", strTextPlayerDialog, playerInfo[showid][pHomeID] == 0 ? ("Нет") : (hname));
	format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"%s\n\n\t\t{"#cOLOR_GRAY2"}АККАУНТ:\n\n", strTextPlayerDialog);
	format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"%s{"#cOLOR_GRAY"}Логин: \t\t\t\t{"#cOLOR_AQUA"}%s\n", strTextPlayerDialog, playerInfo[showid][aLogin]);
	format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"%s{"#cOLOR_GRAY"}Почта: \t\t\t\t\t{"#cOLOR_AQUA"}%s\n", strTextPlayerDialog, playerInfo[showid][aEMail]);
	format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"%s{"#cOLOR_GRAY"}Регистрационный номер: \t\t{"#cOLOR_AQUA"}%d\n", strTextPlayerDialog, playerInfo[showid][aID]);
 	ShowPlayerDialog(playerid,D_MSGBOX,DIALOG_STYLE_MSGBOX,strHeaderPlayerDialog,strTextPlayerDialog,"Закрыть","");
	return 1;
}

stock ShowPlayerCharacterList(playerid)
{
	format(strSQLQuery, sizeof(strSQLQuery),"SELECT `name` FROM `players` WHERE `ownerid` = '%d'", playerInfo[playerid][aID]);
	mysql_query(strSQLQuery);
    mysql_store_result();
    format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "");
   	if(mysql_num_rows() > 0)//Авторизация: загружаем список персонажей
	{
		for(new i;i<mysql_num_rows();i++)
		{
		    mysql_fetch_row_format(strSQLQuery);
	   		sscanf(strSQLQuery, "s[24]", playerInfo[playerid][pName]);
			format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "%s{"#cOLOR_GRAY"}%d. %s\n",strTextPlayerDialog,i+1, playerInfo[playerid][pName]);
		}
		format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "%s{"#cOLOR_GRAY"}%d. {"#cOLOR_AQUA"}Создать нового", strTextPlayerDialog, mysql_num_rows()+1);
		ShowPlayerDialog(playerid,D_LOGIN+1,DIALOG_STYLE_LIST,"{"#cOLOR_ORANGE"}Выберите персонажа",strTextPlayerDialog,"Ок","");
	}
	else//Регистрация: создаем нового персонажа
	{
	    ShowPlayerDialog(playerid,D_REGISTER+4,DIALOG_STYLE_INPUT,"{"#cOLOR_ORANGE"}Введите имя персонажа","{"#cOLOR_GRAY"}Введите имя Вашего будущего персонажа:","Ввод","");
	}
	mysql_free_result();
	return 1;
}

stock IsNumeric(const string[])
{
    new length=strlen(string);
    if (length==0) return false;
    for (new i = 0; i < length; i++) {
        if (
        (string[i] > '9' || string[i] < '0' && string[i]!='-' && string[i]!='+')
        || (string[i]=='-' && i!=0)
        || (string[i]=='+' && i!=0)
        ) return false;
    }
    if (length==1 && (string[0]=='-' || string[0]=='+')) return false;
    return true;
}

stock IsRPNick(plname[])
{
	for(new i=0;i<strlen(plname);i++){
	    if( !((plname[i]>='a'&&plname[i]<='z') || (plname[i]>='A'&&plname[i]<='Z') || plname[i]=='_') ){
	        return 0; // ???????????? ??????? ? ????
	    }
	}
	new d = strfind(plname, "_");
	if( d==-1 ) return 0;   // ??? _ ? ????
	if(strfind(plname, "_", false, d+1) != -1) return 0; // ?????? ?????? _ ? ????
	new name[10];
	strmid(name, plname, 0, d, sizeof name);
	new surname[10];
	strmid(surname, plname, d+1, strlen(plname), sizeof surname);
	if(strlen(name)<3 || strlen(name)>9) return 0;  // ???????? ????? ?????
	if(strlen(surname)<3 || strlen(surname)>9) return 0;    // ???????? ????? ???????
	if(!(name[0]>='A' && name[0]<='Z')) return 0;   // ?????? ????? ????? ?? ?????????
	if(!(surname[0]>='A' && surname[0]<='Z')) return 0; // ?????? ????? ??????? ?? ?????????
	for(new i=1;i<strlen(name);i++){
	    if(!(name[i]>='a'&&name[i]<='z')) return 0; // ???????? ????? ? ?????
	}
	for(new i=1;i<strlen(surname);i++){
		if(!(surname[i]>='a'&&surname[i]<='z')) return 0;   // ???????? ????? ? ???????
	}
	return 1;   // ??? ok
}

stock getPlayerID(playerid)//Ввод: ID персонажа в бд
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!playerInfo[i][aLogged]) continue;
	    if(playerInfo[i][pID] == playerid) return i;//Вывод: ID игрока в массиве playerInfo
	}
	return INVALID_PLAYER_ID;
}

forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) &&
		((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
//------------------------------------Возможности для фракций-------------------




//------------------------------------Администрация-----------------------------

stock getPlayerPerm(playerid, permid)
{
    format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `permissions` WHERE `ownerid` = '%d' AND `permid` = '%d' LIMIT 1", playerInfo[playerid][pID], permid);
	mysql_query(strSQLQuery);
    mysql_store_result();
    if(mysql_num_rows() == 1) return true;
    else return false;
}

CMD:getperm(playerid)
{
    format(strSQLQuery, sizeof(strSQLQuery),"SELECT `permid` FROM `permissions` WHERE `ownerid` = '%d'", playerInfo[playerid][pID]);
	mysql_query(strSQLQuery);
	mysql_store_result();
	if(mysql_num_rows() != 0)
	{
	    new permid;
	    SendClientMessageEx(playerid,COLOR_PINK,"Доступные возможности:");
	    for(new i;i<mysql_num_rows();i++)
		{
	    	mysql_fetch_row_format(strSQLQuery);
	   		sscanf(strSQLQuery, "i",
		   		permid);
			format(strIOText, sizeof(strIOText), "%d | %s: %s", permid, permissionInfo[permid][perName],permissionInfo[permid][perDesc]);
		    SendClientMessageEx(playerid,COLOR_PINK,permissionInfo[permid][perName]);
		}
	}
	return 1;
}

stock setPlayerPerm(playerid, permid)
{
	if(getPlayerPerm(playerid, permid))
	{
	    //Забираем право
	    format(strSQLQuery, sizeof(strSQLQuery), "DELETE from `permissions` WHERE `ownerid` = '%d' AND `permid` = '%d'", playerInfo[playerid][pID], permid);
		mysql_query(strSQLQuery);
	}
	else
	{
		//Выдаем право
		format(strSQLQuery, sizeof(strSQLQuery), "INSERT INTO `permissions` (`ownerid`, `permid`) VALUE ('%d', '%d')", playerInfo[playerid][pID], permid);
		mysql_query(strSQLQuery);
	}
	return 1;
}

CMD:setperm(playerid, params[])
{
    if(!getPlayerPerm(playerid, 0))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[0][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new targetid, permid;
	if(sscanf(params,"iis[128]",targetid, permid, params)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/setperm [id] [id возможности]");
    if(!playerInfo[targetid][aLogged]) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Игрок не авторизован");
    if(permid < 0 || permid > MAX_PERMISSIONS-1) return SendClientMessageEx(playerid,COLOR_YELLOW,"Ошибка: {"#cOLOR_WHITE"}Используйте id возможности {"#cOLOR_GRAY"}от 0 до 25");
    setPlayerPerm(playerid, permid);
    format(strIOText,sizeof(strIOText),"%s (%s) %s возможность %s %s. Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName],getPlayerPerm(targetid, permid) ? ("выдал") : ("забрал"), permissionInfo[permid][perName],playerInfo[targetid][pName],params);
	SendClientMessageToAll(COLOR_WHITE,strIOText);
	return 1;
}

CMD:ban(playerid,params[])
{
	if(!getPlayerPerm(playerid, 3))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[3][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new targetid,days;
	new curdate = getdate();
	if(sscanf(params,"iis[144]",targetid,days,strIOText)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/ban [id] [время(в сут.) блокировки] [причина]");
	if(!playerInfo[targetid][aLogged]) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	if(strlen(strIOText) > 70) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	format(strIOText,sizeof(strIOText),"%s (%s) забанил %s (%s) на %d дн. Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName], playerInfo[targetid][aLogin], playerInfo[targetid][pName],days,strIOText);
	SendClientMessageToAll(COLOR_WHITE,strIOText);
	playerInfo[targetid][aBans]++;
    playerInfo[targetid][aBaned] = curdate+days;
	KickEx(targetid);
	return 1;
}

CMD:unban(playerid,params[])
{
	if(!getPlayerPerm(playerid, 22))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[22][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new targetname[MAX_PLAYER_NAME];
	if(sscanf(params,"s[24]s[144]",targetname,strIOText)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/unban [логин] [причина]");
	mysql_real_escape_string(targetname, targetname);
	format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `accounts` WHERE `name` = '%s' LIMIT 1", targetname);
	mysql_query(strSQLQuery);
    mysql_store_result();
    if(mysql_num_rows() == 1)
    {
		format(strSQLQuery,sizeof(strSQLQuery),"UPDATE `accounts` SET `baned`=\"0\"  WHERE (`name`=\"%s\")", targetname);
		mysql_query(strSQLQuery);
		format(strIOText,sizeof(strIOText),"%s (%s) разбанил %s. Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName], targetname,strIOText);
		SendClientMessageToAll(COLOR_WHITE,strIOText);
	}
	else
	{
        SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Этот аккаунт не заблокирован");
		return 1;
	}
	return 1;
}

CMD:kick(playerid,params[])
{
	if(!getPlayerPerm(playerid, 5))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[5][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new targetid;
	if(sscanf(params,"is[144]",targetid,strIOText)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/kick [id] [причина]");
	if(!playerInfo[targetid][aLogged]) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	if(strlen(strIOText) > 70) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	format(strIOText,sizeof(strIOText),"%s (%s) кикнул %s (%s). Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName], playerInfo[targetid][aLogin], playerInfo[targetid][pName],strIOText);
	SendClientMessageToAll(COLOR_WHITE,strIOText);
	playerInfo[targetid][aKicks]++;
	KickEx(targetid);
	return 1;
}

CMD:warn(playerid,params[])
{
	if(!getPlayerPerm(playerid, 6))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[6][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new targetid;
	if(sscanf(params,"is[144]",targetid,strIOText)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/warn [id][причина]");
	if(!playerInfo[targetid][aLogged]) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	if(strlen(strIOText) > 70) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	format(strIOText,sizeof(strIOText),"%s (%s) выдал предупреждение %s (%s). Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName], playerInfo[targetid][aLogin], playerInfo[targetid][pName],strIOText);
	SendClientMessageToAll(COLOR_WHITE,strIOText);
	playerInfo[targetid][aWarns]++;
	return 1;
}

CMD:mute(playerid,params[])
{
	if(!getPlayerPerm(playerid, 4))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[4][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new targetid,days;
	new curdate = getdate();
	if(sscanf(params,"iis[144]",targetid,days,strIOText)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/mute [id] [время(в мин.) блокировки] [причина]");
	if(!playerInfo[targetid][aLogged]) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	if(strlen(strIOText) > 70) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	format(strIOText,sizeof(strIOText),"%s (%s) заткнул %s (%s) на %d мин. Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName], playerInfo[targetid][aLogin], playerInfo[targetid][pName],days,strIOText);
	SendClientMessageToAll(COLOR_WHITE,strIOText);
	playerInfo[targetid][aMutes]++;
    playerInfo[targetid][aMuted] = curdate+days;
	return 1;
}

CMD:teleport(playerid,params[])
{
    if(!getPlayerPerm(playerid, 24))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[24][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new targetid,Float:x,Float:y,Float:z,interior,vworld;
	if(!sscanf(params,"is[144]",targetid, strIOText))
	{
	    if(!playerInfo[targetid][aLogged]) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
		GetPlayerPos(targetid,x,y,z);
		SetPlayerPos(playerid,x,y,z);
		interior = GetPlayerInterior(targetid);
		SetPlayerInterior(playerid,interior);
		vworld = GetPlayerVirtualWorld(targetid);
		SetPlayerVirtualWorld(playerid,vworld);
		format(strIOText,sizeof(strIOText),"%s (%s) телепортировался к %s (%s). Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName],playerInfo[targetid][aLogin], playerInfo[targetid][pName],strIOText);
		SendClientMessageToAll(COLOR_WHITE,strIOText);
		return 1;
	}
	if(!sscanf(params,"fffs[144]",x,y,z,strIOText))
	{
		SetPlayerPos(playerid,x,y,z);
		format(strIOText,sizeof(strIOText),"%s (%s) телепортировался на %f, %f, %f. Причина: %s", playerInfo[playerid][aLogin], playerInfo[playerid][pName], x, y, z, strIOText);
		SendClientMessageToAll(COLOR_WHITE,strIOText);
		return 1;
	}
	SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/teleport [id] [причина]/[x] [y] [z] [причина]");
	return 1;
}

CMD:setskin(playerid,params[])
{
	if(!getPlayerPerm(playerid, 23))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[23][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new skinid,targetid;
	if(sscanf(params,"iis[144]",targetid,skinid, strIOText)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/setskin [id] [id скина] [причина]");
	if(skinid < 0 || skinid > 299) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	if(!playerInfo[targetid][aLogged]) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	if(GetPlayerSkin(targetid) == playerInfo[targetid][pSkin])
	{
	    format(strIOText,sizeof(strIOText),"%s (%s) установил скин №%d для %s (%s). Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName], skinid,playerInfo[targetid][aLogin], playerInfo[targetid][pName],strIOText);
		SetPlayerSkin(targetid,skinid);
	}
	else
	{
	    format(strIOText,sizeof(strIOText),"%s (%s) вернул стандартный скин для %s (%s). Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName], playerInfo[targetid][aLogin], playerInfo[targetid][pName],strIOText);
		SetPlayerSkin(targetid,playerInfo[targetid][pSkin]);
	}
	SendClientMessageToAll(COLOR_WHITE,strIOText);
	return 1;
}

CMD:showint(playerid,params[])
{
    if(!getPlayerPerm(playerid, 25))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[25][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new interior;
	if(sscanf(params,"i",interior)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/showint [id интерьера]");
	if(interior < 0 || interior > MAX_INTERIORS-1) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	SetPlayerPos(playerid,interiorInfo[interior][iX],interiorInfo[interior][iY],interiorInfo[interior][iZ]);
	SetPlayerInterior(playerid,interiorInfo[interior][iInterior]);
	format(strIOText,sizeof(strIOText),"%s (%s) телепортировался в %s(%d)",playerInfo[playerid][aLogin],playerInfo[playerid][pName], interiorInfo[interior][iName], interior);
	SendClientMessageToAll(COLOR_WHITE,strIOText);
	return 1;
}

CMD:restart(playerid)
{
    if(!getPlayerPerm(playerid, 26))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[26][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Происходит перезапуск сервера. В случае, если вы не будете подключены к серверу через несколько минут, введите {"#cOLOR_GRAY"}/q(uit)");
	    SetPlayerName(i, playerInfo[i][aLogin]);
		KickEx(i);
	}
    SendRconCommand("gmx");
    return 1;
}

//--------------------------------Инвентарь-------------------------------------

CMD:m4(playerid)
{
    if(IsPlayerAttachedObjectSlotUsed(playerid, 1))
    {
        RemovePlayerAttachedObject(playerid, 1);
    }
    else
    {
		SetPlayerAttachedObject(playerid,1, 356, 6);
    }
	return 1;
}

CMD:deagle(playerid)
{
    if(IsPlayerAttachedObjectSlotUsed(playerid, 1))
    {
        RemovePlayerAttachedObject(playerid, 1);
    }
    else
    {
		SetPlayerAttachedObject(playerid,1, 348, 6);
    }
	return 1;
}

stock showPlayerItemAction(playerid)
{
    if(GetPVarInt(playerid, "selectItem") == 0) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Произошла непредвиденная ошибка. Пожалуйста сообщите Администратору");
    new itemid;
    format(strSQLQuery, sizeof(strSQLQuery),"SELECT `itemid` FROM `items` WHERE `id` = '%d' LIMIT 30", GetPVarInt(playerid, "selectItem"));
	mysql_query(strSQLQuery);
    mysql_store_result();
    mysql_fetch_row_format(strSQLQuery);
	sscanf(strSQLQuery, "i", itemid);
    format(strHeaderPlayerDialog, sizeof(strHeaderPlayerDialog),"{"#cOLOR_WHITE"}Инвентарь: %s",itemInfo[itemid][itName]);
    ShowPlayerDialog(playerid,D_INV+1,DIALOG_STYLE_LIST,strHeaderPlayerDialog,"{"#cOLOR_WHITE"} - Использовать\n - Передать","Выбор","Назад");
	return 1;
}

CMD:inv(playerid)
{
	format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `items` WHERE `ownerid` = '%d' LIMIT 30", playerInfo[playerid][pID]);
	mysql_query(strSQLQuery);
    mysql_store_result();
   	if(mysql_num_rows() > 0)//Инвентарь: загрузка инвентаря игрока
	{
	    format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "");
		for(new i;i<mysql_num_rows();i++)
		{
		    new id, characterid, itemid, amount, comment[30];
		    mysql_fetch_row_format(strSQLQuery, "|");
	   		sscanf(strSQLQuery, "p<|>iiiis[30]",
				id,
				characterid,
				itemid,
				amount,
				comment);
			new commentid;
            sscanf(comment, "i",commentid);
			format(comment, sizeof(comment),"[%s]",comment);
			format(strTextPlayerDialog, sizeof(strTextPlayerDialog), "%s{"#cOLOR_GRAY"}[%d] - {"#cOLOR_WHITE"}%s {"#cOLOR_GRAY"}%s\n",strTextPlayerDialog,amount, itemInfo[itemid][itName], commentid == 0 ? (" ") : (comment));
		}//
		ShowPlayerDialog(playerid,D_INV,DIALOG_STYLE_LIST,"{"#cOLOR_WHITE"}Инвентарь",strTextPlayerDialog,"Ок","");
	}
	else//Инвентарь: нет предметов в инвентаре
	{
	    SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}В вашем инвентаре ничего нет. Для начала приобретите что нибудь");
	}
	mysql_free_result();
	return 1;
}

stock useItem(playerid, id)
{
    format(strSQLQuery,sizeof(strSQLQuery),"SELECT `itemid`, `comment` FROM `items` WHERE `id` = '%d' LIMIT 1", id);
    mysql_query(strSQLQuery);
    mysql_store_result();
    new comment[120], itemid;
    mysql_fetch_row_format(strSQLQuery, "|");
   	sscanf(strSQLQuery, "p<|>is[120]",
		itemid,
		comment);
    if(mysql_num_rows() == 1)
    {
	    switch(itemid)
	    {
	        case 0:
			{
			    // Использовать: ключи от дома
			    new homeid;
			    sscanf(comment, "i", homeid);
				if(!PlayerToPoint(2.0,playerid,houseInfo[getPropArrayID(homeid)][hX],houseInfo[getPropArrayID(homeid)][hY],houseInfo[getPropArrayID(homeid)][hZ])) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
				if(houseInfo[getPropArrayID(homeid)][hLock] == 0)
				{
				    houseInfo[getPropArrayID(homeid)][hLock] = 1;
				}
				else
				{
				    houseInfo[getPropArrayID(homeid)][hLock] = 0;
				}
				saveProp(getPropArrayID(homeid));
			}
	        case 1:
	        {
	            //Ключи от т/с
	        }
	        case 2:
			{
			    //Деньги
				PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
			}
	        case 3:
	        {
	            //Едим гамбургер
	        }
	        case 4:
	        {
	            //Бронежилет
	            new armourstate;
			    sscanf(comment, "f", armourstate);
	        }
	        case 5:
	        {
	            //Наручники
	        }
	        case 6:
	        {
	            //Фотоаппарат
	            new memory;
			    sscanf(comment, "i", memory);
	            GivePlayerWeapon(playerid, 43, memory);
	        }
	        case 7:
	        {
	            //Балончик с краской
	            GivePlayerWeapon(playerid, 41, 10);
	        }
	        case 8:
	        {
	            //Бесбольная бита
	            GivePlayerWeapon(playerid, 5, 1);
	        }
	        case 9:
	        {
	            //Полицейская дубинка
	            GivePlayerWeapon(playerid, 3, 1);
	        }
	        case 10:
	        {
	            //Букет цветов
	            GivePlayerWeapon(playerid, 14, 1);
	        }
	        case 11:
	        {
	            //Катана
	            GivePlayerWeapon(playerid, 8, 1);
	        }
	        case 12:
	        {
	            //Лопата
	            GivePlayerWeapon(playerid, 6, 1);
	        }
	        case 13:
	        {
	            //Охотничий нож
	            GivePlayerWeapon(playerid, 4, 1);
	        }
	        case 14:
	        {
	            //Клюшка для гольфа
	            GivePlayerWeapon(playerid, 2, 1);
	        }
	        case 15:
	        {
	            //Огнетушитель
	            GivePlayerWeapon(playerid, 42, 10);
	        }
	        case 16:
	        {
	            //Дигл
	            GivePlayerWeapon(playerid, 24, 10);
	        }
	        case 17:
	        {
	            //9мм
	            GivePlayerWeapon(playerid, 22, 10);
	        }
	        case 18:
	        {
	            //Тазер
	            GivePlayerWeapon(playerid, 23, 10);
	        }
	        case 19:
	        {
	            //Узи
	            GivePlayerWeapon(playerid, 28, 10);
	        }
	        case 20:
	        {
	            //МП5
	            GivePlayerWeapon(playerid, 29, 30);
	        }
	        case 21:
	        {
	            //ТЕК-9
	            GivePlayerWeapon(playerid, 32, 30);
	        }
	        case 22:
	        {
	            //Шотган
	            GivePlayerWeapon(playerid, 25, 30);
	        }
	        case 23:
	        {
	            //Комбат шотган
	            GivePlayerWeapon(playerid, 27, 30);
	        }
	        case 24:
	        {
	            //АК-47
	            GivePlayerWeapon(playerid, 30, 30);
	        }
	        case 25:
	        {
	            //М4
	            GivePlayerWeapon(playerid, 31, 30);
			}
	        case 26:
	        {
	            //Рифл
	            GivePlayerWeapon(playerid, 33, 10);
	        }
	        case 27:
	        {
	            //Снайпер рифл
	            GivePlayerWeapon(playerid, 34, 10);
	        }
	        case 28:
	        {
	            //Мобильный
	            SendClientMessageEx(playerid, COLOR_WHITE,"Команды: /call [номер], /p, /h");
	        }
	        case 29:
	        {
	            //Рация
				SendClientMessageEx(playerid, COLOR_WHITE,"Команды: /r [текст], /rset [канал]");
	        }
	        case 30:
	        {
	            //Паспорт
	        }
	        case 31:
	        {
	            //Наркотики
	            SetPlayerDrunkLevel(playerid, 50000);
	        }
	        case 32:
	        {
	            //Карта допуска
	        }
	        case 33:
	        {
	            //Жетон полицейского
	        }

	        case 34:
	        {
	            //Одежда
	            new skinid;
	            sscanf(comment, "i", skinid);
				SetPlayerSkin(playerid, skinid);
				playerInfo[playerid][pSkin] = skinid;
	        }
	        
	    }
    }
    return 1;
}

stock addItem(playerid, itemid, amount, comment[])
{
    format(strSQLQuery,sizeof(strSQLQuery),"SELECT `amount` FROM `items` WHERE `ownerid` = '%d' AND `itemid` = '%d' AND `comment` = '%s' LIMIT 1", playerInfo[playerid][pID], itemid, comment);
    mysql_query(strSQLQuery);
    mysql_store_result();
    if(mysql_num_rows() == 1)
    {
        new amountInDB;
        mysql_fetch_row_format(strSQLQuery);
		sscanf(strSQLQuery, "i",amountInDB);
        format(strSQLQuery,sizeof(strSQLQuery),"UPDATE `items` SET `amount`= '%d'  WHERE `ownerid` = '%d' AND `itemid` = '%d' AND `comment` = '%s'", amountInDB+amount, playerInfo[playerid][pID], itemid, comment);
		mysql_query(strSQLQuery);
    }
    else
    {
        format(strSQLQuery, sizeof(strSQLQuery), "INSERT INTO `items` (`ownerid`, `itemid`, `amount`, `comment`) VALUE ('%d', '%d', '%d', '%s')", playerInfo[playerid][pID], itemid, amount, comment);
		mysql_query(strSQLQuery);
    }
	return 1;
}

stock delItem(playerid, itemid, amount, comment[])
{
    format(strSQLQuery,sizeof(strSQLQuery),"SELECT `amount` FROM `items` WHERE `ownerid` = '%d' AND `itemid` = '%d' AND `comment` = '%s' LIMIT 1", playerInfo[playerid][pID], itemid, comment);
    mysql_query(strSQLQuery);
    mysql_store_result();
    if(mysql_num_rows() == 1)
    {
        new amountInDB;
        mysql_fetch_row_format(strSQLQuery);
		sscanf(strSQLQuery, "i",amountInDB);
		if(amount >= amountInDB)
		{
		    format(strSQLQuery, sizeof(strSQLQuery), "DELETE from `items` WHERE `ownerid` = '%d' AND `itemid` = '%d' AND `comment` = '%s'", playerInfo[playerid][pID], itemid, comment);
			mysql_query(strSQLQuery);
		}
		else
		{
		    format(strSQLQuery,sizeof(strSQLQuery),"UPDATE `items` SET `amount`= '%d'  WHERE `ownerid` = '%d' AND `itemid` = '%d' AND `comment` = '%s'", amountInDB-amount, playerInfo[playerid][pID], itemid, comment);
			mysql_query(strSQLQuery);
		}
    }
    else
    {
        return false;
    }
    return 1;
}

stock ifPlayerHaveItem(playerid, itemid, amount)
{
    format(strSQLQuery,sizeof(strSQLQuery),"SELECT `id` FROM `items` WHERE `ownerid` = '%d' AND `itemid` = '%d' AND `amount` > '%d' LIMIT 1", playerInfo[playerid][pID], itemid,amount-1);
    mysql_query(strSQLQuery);
    mysql_store_result();
    if(mysql_num_rows() != 0) return true;
	else return false;
}

CMD:giveitem(playerid, params[])
{
    if(!getPlayerPerm(playerid, 9))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[9][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new targetid,itemid, amount, comment[128];
	if(sscanf(params,"iiis[128]",targetid, itemid, amount, comment)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/giveitem [id] [id предмета] [количество] [комментарий(0)]");
    if(!playerInfo[targetid][aLogged]) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Игрок не авторизован");
    addItem(targetid, itemid, amount, comment);
	return 1;
}

CMD:takeitem(playerid, params[])
{
    if(!getPlayerPerm(playerid, 9))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[9][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new targetid,itemid, amount, comment[128];
	if(sscanf(params,"iiis[128]",targetid, itemid, amount, comment)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/takeitem [id] [id предмета] [количество] [комментарий(0)]");
    if(!playerInfo[targetid][aLogged]) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Игрок не авторизован");
    delItem(targetid, itemid, amount, comment);
	return 1;
}

CMD:buyitem(playerid, params[])
{
    new itemid, amount;
	if(sscanf(params,"ii",itemid, amount)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/buyitem [id предмета] [количество]");
    if(!ifPlayerHaveItem(playerid, 2, itemInfo[itemid][itPrice]*amount)) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}У вас недостаточно денег");
	addItem(playerid, itemid, amount, "0");
	delItem(playerid, 2, itemInfo[itemid][itPrice]*amount, "0");
	return 1;
}

//--------------------------------Транспорт-------------------------------------
CMD:trail(playerid, params[])
{
	new veh1,veh2;
    if(sscanf(params,"ii",veh1,veh2)) return SendClientMessageEx(playerid,COLOR_YELLOW,"Подсказка: {"#cOLOR_WHITE"}Используйте {"#cOLOR_GRAY"}/trail [id т/с №1] [id т/с №2]");
    if(IsTrailerAttachedToVehicle(veh1) || IsTrailerAttachedToVehicle(veh2))
    {
        DetachTrailerFromVehicle(veh1);
        DetachTrailerFromVehicle(veh2);
    }
	AttachTrailerToVehicle(veh1,veh2);
	return 1;
}
CMD:vlock(playerid)
{
	new Float: x, Float: y, Float: z;
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
	    GetVehiclePos(i, x, y, z);
	    if(!PlayerToPoint(4.0, playerid, x , y, z)) continue;
	    new engine, lights, alarm, doors, bonnet, boot, objective,vehid;
	    GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
	    if(doors == 0)
	    {
	        doors = 1;
	        SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Двери заперты. Чтобы открыть их снова введите {"#cOLOR_GRAY"}/vlock");
	    }
	    else
	    {
	        doors = 0;
	        SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Двери открыть. Чтобы закрыть их снова введите {"#cOLOR_GRAY"}/vlock");
	    }
	    SetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, boot, objective);
	    break;
	}
	return 1;
}

CMD:valarm(playerid)
{
	new Float: x, Float: y, Float: z;
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
	    GetVehiclePos(i, x, y, z);
	    if(!PlayerToPoint(4.0, playerid, x , y, z)) continue;
	    new engine, lights, alarm, doors, bonnet, boot, objective,vehid;
	    GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
	    if(alarm == 0)
	    {
	        alarm = 1;
	        SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Сигнализация включена. Чтобы выключить её снова введите {"#cOLOR_GRAY"}/valarm");
	    }
	    else
	    {
	        alarm = 0;
	        SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Сигнализация выключена. Чтобы включить её снова введите {"#cOLOR_GRAY"}/valarm");
	    }
	    SetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, boot, objective);
	    break;
	}
	return 1;
}

CMD:vboot(playerid)
{
	new Float: x, Float: y, Float: z;
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
	    GetVehiclePos(i, x, y, z);
	    if(!PlayerToPoint(4.0, playerid, x , y, z)) continue;
	    new engine, lights, alarm, doors, bonnet, boot, objective,vehid;
	    GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
	    if(boot == 0)
	    {
	        boot = 1;
	        SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Багажник закрыт. Чтобы открыть его снова введите {"#cOLOR_GRAY"}/vboot");
	    }
	    else
	    {
	        boot = 0;
	        SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Багажник открыт. Чтобы закрыть его снова введите {"#cOLOR_GRAY"}/vboot");
	    }
	    SetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, boot, objective);
	    break;
	}
	return 1;
}

CMD:vbonnet(playerid)
{
	new Float: x, Float: y, Float: z;
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
	    GetVehiclePos(i, x, y, z);
	    if(!PlayerToPoint(4.0, playerid, x , y, z)) continue;
	    new engine, lights, alarm, doors, bonnet, boot, objective,vehid;
	    GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
	    if(bonnet == 0)
	    {
	        bonnet = 1;
	        SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Копот открыт. Чтобы закрыть его снова введите {"#cOLOR_GRAY"}/vbonnet");
	    }
	    else
	    {
	        bonnet = 0;
	        SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Копот закрыт. Чтобы открыть его снова введите {"#cOLOR_GRAY"}/vbonnet");
	    }
	    SetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, boot, objective);
	    break;
	}
	return 1;
}

CMD:en(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Эта команда доступна только в транспорте");
    new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
	if(engine == 0)
	{
	    engine = 1;
	    SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Двигатель заведен. Чтобы заглушить двигатель снова введите {"#cOLOR_GRAY"}/en{"#cOLOR_WHITE"}, или нажмите на {"#cOLOR_RED"}2");
	}
	else
	{
	    engine = 0;
	    SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Двигатель заглушен. Чтобы завести двигатель снова введите {"#cOLOR_GRAY"}/en{"#cOLOR_WHITE"}, или нажмите на {"#cOLOR_GREEN"}2");
	}
	SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
    return 1;
}

CMD:lights(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Эта команда доступна только в транспорте");
    new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
	if(lights == 0)
	{
	    lights = 1;
	    SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Фары включены. Чтобы выключить их снова введите {"#cOLOR_GRAY"}/en{"#cOLOR_WHITE"}, или нажмите на {"#cOLOR_RED"}ALT");
	}
	else
	{
	    lights = 0;
	    SendClientMessageEx(playerid,COLOR_GREEN,"Сообщение: {"#cOLOR_WHITE"}Фары выключены. Чтобы включить их снова введите {"#cOLOR_GRAY"}/en{"#cOLOR_WHITE"}, или нажмите на {"#cOLOR_GREEN"}ALT");
	}
	SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
    return 1;
}


//--------------------------------Недвижимость----------------------------------

CMD:addprop(playerid)
{
	format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"");
	for(new i=0;i<sizeof(classInfo);i++)
	{
	    format(strTextPlayerDialog, sizeof(strTextPlayerDialog),"%s%d. %s\n",strTextPlayerDialog, i, classInfo[i][cName]);
	}
    ShowPlayerDialog(playerid,D_ADDPROP,DIALOG_STYLE_LIST,"{"#cOLOR_ORANGE"}Выберите класс недвижимости",strTextPlayerDialog,"Ок","");
	return 1;
}

stock getInteriorClass(interiorid)
{
	new classname[25];
	switch(interiorInfo[interiorid][iClass])
	{
		default: classname = "Недвижимость";
	}
	return classname;
}

stock getInteriorRooms(interiorid)
{
	return interiorInfo[interiorid][iRooms];
}

stock updateProp(i)
{
	if(houseInfo[i][hOWID] == 0)
	{
	    format(strIOText, sizeof(strIOText),"{"#cOLOR_PINK"}%s\n%s\nВывеска на двери: продается за {"#cOLOR_GREEN"}$%d\n{"#cOLOR_PINK"}Адрес: {"#cOLOR_GRAY"}%s, %s, %d",houseInfo[i][hName], houseInfo[i][hDesc], houseInfo[i][hPrice], GetCity(houseInfo[i][hX],houseInfo[i][hY],houseInfo[i][hZ]),GetZone(houseInfo[i][hX],houseInfo[i][hY],houseInfo[i][hZ]), houseInfo[i][hID]);
	}
	else
	{
	    format(strIOText, sizeof(strIOText),"{"#cOLOR_PINK"}%s\n%s\n{"#cOLOR_PINK"}Адрес: {"#cOLOR_GRAY"}%s, %s, %d",houseInfo[i][hName], houseInfo[i][hDesc],GetZone(houseInfo[i][hX],houseInfo[i][hY],houseInfo[i][hZ]), houseInfo[i][hID]);
	
	}
	if(IsValidDynamic3DTextLabel(houseInfo[i][hText]))
	{
	    UpdateDynamic3DTextLabelText(houseInfo[i][hText],0xFFFFFF55,strIOText);
	}
	else
	{
		houseInfo[i][hText] = CreateDynamic3DTextLabel(strIOText,0xFFFFFFAA,houseInfo[i][hX],houseInfo[i][hY],houseInfo[i][hZ]+1,5.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 0,houseInfo[i][hVW],0, -1,1.0);
	}
	if(IsValidDynamicMapIcon(houseInfo[i][hMapIcon]))
	{
	    DestroyDynamicMapIcon(houseInfo[i][hMapIcon]);
	}
	houseInfo[i][hMapIcon] = CreateDynamicMapIcon(houseInfo[i][hX],houseInfo[i][hY],houseInfo[i][hZ], houseInfo[i][hOWID] == 0 ? (31) : (32), 0, houseInfo[i][hVW], -1, -1, 250.0);
	return 1;
}

stock saveProp(houseid)
{
	format(strSQLQuery,sizeof(strSQLQuery),"UPDATE `houses` SET `desc`=\"%s\",", houseInfo[houseid][hDesc]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `name`=\"%s\",",strSQLQuery,houseInfo[houseid][hName]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `ownerid`=\"%d\",",strSQLQuery,houseInfo[houseid][hOWID]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `price`=\"%d\",",strSQLQuery,houseInfo[houseid][hPrice]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `x`=\"%f\",",strSQLQuery,houseInfo[houseid][hX]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `y`=\"%f\",",strSQLQuery,houseInfo[houseid][hY]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `z`=\"%f\",",strSQLQuery,houseInfo[houseid][hZ]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `interiorid`=\"%d\",",strSQLQuery,houseInfo[houseid][hInteriorID]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `interior`=\"%f\",",strSQLQuery,houseInfo[houseid][hVW]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `virtualworld`=\"%f\",",strSQLQuery,houseInfo[houseid][hInterior]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `lock`=\"%d\",",strSQLQuery,houseInfo[houseid][hLock]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s `sell`=\"%d\"",strSQLQuery,houseInfo[houseid][hSell]);
	format(strSQLQuery,sizeof(strSQLQuery),"%s WHERE (`id`=\"%d\")",strSQLQuery,houseInfo[houseid][hID]);
	mysql_query(strSQLQuery);
	return 1;
}

stock getPropArrayID(houseid)//Ввод: id из базы
{
	for(new i = 0; i < MAX_HOUSES; i++)
	{
	    if(houseInfo[i][hID] != houseid) continue;
	    return i;//Вывод: id из массива
	}
	return -1;
}

CMD:buy(playerid)
{
	for(new i = 0; i < MAX_HOUSES; i++)
	{
	    if(!PlayerToPoint(2.0,playerid,houseInfo[i][hX],houseInfo[i][hY],houseInfo[i][hZ])) continue;
	    if(houseInfo[i][hOWID] != 0) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Эта недвижимость не на продажу");
	    if(houseInfo[i][hSell] > 0)
	    {
	        //Частный
	        if(!ifPlayerHaveItem(playerid, 2, houseInfo[i][hSell])) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}У вас недостаточно средств для покупки этой недвижимости");
			
			playerInfo[playerid][pHomeID] = houseInfo[i][hID];
			delItem(playerid, 2, houseInfo[i][hSell], "0");
			
			if(getPlayerID(houseInfo[i][hOWID]) != INVALID_PLAYER_ID)
			{
			    playerInfo[getPlayerID(houseInfo[i][hOWID])][pHomeID] = 0;
			    addItem(getPlayerID(houseInfo[i][hOWID]), 2, houseInfo[i][hSell], "0");
			}
			else
			{
			    //Заливаем деньги на счет в бд
			    format(strIOText,sizeof(strIOText),"UPDATE `players` SET `money`= `money` +\"%d\"  WHERE (`id`=\"%d\")", houseInfo[i][hSell], houseInfo[i][hOWID]);
				mysql_query(strIOText);
			}
			houseInfo[i][hOWID] = playerInfo[playerid][pID];
			houseInfo[i][hSell] = 0;
	    }
	    else
	    {
			//Гос
			if(!ifPlayerHaveItem(playerid, 2, houseInfo[i][hPrice])) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}У вас недостаточно средств для покупки этой недвижимости");
			houseInfo[i][hOWID] = playerInfo[playerid][pID];
			playerInfo[playerid][pHomeID] = houseInfo[i][hID];
			delItem(playerid, 2, houseInfo[i][hPrice], "0");

	    }
	    saveProp(i);
	    updateProp(i);
	    break;
	}
	return 1;
}

CMD:pname(playerid, params[])
{
    if(!getPlayerPerm(playerid, 17))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[17][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
    for(new i = 0; i < houses; i++)
	{
	    if(!PlayerToPoint(2.0,playerid,houseInfo[i][hX],houseInfo[i][hY],houseInfo[i][hZ])) continue;
	    if(sscanf(params,"s[128]", params)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	    mysql_real_escape_string(params, houseInfo[i][hName]);
	    saveProp(i);
	    updateProp(i);
	    break;
	}
    return 1;
}

CMD:pdesc(playerid, params[])
{
    if(!getPlayerPerm(playerid, 17))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[17][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
    for(new i = 0; i < houses; i++)
	{
	    if(!PlayerToPoint(2.0,playerid,houseInfo[i][hX],houseInfo[i][hY],houseInfo[i][hZ])) continue;
	    if(sscanf(params,"s[128]", params)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	    mysql_real_escape_string(params, houseInfo[i][hDesc]);
	    saveProp(i);
	    updateProp(i);
	}
    return 1;
}

CMD:sell(playerid, params[])
{
    if(playerInfo[playerid][pHomeID] == 0) return 0;
    if(!PlayerToPoint(2.0,playerid,houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hX],houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hY],houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hZ])) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    new price;
    if(sscanf(params,"i",price)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    if(price < 0) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    if(price > houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hPrice] * 1.3) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hSell] = price;
    getPropArrayID(playerInfo[playerid][pHomeID]);
    return 1;
}

CMD:hlock(playerid)
{
	if(playerInfo[playerid][pHomeID] == 0) return 0;
	if(!PlayerToPoint(2.0,playerid,houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hX],houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hY],houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hZ])) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	if(houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hLock] == 0)
	{
	    houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hLock] = 1;
	}
	else
	{
	    houseInfo[getPropArrayID(playerInfo[playerid][pHomeID])][hLock] = 0;
	}
	saveProp(getPropArrayID(playerInfo[playerid][pHomeID]));
	return 1;
}

CMD:enter(playerid)
{
	for(new i = 0; i < houses; i++)
	{
	    if(!PlayerToPoint(2.0,playerid,houseInfo[i][hX],houseInfo[i][hY],houseInfo[i][hZ])) continue;
	    if(houseInfo[i][hLock] != 0) return SendClientMessageEx(playerid,COLOR_RED,"Ошибка: {"#cOLOR_WHITE"}Дверь заперта");
	    SetPlayerPos(playerid, interiorInfo[houseInfo[i][hInteriorID]][iX], interiorInfo[houseInfo[i][hInteriorID]][iY], interiorInfo[houseInfo[i][hInteriorID]][iZ]);
	    SetPlayerVirtualWorld(playerid, houseInfo[i][hID]);
	    SetPlayerInterior(playerid, interiorInfo[houseInfo[i][hInteriorID]][iInterior]);
	    break;
	}
	return 1;
}

CMD:exit(playerid)
{
	if(GetPlayerVirtualWorld(playerid) == 0) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    for(new i = 0; i < MAX_INTERIORS; i++)
	{
	    if(!PlayerToPoint(2.0,playerid,interiorInfo[i][iX], interiorInfo[i][iY], interiorInfo[i][iZ])) continue;
	    SetPlayerPos(playerid, houseInfo[getPropArrayID(GetPlayerVirtualWorld(playerid))][hX],houseInfo[getPropArrayID(GetPlayerVirtualWorld(playerid))][hY],houseInfo[getPropArrayID(GetPlayerVirtualWorld(playerid))][hZ]);
		SetPlayerInterior(playerid, houseInfo[getPropArrayID(GetPlayerVirtualWorld(playerid))][hInterior]);
		SetPlayerVirtualWorld(playerid, houseInfo[getPropArrayID(GetPlayerVirtualWorld(playerid))][hVW]);
		break;
	}
	return 1;
}

CMD:createhouse(playerid, params[])
{
    if(!getPlayerPerm(playerid, 15))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[15][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new price, interiorid;
	if(sscanf(params,"ii",interiorid, price)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	if(price < 0) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	if(interiorid < 0 || interiorid > 144) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	new Float: x, Float: y, Float: z, vw = GetPlayerVirtualWorld(playerid), interior = GetPlayerInterior(playerid);
	GetPlayerPos(playerid, x, y, z);
	format(strSQLQuery, sizeof(strSQLQuery), "INSERT INTO `houses` (`price`, `x`, `y`, `z`, `virtualworld`, `interior`, `interiorid`) VALUE ('%d', '%f', '%f', '%f', '%d', '%d', '%d')", price, x, y, z, vw, interior, interiorid);
	mysql_query(strSQLQuery);
	return 1;
}

CMD:deletehouse(playerid, params[])
{
    if(!getPlayerPerm(playerid, 14))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[14][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
    new houseid;
    if(sscanf(params,"i",houseid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	format(strSQLQuery, sizeof(strSQLQuery), "DELETE from `houses` WHERE `id` = '%d'", houseid);
	mysql_query(strSQLQuery);
	return 1;
}

CMD:movehouse(playerid, params[])
{
    if(!getPlayerPerm(playerid, 16))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[16][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
    new houseid;
    if(sscanf(params,"i",houseid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    new Float: x, Float: y, Float: z;
	GetPlayerPos(playerid, x, y, z);
	return 1;
}

//-----------------------------Телефон------------------------------------------
stock createNumber(playerid)
{
	new number = 100000 + random(899999);
	format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `items` WHERE `itemid` = '28' `comment` = '%d' LIMIT 1", number);
	mysql_query(strSQLQuery);
	mysql_store_result();
	if(mysql_num_rows() != 0) return createNumber(playerid);
	return number;
}
//-----------------------------Фракции------------------------------------------

CMD:factionperm(playerid, params[])
{
    if(!getPlayerPerm(playerid, 13))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[13][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
    new factionid;
    if(sscanf(params,"i",factionid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    format(strSQLQuery, sizeof(strSQLQuery),"SELECT `permid` FROM `permissions` WHERE `id` = '%d'", factionid);
	mysql_query(strSQLQuery);
	mysql_store_result();
	if(mysql_num_rows() != 0)
	{
	    new permid;
	    SendClientMessageEx(playerid,COLOR_PINK,"Доступные возможности:");
	    for(new i;i<mysql_num_rows();i++)
		{
	    	mysql_fetch_row_format(strSQLQuery);
	   		sscanf(strSQLQuery, "i",
		   		permid);
		    SendClientMessageEx(playerid,COLOR_PINK,permissionInfo[permid][perName]);
		}
	}
	else
	{
	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	}
	return 1;
}

CMD:factionlist(playerid)
{
    format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `factions` LIMIT 100", strIOText);
	mysql_query(strSQLQuery);
	mysql_store_result();
	if(mysql_num_rows() != 0)
	{
	    new factionid, ownerid, factionname[30];
	    SendClientMessageEx(playerid,COLOR_PINK,"ID Фракции | ID Лидера | Название");
	    for(new i;i<mysql_num_rows();i++)
		{
	    	mysql_fetch_row_format(strSQLQuery, "|");
	   		sscanf(strSQLQuery, "p<|>iis[30]",
		   		factionid,
			   	ownerid,
			   	factionname);
			format(strIOText, sizeof(strIOText), "%d | %d | %s",factionid, ownerid, factionname);
		    SendClientMessageEx(playerid,COLOR_PINK,strIOText);
		}
	}
	else PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	return 1;
}

CMD:factioninfo(playerid, params[])
{
    new factionid;
    if(sscanf(params,"i",factionid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `factions` WHERE `id` = '%d' LIMIT 1", factionid);
	mysql_query(strSQLQuery);
	mysql_store_result();
	if(mysql_num_rows() != 0)
	{
	    new ownerid, factionname[30];
	    mysql_fetch_row_format(strSQLQuery, "|");
	   	sscanf(strSQLQuery, "p<|>iis[30]",
			factionid,
		   	ownerid,
		   	factionname);
		   	
        mysql_free_result();
		format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `players` WHERE `faction` = '%d' LIMIT 1", factionid);
		mysql_query(strSQLQuery);
		mysql_store_result();
		format(strIOText, sizeof(strIOText), "ID: %d | ID Лидера: %d | Название: %s | Участники: %d",factionid, ownerid, factionname, mysql_num_rows());
	    SendClientMessageEx(playerid,COLOR_PINK,strIOText);
	    mysql_free_result();
	}
	else PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    return 1;
}

CMD:createfaction(playerid, params[])
{
    if(!getPlayerPerm(playerid, 11))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[11][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
	new targetid, factionname[30];
    if(sscanf(params,"is[30]",targetid, factionname)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    if(!playerInfo[targetid][aLogged]) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    if(playerInfo[targetid][pFaction] != 0) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    if(strval(factionname) > 30) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `factions` WHERE `name` = '%s' LIMIT 1", factionname);
	mysql_query(strSQLQuery);
	mysql_store_result();
	if(mysql_num_rows() == 0)
	{
	    format(strIOText,sizeof(strIOText),"%s (%s) создал организацию %s с лидером %s (%s)",playerInfo[playerid][aLogin],playerInfo[playerid][pName], factionname, playerInfo[targetid][aLogin], playerInfo[targetid][pName]);
		SendClientMessageToAll(COLOR_WHITE,strIOText);
		format(strSQLQuery, sizeof(strSQLQuery), "INSERT INTO `factions` (`ownerid`, `name`) VALUE ('%d', '%s')", playerInfo[targetid][pID], strIOText);
		mysql_query(strSQLQuery);
		mysql_free_result();
		format(strIOText,sizeof(strIOText),"SELECT `id` FROM `factions` WHERE `ownerid` = '%d' LIMIT 1", playerInfo[playerid][pID]);
    	mysql_query(strIOText);
    	mysql_store_result();
    	mysql_fetch_row_format(strSQLQuery);
   		sscanf(strSQLQuery, "i", playerInfo[targetid][pFaction]);
   		mysql_free_result();
	}
	else
	{
	    //Есть фракция с таким именем
	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	}
	return 1;
}

CMD:delfaction(playerid,params[])
{
    if(!getPlayerPerm(playerid, 10))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[10][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
    new factionid,factionname[30];
    if(sscanf(params,"is[128]",factionid, params)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    format(strSQLQuery, sizeof(strSQLQuery),"SELECT * FROM `factions` WHERE `id` = '%d' LIMIT 1", factionid);
	mysql_query(strSQLQuery);
	mysql_store_result();
	if(mysql_num_rows() != 0)
	{
	    format(strSQLQuery, sizeof(strSQLQuery),"SELECT `name` FROM `factions` WHERE `id` = '%d' LIMIT 1", factionid);
		mysql_query(strSQLQuery);
		mysql_store_result();
		mysql_fetch_row_format(strSQLQuery);
	   	sscanf(strSQLQuery, "s[30]",factionname);
	    format(strIOText,sizeof(strIOText),"%s (%s) удалил фракцию %s. Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName], factionname, params);
		SendClientMessageToAll(COLOR_WHITE,strIOText);
		mysql_free_result();
	}
	else
	{
	    //Нет такой фракции
	    PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	}
	return 1;
}

CMD:setleader(playerid, params[])
{
    if(!getPlayerPerm(playerid, 12))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[26][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
    new targetid, factionid, factionname[30];
    if(sscanf(params,"iis[128]",targetid, factionid, params)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    if(!playerInfo[targetid][aLogged]) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    if(playerInfo[targetid][pFaction] != 0 || playerInfo[targetid][pFaction] != factionid) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    format(strIOText,sizeof(strSQLQuery),"UPDATE `factions` SET `ownerid`= \"%d\"  WHERE (`id`=\"%d\")", playerInfo[targetid][pID], factionid);
	mysql_query(strSQLQuery);
	mysql_free_result();
	format(strSQLQuery, sizeof(strSQLQuery),"SELECT `name` FROM `factions` WHERE `id` = '%d' LIMIT 1", factionid);
	mysql_query(strSQLQuery);
	mysql_store_result();
	mysql_fetch_row_format(strSQLQuery);
	sscanf(strSQLQuery, "s[30]",factionname);
	mysql_free_result();
	format(strIOText,sizeof(strIOText),"%s (%s) назначил %s лидером фракции %s. Причина: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName], playerInfo[targetid][pName], factionname, params);
	SendClientMessageToAll(COLOR_WHITE,strIOText);
	return 1;
}

CMD:invite(playerid, params[])
{
    if(playerInfo[playerid][pFaction] == 0) return 0;
	new targetid;
    if(sscanf(params,"i",targetid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    if(playerInfo[targetid][pFaction] != 0) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    //Проверяем на лидерство в фракции и добавляем игрока в фракцию
	return 1;
}

CMD:leave(playerid, params[])
{
    if(playerInfo[playerid][pFaction] == 0) return 0;
    new targetid;
    if(sscanf(params,"i",targetid))
    {

		//Выход из фракции
        playerInfo[playerid][pFaction] = 0;
    }
    else
    {
        playerInfo[targetid][pFaction] = 0;
        //Выгнать из фракии кого-то
    }
	return 1;
}

CMD:setfactionname(playerid, params[])
{
    if(!getPlayerPerm(playerid, 13))
	{
	    format(strIOText, sizeof(strIOText), "Ошибка: {"#cOLOR_WHITE"}Вам недоступна возможность {"#cOLOR_GRAY"}%s", permissionInfo[13][perName]);
	    SendClientMessageEx(playerid,COLOR_RED,strIOText);
	    return 1;
	}
    new factionid, factionname[30];
    if(sscanf(params,"is[30]",factionid, factionname)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
    format(strSQLQuery, sizeof(strSQLQuery),"SELECT `name` FROM `factions` WHERE `id` = '%d' LIMIT 1", factionid);
	mysql_query(strSQLQuery);
	mysql_store_result();
	if(mysql_num_rows() != 0)
	{
	    new oldfactionname[30];
	    mysql_fetch_row_format(strSQLQuery);
		sscanf(strSQLQuery, "s[30]",oldfactionname);
	    format(strIOText,sizeof(strIOText),"UPDATE `factions` SET `name`=\"%s\"  WHERE (`id`=\"%d\")", factionname, factionid);
		mysql_query(strIOText);
		format(strIOText,sizeof(strIOText),"%s (%s) переименовал фракцию %s[%d]. Новое название: %s",playerInfo[playerid][aLogin],playerInfo[playerid][pName], oldfactionname, factionid,factionname);
		SendClientMessageToAll(COLOR_WHITE,strIOText);
	}
	else
	{
	    //Нет такой фракции
	    return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	}
	return 1;
}

//------------------------------------------------------------Анимации----------
stock ApplyAnimationEx(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync)
{
    ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
    ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
    ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
    return 1;
}
CMD:rap(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
	    case 1: ApplyAnimationEx(playerid,"RAPPING","Laugh_01",4.1,1,1,1,1,1,1);
	    case 2: ApplyAnimationEx(playerid,"RAPPING","RAP_A_Loop",4.1,1,1,1,1,1,1);
	    case 3: ApplyAnimationEx(playerid,"RAPPING","RAP_A_OUT",4.1,1,1,1,1,1,1);
	    case 4: ApplyAnimationEx(playerid,"RAPPING","RAP_B_IN",4.1,1,1,1,1,1,1);
	    case 5: ApplyAnimationEx(playerid,"RAPPING","RAP_B_Loop",4.1,1,1,1,1,1,1);
	    case 6: ApplyAnimationEx(playerid,"RAPPING","RAP_B_OUT",4.1,1,1,1,1,1,1);
	    case 7: ApplyAnimationEx(playerid,"RAPPING","RAP_C_Loop",4.1,1,1,1,1,1,1);
	    default: GameTextForPlayer(playerid,"~r~~k~/rap ~w~[1-7]",2000,6);
	}
	return 1;
}
CMD:smoke(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SMOKING", "F_smklean_loop",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid, "SMOKING", "M_smklean_loop",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid, "SMOKING", "M_smkstnd_loop",4.1,1,1,1,1,1,1);
		case 4: ApplyAnimationEx(playerid, "SMOKING", "M_smk_drag",4.1,1,1,1,1,1,1);
		case 5: ApplyAnimationEx(playerid, "SMOKING", "M_smk_in",4.1,1,1,1,1,1,1);
		case 6: ApplyAnimationEx(playerid, "SMOKING", "M_smk_loop",4.1,1,1,1,1,1,1);
		case 7: ApplyAnimationEx(playerid, "SMOKING", "M_smk_out",4.1,1,1,1,1,1,1);
		case 8: ApplyAnimationEx(playerid, "SMOKING", "M_smk_tap",4.1,1,1,1,1,1,1);
		default: GameTextForPlayer(playerid,"~r~~k~/smoke ~w~[1-8]",2000,6);
	}
	return 1;
}

CMD:crack(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CRACK", "Bbalbat_Idle_01",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid, "CRACK", "Bbalbat_Idle_02",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid, "CRACK", "crckdeth1",4.1,1,1,1,1,1,1);
		case 4: ApplyAnimationEx(playerid, "CRACK", "crckdeth2",4.1,1,1,1,1,1,1);
		case 5: ApplyAnimationEx(playerid, "CRACK", "crckdeth3",4.1,1,1,1,1,1,1);
		case 6: ApplyAnimationEx(playerid, "CRACK", "crckdeth4",4.1,1,1,1,1,1,1);
		case 7: ApplyAnimationEx(playerid, "CRACK", "crckidle1",4.1,1,1,1,1,1,1);
		case 8: ApplyAnimationEx(playerid, "CRACK", "crckidle2",4.1,1,1,1,1,1,1);
		case 9: ApplyAnimationEx(playerid, "CRACK", "crckidle3",4.1,1,1,1,1,1,1);
		case 10: ApplyAnimationEx(playerid, "CRACK", "crckidle4",4.1,1,1,1,1,1,1);
		default: GameTextForPlayer(playerid,"~r~~k~/crack ~w~[1-10]",2000,6);
	}
	return 1;
}

CMD:walk(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
    switch(animid)
	{
	    case 1: ApplyAnimationEx(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1,1);
	    case 2: ApplyAnimationEx(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1,1);
	    case 3: ApplyAnimationEx(playerid,"PED","WALK_old",4.1,1,1,1,1,1,1);
	    case 4: ApplyAnimationEx(playerid,"PED","WALK_player",4.1,1,1,1,1,1,1);
	    case 5: ApplyAnimationEx(playerid,"PED","WALK_shuffle",4.1,1,1,1,1,1,1);
	    case 6: ApplyAnimationEx(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1,1);
	    case 7: ApplyAnimationEx(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/walk ~w~[1-7]",2000,6);
	}
	return 1;
}

CMD:ped(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"PED","BIKE_fallR",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"PED","BIKE_fall_off",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid,"PED","FLOOR_hit",4.1,1,1,1,1,1,1);
		case 4: ApplyAnimationEx(playerid,"PED","FLOOR_hit_f",4.1,1,1,1,1,1,1);
		case 5: ApplyAnimationEx(playerid,"PED","IDLE_taxi",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/ped ~w~[1-5]",2000,6);
	}
	return 1;
}

CMD:sign(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
    switch (animid)
	{
	    case 1: ApplyAnimationEx(playerid,"GHANDS","gsign1",4.1,1,1,1,1,1,1);
	    case 2: ApplyAnimationEx(playerid,"GHANDS","gsign2",4.1,1,1,1,1,1,1);
	    case 3: ApplyAnimationEx(playerid,"GHANDS","gsign3",4.1,1,1,1,1,1,1);
	    case 4: ApplyAnimationEx(playerid,"GHANDS","gsign4",4.1,1,1,1,1,1,1);
	    case 5: ApplyAnimationEx(playerid,"GHANDS","gsign5",4.1,1,1,1,1,1,1);
	    default : GameTextForPlayer(playerid,"~r~~k~/sign ~w~[1-5]",2000,6);
	}
	return 1;
}

CMD:pool(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
	    case 1: ApplyAnimationEx(playerid,"POOL","POOL_ChalkCue",4.1,1,1,1,1,1,1);
	    case 2: ApplyAnimationEx(playerid,"POOL","POOL_Idle_Stance",4.1,1,1,1,1,1,1);
	    case 3: ApplyAnimationEx(playerid,"POOL","POOL_Long_Shot",4.1,1,1,1,1,1,1);
	    case 4: ApplyAnimationEx(playerid,"POOL","POOL_Long_Shot_O",4.1,1,1,1,1,1,1);
	    case 5: ApplyAnimationEx(playerid,"POOL","POOL_Long_Start",4.1,1,1,1,1,1,1);
	    case 6: ApplyAnimationEx(playerid,"POOL","POOL_Long_Start_O",4.1,1,1,1,1,1,1);
	    case 7: ApplyAnimationEx(playerid,"POOL","POOL_Med_Shot",4.1,1,1,1,1,1,1);
	    case 8: ApplyAnimationEx(playerid,"POOL","POOL_Med_Shot_O",4.1,1,1,1,1,1,1);
	    case 9: ApplyAnimationEx(playerid,"POOL","POOL_Med_Start",4.1,1,1,1,1,1,1);
	    case 10: ApplyAnimationEx(playerid,"POOL","POOL_Med_Start_O",4.1,1,1,1,1,1,1);
	    case 11: ApplyAnimationEx(playerid,"POOL","POOL_Place_White",4.1,1,1,1,1,1,1);
	    case 12: ApplyAnimationEx(playerid,"POOL","POOL_Short_Shot",4.1,1,1,1,1,1,1);
	    case 13: ApplyAnimationEx(playerid,"POOL","POOL_Short_Shot_O",4.1,1,1,1,1,1,1);
	    case 14: ApplyAnimationEx(playerid,"POOL","POOL_Short_Start",4.1,1,1,1,1,1,1);
	    case 15: ApplyAnimationEx(playerid,"POOL","POOL_Short_Start_O",4.1,1,1,1,1,1,1);
	    case 16: ApplyAnimationEx(playerid,"POOL","POOL_Walk",4.1,1,1,1,1,1,1);
	    case 17: ApplyAnimationEx(playerid,"POOL","POOL_Walk_Start",4.1,1,1,1,1,1,1);
	    case 18: ApplyAnimationEx(playerid,"POOL","POOL_XLong_Shot",4.1,1,1,1,1,1,1);
	    case 19: ApplyAnimationEx(playerid,"POOL","POOL_XLong_Shot_O",4.1,1,1,1,1,1,1);
	    case 20: ApplyAnimationEx(playerid,"POOL","POOL_XLong_Start",4.1,1,1,1,1,1,1);
	    case 21: ApplyAnimationEx(playerid,"POOL","POOL_XLong_Start_O",4.1,1,1,1,1,1,1);
	    default : GameTextForPlayer(playerid,"~r~~k~/pool ~w~[1-21]",2000,6);
	}
	return 1;
}

CMD:paul(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
    switch(animid)
	{
	    case 1: ApplyAnimationEx(playerid,"PAULNMAC","Piss_in",4.1,1,1,1,1,1,1);
	    case 2: ApplyAnimationEx(playerid,"PAULNMAC","Piss_out",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid,"PAULNMAC","wank_in",4.1,1,1,1,1,1,1);
		case 4: ApplyAnimationEx(playerid,"PAULNMAC","wank_out",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/paul ~w~[1-4]",2000,6);
	}
	return 1;
}

CMD:taxi(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"MISC","Hiker_Pose",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"MISC","Hiker_Pose_L",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/taxi ~w~[1-2]",2000,6);
	}
	return 1;
}

CMD:chase(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
    switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll_F",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/chase ~w~[1-3]",2000,6);
	}
	return 1;
}

CMD:kiss(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"KISSING","BD_GF_Wave",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"KISSING","gfwave2",4.1,1,1,1,1,1,1);
	    case 3: ApplyAnimationEx(playerid,"KISSING","Grlfrd_Kiss_01",4.1,1,1,1,1,1,1);
	    case 4: ApplyAnimationEx(playerid,"KISSING","Grlfrd_Kiss_02",4.1,1,1,1,1,1,1);
	    case 5: ApplyAnimationEx(playerid,"KISSING","Grlfrd_Kiss_03",4.1,1,1,1,1,1,1);
	    case 6: ApplyAnimationEx(playerid,"KISSING","Playa_Kiss_01",4.1,1,1,1,1,1,1);
	    case 7: ApplyAnimationEx(playerid,"KISSING","Playa_Kiss_02",4.1,1,1,1,1,1,1);
	    default : GameTextForPlayer(playerid,"~r~~k~/kiss ~w~[1-7]",2000,6);
	}
	return 1;
}

CMD:riot(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
	    case 1: ApplyAnimationEx(playerid,"RIOT","RIOT_ANGRY",4.1,1,1,1,1,1,1);
	    case 2: ApplyAnimationEx(playerid,"RIOT","RIOT_ANGRY_B",4.1,1,1,1,1,1,1);
	    case 3: ApplyAnimationEx(playerid,"RIOT","RIOT_challenge",4.1,1,1,1,1,1,1);
	    case 4: ApplyAnimationEx(playerid,"RIOT","RIOT_CHANT",4.1,1,1,1,1,1,1);
	    case 5: ApplyAnimationEx(playerid,"RIOT","RIOT_FUKU",4.1,1,1,1,1,1,1);
	    case 6: ApplyAnimationEx(playerid,"RIOT","RIOT_PUNCHES",4.1,1,1,1,1,1,1);
	    case 7: ApplyAnimationEx(playerid,"RIOT","RIOT_shout",4.1,1,1,1,1,1,1);
	    default : GameTextForPlayer(playerid,"~r~~k~/riot ~w~[1-7]",2000,6);
	}
	return 1;
}

CMD:lowrider(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
    switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"LOWRIDER","F_smklean_loop",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"LOWRIDER","prtial_gngtlkH",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/lowrider ~w~[1-2]",2000,6);
	}
	return 1;
}

CMD:knife(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"KNIFE","KILL_Knife_Ped_Die",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"KNIFE","knife_hit_3",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/knife ~w~[1-2]",2000,6);
	}
	return 1;
}

CMD:seat(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"PED","SEAT_down",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"INT_HOUSE","LOU_In",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid,"BEACH", "ParkSit_M_loop",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/seat ~w~[1-3]",2000,6);
	}
	return 1;
}

CMD:dance(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		default : GameTextForPlayer(playerid,"~r~~k~/dance ~w~[1-4]",2000,6);
	}
	return 1;
}

CMD:sex(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"SNM","SPANKING_IDLEW",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"SNM","SPANKING_IDLEP",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid,"SNM","SPANKINGW",4.1,1,1,1,1,1,1);
		case 4: ApplyAnimationEx(playerid,"SNM","SPANKINGP",4.1,1,1,1,1,1,1);
		case 5: ApplyAnimationEx(playerid,"SNM","SPANKEDW",4.1,1,1,1,1,1,1);
		case 6: ApplyAnimationEx(playerid,"SNM","SPANKEDP",4.1,1,1,1,1,1,1);
		case 7: ApplyAnimationEx(playerid,"SNM","SPANKING_ENDW",4.1,1,1,1,1,1,1);
		case 8: ApplyAnimationEx(playerid,"SNM","SPANKING_ENDP",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/sex ~w~[1-8]",2000,6);
	}
	return 1;
}

CMD:office(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
	    case 1: ApplyAnimationEx(playerid,"INT_OFFICE","FF_Dam_Fwd",4.1,1,1,1,1,1,1);
	    case 2: ApplyAnimationEx(playerid,"INT_OFFICE","OFF_Sit_2Idle_180",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid,"INT_OFFICE","OFF_Sit_Bored_Loop",4.1,1,1,1,1,1,1);
		case 4: ApplyAnimationEx(playerid,"INT_OFFICE","OFF_Sit_Crash",4.1,1,1,1,1,1,1);
		case 5: ApplyAnimationEx(playerid,"INT_OFFICE","OFF_Sit_Drink",4.1,1,1,1,1,1,1);
		case 6: ApplyAnimationEx(playerid,"INT_OFFICE","OFF_Sit_Idle_Loop",4.1,1,1,1,1,1,1);
	    case 7: ApplyAnimationEx(playerid,"INT_OFFICE","OFF_Sit_In",4.1,1,1,1,1,1,1);
	    case 8: ApplyAnimationEx(playerid,"INT_OFFICE","OFF_Sit_Read",4.1,1,1,1,1,1,1);
		case 9: ApplyAnimationEx(playerid,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,1,1,1,1,1,1);
		case 10: ApplyAnimationEx(playerid,"INT_OFFICE","OFF_Sit_Watch",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/office ~w~[1-10]",2000,6);
	}
	return 1;
}

CMD:gang(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
    switch(animid)
	{
	    case 1: ApplyAnimationEx(playerid,"GANGS","hndshkaa",4.1,1,1,1,1,1,1);
	    case 2: ApplyAnimationEx(playerid,"GANGS","hndshkba",4.1,1,1,1,1,1,1);
	    case 3: ApplyAnimationEx(playerid,"GANGS","hndshkda",4.1,1,1,1,1,1,1);
		case 4: ApplyAnimationEx(playerid,"GANGS","hndshkea",4.1,1,1,1,1,1,1);
		case 5: ApplyAnimationEx(playerid,"GANGS","hndshkfa",4.1,1,1,1,1,1,1);
	    case 6: ApplyAnimationEx(playerid,"GANGS","hndshkfa_swt",4.1,1,1,1,1,1,1);
	    case 7: ApplyAnimationEx(playerid,"GANGS","prtial_gngtlkA",4.1,1,1,1,1,1,1);
	    case 8: ApplyAnimationEx(playerid,"GANGS","prtial_gngtlkB",4.1,1,1,1,1,1,1);
	    case 9: ApplyAnimationEx(playerid,"GANGS","prtial_gngtlkCt",4.1,1,1,1,1,1,1);
	    case 10: ApplyAnimationEx(playerid,"GANGS","prtial_gngtlkD",4.1,1,1,1,1,1,1);
	    case 11: ApplyAnimationEx(playerid,"GANGS","prtial_gngtlkE",4.1,1,1,1,1,1,1);
	    case 12: ApplyAnimationEx(playerid,"GANGS","prtial_gngtlkF",4.1,1,1,1,1,1,1);
	    case 13: ApplyAnimationEx(playerid,"GANGS","prtial_gngtlkG",4.1,1,1,1,1,1,1);
	    case 14: ApplyAnimationEx(playerid,"GANGS","prtial_gngtlkH",4.1,1,1,1,1,1,1);
	    case 15: ApplyAnimationEx(playerid,"GANGS","prtial_hndshk_01",4.1,1,1,1,1,1,1);
	    default : GameTextForPlayer(playerid,"~r~~k~/gangs ~w~[1-15]",2000,6);
	}
	return 1;
}

CMD:eat(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"FOOD","FF_Dam_Bkw",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"FOOD","FF_Die_Bkw",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid,"FOOD","FF_Die_Fwd",4.1,1,1,1,1,1,1);
		case 4: ApplyAnimationEx(playerid,"FOOD","FF_Die_Left",4.1,1,1,1,1,1,1);
		case 5: ApplyAnimationEx(playerid,"FOOD","FF_Die_Right",4.1,1,1,1,1,1,1);
		case 6: ApplyAnimationEx(playerid,"FOOD","FF_Sit_Eat1",4.1,1,1,1,1,1,1);
		case 7: ApplyAnimationEx(playerid,"FOOD","FF_Sit_Look",4.1,1,1,1,1,1,1);
		case 8: ApplyAnimationEx(playerid,"FOOD", "EAT_Burger",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/eat ~w~[1-8]",2000,6);
	}
	return 1;
}

CMD:casino(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
	    case 1: ApplyAnimationEx(playerid,"CASINO","cards_lose",4.1,1,1,1,1,1,1);
	    case 2: ApplyAnimationEx(playerid,"CASINO","cards_pick_01",4.1,1,1,1,1,1,1);
	    case 3: ApplyAnimationEx(playerid,"CASINO","manwinb",4.1,1,1,1,1,1,1);
	    case 4: ApplyAnimationEx(playerid,"CASINO","Roulette_bet",4.1,1,1,1,1,1,1);
	    default : GameTextForPlayer(playerid,"~r~~k~/casino ~w~[1-4]",2000,6);
	}
	return 1;
}

CMD:bar(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"BAR","Barcustom_get",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"BAR","Barcustom_order",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid,"BAR","Barserve_bottle",4.1,1,1,1,1,1,1);
		case 4: ApplyAnimationEx(playerid,"BAR","Barserve_give",4.1,1,1,1,1,1,1);
		case 5: ApplyAnimationEx(playerid,"BAR","Barserve_glass",4.1,1,1,1,1,1,1);
		case 6: ApplyAnimationEx(playerid,"BAR","Barserve_in",4.1,1,1,1,1,1,1);
		case 7: ApplyAnimationEx(playerid,"BAR","Barserve_loop",4.1,1,1,1,1,1,1);
		case 8: ApplyAnimationEx(playerid,"BAR","Barserve_order",4.1,1,1,1,1,1,1);
		case 9: ApplyAnimationEx(playerid,"BAR","dnk_stndF_loop",4.1,1,1,1,1,1,1);
		case 10: ApplyAnimationEx(playerid,"BAR","BARman_idle",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/bar ~w~[1-10]",2000,6);
	}
	return 1;
}

CMD:fire(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
    switch(animid)
	{
		case 1: ApplyAnimationEx(playerid,"BD_FIRE","BD_GF_Wave",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"BD_FIRE","BD_Panic_01",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid,"BD_FIRE","BD_Panic_03",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/fire ~w~[1-3]",2000,6);
	}
	return 1;
}

CMD:beach(playerid, params[])
{
    new animid;
	sscanf(params,"i",animid);
    switch(animid)
    {
		case 1: ApplyAnimationEx(playerid,"BEACH","Lay_Bac_Loop",4.1,1,1,1,1,1,1);
		case 2: ApplyAnimationEx(playerid,"BEACH","ParkSit_W_loop",4.1,1,1,1,1,1,1);
		case 3: ApplyAnimationEx(playerid,"BEACH","SitnWait_loop_W",4.1,1,1,1,1,1,1);
		default : GameTextForPlayer(playerid,"~r~~k~/beach ~w~[1-3]",2000,6);
	}
	return 1;
}

CMD:handsup(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP);
CMD:pee(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
CMD:lookout(playerid) return ApplyAnimationEx(playerid,"SHOP", "ROB_Shifty",4.1,1,1,1,1,1,1);
CMD:crossarms(playerid) return ApplyAnimationEx(playerid,"COP_AMBIENT", "Coplook_loop",4.1,1,1,1,1,1,1);
CMD:lay(playerid) return ApplyAnimationEx(playerid,"BEACH", "bather",4.1,1,1,1,1,1,1);
CMD:hide(playerid) return ApplyAnimationEx(playerid,"ped", "cower",4.1,1,1,1,1,1,1);
CMD:vomit(playerid) return ApplyAnimationEx(playerid,"FOOD", "EAT_Vomit_P",4.1,1,1,1,1,1,1);
CMD:wave(playerid) return ApplyAnimationEx(playerid,"ON_LOOKERS", "wave_loop",4.1,1,1,1,1,1,1);
CMD:deal(playerid) return ApplyAnimationEx(playerid,"DEALER", "DEALER_DEAL",4.1,1,1,1,1,1,1);
CMD:chat(playerid) return ApplyAnimationEx(playerid,"PED","IDLE_CHAT",4.1,1,1,1,1,1,1);
CMD:fucku(playerid) return ApplyAnimationEx(playerid,"PED","fucku",4.1,1,1,1,1,1,1);
CMD:taichi(playerid) return ApplyAnimationEx(playerid,"PARK","Tai_Chi_Loop",4.1,1,1,1,1,1,1);
CMD:police(playerid) return ApplyAnimationEx(playerid,"POLICE","CopTraf_Stop",4.1,1,1,1,1,1,1);
CMD:lock(playerid) return ApplyAnimationEx(playerid,"ON_LOOKERS","shout_02",4.1,1,1,1,1,1,1);
CMD:misc(playerid) return ApplyAnimationEx(playerid,"MISC","Plyrlean_loop",4.1,1,1,1,1,1,1);
CMD:medic(playerid) return ApplyAnimationEx(playerid,"MEDIC","CPR",4.1,1,1,1,1,1,1);
CMD:slapass(playerid) return ApplyAnimationEx(playerid,"SWEET","sweet_ass_slap",4.1,1,1,1,1,1,1);
CMD:wuzi(playerid) return ApplyAnimationEx(playerid,"WUZI","CS_Dead_Guy",4.1,1,1,1,1,1,1);
CMD:off(playerid) return ApplyAnimationEx(playerid,"BASEBALL","Bat_Hit_3",4.1,1,1,1,1,1,1);
CMD:bomb(playerid) return ApplyAnimationEx(playerid,"BOMBER", "BOM_Plant",4.1,1,1,1,1,1,1);
CMD:robman(playerid) return ApplyAnimationEx(playerid,"SHOP", "ROB_Loop_Threat",4.1,1,1,1,1,1,1);
CMD:carry(playerid) return ApplyAnimationEx(playerid,"CARRY","crry_prtial",4.1,1,1,1,1,1,1);
CMD:press(playerid) return ApplyAnimationEx(playerid,"benchpress","gym_bp_celebrate",4.1,1,1,1,1,1,1);


CMD:animlist(playerid, params[])
{
	new pageid;
	sscanf(params,"i",pageid);
	switch(pageid)
	{
		case 1:
		{
			SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [2 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animanimairport");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animattractors [1 - 3]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animanimbar [1 - 12]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbeer");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbaseball [1 - 11]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbdfire [1 - 13]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbeach [1 - 5]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbenchpress [1 - 7]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbfinj [1 - 4]");
		}
		case 2:
		{
			SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [3 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbiked [1 - 19]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbikeh [1 - 18]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbikeleap [1 - 9]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbikes [1 - 20]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbikev [1 - 18]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbikedbz [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbmx [1 - 18]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbomber [1 - 6]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbox [1 - 10]");
		}
		case 3:
		{
			SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [4 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbsktball [1 - 41]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbuddy [1 - 5]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbus [1 - 9]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcamera [1 - 14]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcar [1 - 11]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcarry [1 - 7]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcarchat [1 - 21]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcasino [1 - 25]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcellin");
		}
		case 4:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [5 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcellout");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animsaw [1 - 11]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animchoppa [1 - 18]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animclothes [1 - 13]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcoach [1 - 6]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcolt [1 - 7]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcopa [1 - 12]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcopdvb [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcrack[1 - 10]");
		}
		case 5:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [6 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animcrib [1 - 5]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animdamjump [1 - 5]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animdance [1 - 17]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animdealer [1 - 7]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animdildo [1 - 9]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animdodge [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animdozer [1 - 10]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animdrivebys [1 - 8]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animduck");
		}
		case 6:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [7 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animenterveh");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animexitveh");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animfat [1 - 18]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animfightb [1 - 10]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animfightc [1 - 12]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animfightd [1 - 10]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animfighte [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animfinale [1 - 16]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animfinale2 [1 - 8]");
		}
		case 7:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [8 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animflame");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animflowers [1 - 3]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animfood [1 - 33]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animfw [1 - 9]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animgangs [1 - 33]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animghands [1 - 20]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animghettodb [1 - 7]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animgog");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animgraffity [1 - 2]");
		}
		case 8:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [9 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animgreya [1 - 3]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animgren [1 - 3]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animgym [1 - 24]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animhaircut [1 - 13]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animhandsup");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animheist [1 - 10]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animmedic");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animinthouse [1 - 10]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animintoffice [1 - 10]");
		}
		case 9:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [10 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animintshop [1 - 8]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animjetpack");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animjst [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animkart [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animkissing [1 - 15]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animlapdan1 [1 - 2]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animlapdan2 [1 - 2]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animlapdan3 [1 - 2]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animlowrider [1 - 39]");
		}
		case 10:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [11 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animmdchase [1 - 25]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animmddend [1 - 8]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animms [1 - 41]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animmtb [1 - 18]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animmusculcar [1 - 17]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animnevada [1 - 2]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animlookers [1 - 29]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animotb [1 - 11]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animparachute [1 - 22]");
		}
		case 11:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [12 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animpark [1 - 3]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animpaulnmac [1 - 12]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animpee");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animped [1 - 295]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animplayerdvbys [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animplayidles [1 - 5]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animpolice [1 - 10]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animpool [1 - 21]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animpoor [1 - 2]");
		}
		case 12:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [13 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animpython [1 - 5]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animquad [1 - 17]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animquadbz [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animrapping [1 - 8]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animrifle [1 - 5]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animriot [1 - 7]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animrobbank [1 - 5]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animrocket [1 - 5]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animrustler [1 - 5]");
		}
		case 13:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [14 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animryder [1 - 16]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animscratching [1 - 12]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animsit");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animshamal [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animshop [1 - 26]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animshotgun [1 - 3]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animsilenced [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animskate [1 - 3]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animsmoking [1 - 9]");
		}
		case 14:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [15 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animsniper");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animspraycan [1 - 2]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animsprunk");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animstrip [1 - 20]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animbath [1 - 18]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animswat [1 - 24]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animsweet [1 - 7]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animswim [1 - 7]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animsword [1 - 10]");
		}
		case 15:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [16 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animtank [1 - 6]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animtattoos [1 - 57]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animtec [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animtrain [1 - 4]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animtruck [1 - 17]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animuzi [1 - 5]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animvan [1 - 8]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animvending [1 - 6]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animvortex [1 - 4]");
		}
		case 16:
		{
		    SendClientMessageEx(playerid,COLOR_WHITE,"Анимации [17 / 17]:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animway [1 - 18]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animweap [1 - 17]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animwine");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animwuzi [1 - 12]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animsnm [1 - 8]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animblowjob [1 - 12]");
			SendClientMessageEx(playerid,COLOR_WHITE,"/animsex [1 - 20]");
		}
		default :
		{
			SendClientMessageEx(playerid,COLOR_WHITE,"Анимации:");
			SendClientMessageEx(playerid,COLOR_WHITE,"/bar /beach /bomb /casino /carry /chase /chat /crack /crossarms /dance");
			SendClientMessageEx(playerid,COLOR_WHITE,"/deal /eat /fire /fucku /gang /handsup /hide /kiss /knife /lay /lock");
			SendClientMessageEx(playerid,COLOR_WHITE,"/lowrider /medic /misc /office /off /paul /ped /pee /police /pool /press");
			SendClientMessageEx(playerid,COLOR_WHITE,"/rap /riot /robman /sex /sign /slapass /smoke /taichi /taxi /vomit /walk /wave /wuzi");
		}
	}

	return 1;
}


CMD:animattractor(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "Attractors", "Stepsit_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "Attractors", "Stepsit_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "Attractors", "Stepsit_out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animattractors [1 - 3]");
	}
	return 1;
}

CMD:animbar(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BAR", "Barcustom_get", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BAR", "Barcustom_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BAR", "Barcustom_order", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BAR", "Barserve_bottle", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BAR", "Barserve_give", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BAR", "Barserve_glass", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BAR", "Barserve_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BAR", "Barserve_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BAR", "Barserve_order", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BAR", "dnk_stndF_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "BAR", "dnk_stndM_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "BAR", "BARman_idle", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbar [1 - 12]");
	}
	return 1;
}


CMD:animbaseball(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BASEBALL", "Bat_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BASEBALL", "Bat_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BASEBALL", "Bat_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BASEBALL", "Bat_block", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BASEBALL", "Bat_Hit_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BASEBALL", "Bat_Hit_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BASEBALL", "Bat_Hit_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BASEBALL", "Bat_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BASEBALL", "Bat_M", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "BASEBALL", "BAT_PART", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbaseball [1 - 11]");
	}
	return 1;
}


CMD:animbdfire(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BD_FIRE", "BD_Fire1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BD_FIRE", "BD_Fire2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BD_FIRE", "BD_Fire3", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BD_FIRE", "BD_GF_Wave", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BD_FIRE", "BD_Panic_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BD_FIRE", "BD_Panic_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BD_FIRE", "BD_Panic_03", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BD_FIRE", "BD_Panic_04", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BD_FIRE", "BD_Panic_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BD_FIRE", "M_smklean_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "BD_FIRE", "M_smklean_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "BD_FIRE", "Playa_Kiss_03", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "BD_FIRE", "wash_up", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbdfire [1 - 13]");
	}
	return 1;
}


CMD:animbeach(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BEACH", "bather", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BEACH", "Lay_Bac_Loop", 4.1, 0, 1, 1, 1, 1, 1);
 		case 3: ApplyAnimationEx(playerid, "BEACH", "BD_Fire3", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BEACH", "ParkSit_W_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BEACH", "SitnWait_loop_W", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbeach [1 - 5]");
	}
	return 1;
}

CMD:animbenchpress(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "benchpress", "gym_bp_celebrate", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "benchpress", "gym_bp_down", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "benchpress", "gym_bp_getoff", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "benchpress", "gym_bp_geton", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "benchpress", "gym_bp_up_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "benchpress", "gym_bp_up_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "benchpress", "gym_bp_up_smooth", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbenchpress [1 - 7]");
	}
	return 1;
}

CMD:animbfinj(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BF_injection", "BF_getin_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BF_injection", "BF_getin_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BF_injection", "BF_getout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BF_injection", "BF_getout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbfinj [1 - 4]");
	}
	return 1;
}

CMD:animbiked(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BIKED", "BIKEd_Back", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BIKED", "BIKEd_drivebyFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BIKED", "BIKEd_drivebyLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BIKED", "BIKEd_drivebyRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BIKED", "BIKEd_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BIKED", "BIKEd_getoffBACK", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BIKED", "BIKEd_getoffLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BIKED", "BIKEd_getoffRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BIKED", "BIKEd_hit", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BIKED", "BIKEd_jumponL", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "BIKED", "BIKEd_jumponR", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "BIKED", "BIKEd_kick", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "BIKED", "BIKEd_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "BIKED", "BIKEd_passenger", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "BIKED", "BIKEd_pushes", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "BIKED", "BIKEd_Ride", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "BIKED", "BIKEd_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "BIKED", "BIKEd_shuffle", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "BIKED", "BIKEd_Still", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbiked [1 - 19]");
	}
	return 1;
}

CMD:animbikeh(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_Back", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_drivebyFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_drivebyLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_drivebyRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_getoffBACK", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_getoffLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_getoffRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_hit", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_jumponL", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_jumponR", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_kick", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_passenger", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_pushes", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_Ride", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "BIKEH", "BIKEh_Still", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbikeh [1 - 18]");
	}
	return 1;
}
CMD:animbikeleap(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BIKELEAP", "bk_blnce_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BIKELEAP", "bk_blnce_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BIKELEAP", "bk_jmp", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BIKELEAP", "bk_rdy_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BIKELEAP", "bk_rdy_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BIKELEAP", "struggle_cesar", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BIKELEAP", "struggle_driver", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BIKELEAP", "truck_driver", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BIKELEAP", "truck_getin", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbikeleap [1 - 9]");
	}
	return 1;
}

CMD:animbikes(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BIKES", "BIKEs_Back", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BIKES", "BIKEs_drivebyFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BIKES", "BIKEs_drivebyLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BIKES", "BIKEs_drivebyRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BIKES", "BIKEs_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BIKES", "BIKEs_getoffBACK", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BIKES", "BIKEs_getoffLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BIKES", "BIKEs_getoffRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BIKES", "BIKEs_hit", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BIKES", "BIKEs_jumponL", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "BIKES", "BIKEs_jumponR", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "BIKES", "BIKEs_kick", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "BIKES", "BIKEs_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "BIKES", "BIKEs_passenger", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "BIKES", "BIKEs_pushes", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "BIKES", "BIKEs_Ride", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "BIKES", "BIKEs_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "BIKES", "BIKEs_Snatch_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "BIKES", "BIKEs_Snatch_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "BIKES", "BIKEs_Still", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbikes [1 - 20]");
	}
	return 1;
}

CMD:animbikev(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_Back", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_drivebyFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_drivebyLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_drivebyRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_getoffBACK", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_getoffLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_getoffRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_hit", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_jumponL", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_jumponR", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_kick", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_passenger", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_pushes", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_Ride", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "BIKEV", "BIKEv_Still", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbikev [1 - 18]");
	}
	return 1;
}

CMD:animbikedbz(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BIKE_DBZ", "Pass_Driveby_BWD", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BIKE_DBZ", "Pass_Driveby_FWD", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BIKE_DBZ", "Pass_Driveby_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BIKE_DBZ", "Pass_Driveby_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbikedbz [1 - 4]");
	}
	return 1;
}

CMD:animbmx(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BMX", "BMX_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BMX", "BMX_bunnyhop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BMX", "BMX_drivebyFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BMX", "BMX_driveby_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BMX", "BMX_driveby_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BMX", "BMX_fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BMX", "BMX_getoffBACK", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BMX", "BMX_pushes", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BMX", "BMX_getoffLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BMX", "BMX_getoffRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "BMX", "BMX_jumponL", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "BMX", "BMX_jumponR", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "BMX", "BMX_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "BMX", "BMX_pedal", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "BMX", "BMX_Ride", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "BMX", "BMX_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "BMX", "BMX_sprint", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "BMX", "BMX_still", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbmx [1 - 18]");
	}
	return 1;
}

CMD:animbomber(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BOMBER", "BOM_Plant_2Idle", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BOMBER", "BOM_Plant_Crouch_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BOMBER", "BOM_Plant_Crouch_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BOMBER", "BOM_Plant_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BOMBER", "BOM_Plant_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbomber [1 - 6]");
	}
	return 1;
}

CMD:animbox(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BOX", "boxhipin", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BOX", "boxhipup", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BOX", "boxshdwn", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BOX", "boxshup", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BOX", "bxhipwlk", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BOX", "bxhwlki", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BOX", "bxshwlk", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BOX", "bxshwlki", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BOX", "bxwlko", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BOX", "catch_box", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbox [1 - 10]");
	}
	return 1;
}

CMD:animbsktball(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_def_jump_shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_def_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_def_stepL", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_def_stepR", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Dnk", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Dnk_Gli", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Dnk_Gli_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Dnk_Lnch", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Dnk_Lnch_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Dnk_Lnd", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Dnk_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_idle", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_idle2", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_idle2_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_idleloop", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_idleloop_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_idle_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Jump_Cancel", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Jump_Cancel_0", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Jump_End", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Jump_Shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Jump_Shot_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_Net_Dnk_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_pickup", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_pickup_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 26: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_react_miss", 4.1, 0, 1, 1, 1, 1, 1);
		case 27: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_react_score", 4.1, 0, 1, 1, 1, 1, 1);
		case 28: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_run", 4.1, 0, 1, 1, 1, 1, 1);
		case 29: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_run_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 30: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_SkidStop_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 31: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_SkidStop_L_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 32: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_SkidStop_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 33: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_SkidStop_R_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 34: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_walk", 4.1, 0, 1, 1, 1, 1, 1);
		case 35: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_WalkStop_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 36: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_WalkStop_L_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 37: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_WalkStop_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 38: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_WalkStop_R_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 39: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_walk_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 40: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_walk_start", 4.1, 0, 1, 1, 1, 1, 1);
		case 41: ApplyAnimationEx(playerid, "BSKTBALL", "BBALL_walk_start_O", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbsktball [1 - 41]");
	}
	return 1;
}

CMD:animbuddy(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BUDDY", "buddy_crouchfire", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BUDDY", "buddy_crouchreload", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BUDDY", "buddy_fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BUDDY", "buddy_fire_poor", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BUDDY", "buddy_reload", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbuddy [1 - 5]");
	}
	return 1;
}
CMD:animbus(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BUS", "BUS_close", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BUS", "BUS_getin_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BUS", "BUS_getin_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BUS", "BUS_getout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BUS", "BUS_getout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BUS", "BUS_jacked_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BUS", "BUS_open", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BUS", "BUS_open_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BUS", "BUS_pullout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbus [1 - 9]");
	}
	return 1;
}
CMD:animcamera(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CAMERA", "camcrch_cmon", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "CAMERA", "camcrch_idleloop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "CAMERA", "camcrch_stay", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "CAMERA", "camcrch_to_camstnd", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "CAMERA", "camstnd_cmon", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "CAMERA", "camstnd_idleloop", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "CAMERA", "camstnd_lkabt", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "CAMERA", "camstnd_to_camcrch", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "CAMERA", "piccrch_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "CAMERA", "piccrch_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "CAMERA", "piccrch_take", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "CAMERA", "picstnd_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "CAMERA", "picstnd_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "CAMERA", "picstnd_take", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcamera [1 - 14]");
	}
	return 1;
}
CMD:animcar(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CAR", "Fixn_Car_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "CAR", "Fixn_Car_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "CAR", "flag_drop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "CAR", "Sit_relaxed", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "CAR", "Tap_hand", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "CAR", "Tyd2car_bump", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "CAR", "Tyd2car_high", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "CAR", "Tyd2car_low", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "CAR", "Tyd2car_med", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "CAR", "Tyd2car_TurnL", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "CAR", "Tyd2car_TurnR", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcar [1 - 11]");
	}
	return 1;
}
CMD:animcarry(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "CARRY", "liftup", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "CARRY", "liftup05", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "CARRY", "liftup105", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "CARRY", "putdwn", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "CARRY", "putdwn05", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "CARRY", "putdwn105", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcarry [1 - 7]");
	}
	return 1;
}
CMD:animcarchat(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CAR_CHAT", "carfone_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "CAR_CHAT", "carfone_loopA", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "CAR_CHAT", "carfone_loopA_to_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "CAR_CHAT", "carfone_loopB", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "CAR_CHAT", "carfone_loopB_to_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "CAR_CHAT", "carfone_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc1_BL", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc1_BR", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc1_FL", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc1_FR", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc2_FL", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc3_BR", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc3_FL", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc3_FR", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc4_BL", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc4_BR", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc4_FL", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "CAR_CHAT", "CAR_Sc4_FR", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "CAR_CHAT", "car_talkm_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "CAR_CHAT", "car_talkm_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "CAR_CHAT", "car_talkm_out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcarchat [1 - 21]");
	}
	return 1;
}
CMD:animcasino(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CASINO", "cards_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "CASINO", "cards_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "CASINO", "cards_lose", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "CASINO", "cards_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "CASINO", "cards_pick_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "CASINO", "cards_pick_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "CASINO", "cards_raise", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "CASINO", "cards_win", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "CASINO", "dealone", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "CASINO", "manwinb", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "CASINO", "manwind", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "CASINO", "Roulette_bet", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "CASINO", "Roulette_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "CASINO", "Roulette_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "CASINO", "Roulette_lose", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "CASINO", "Roulette_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "CASINO", "Roulette_win", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "CASINO", "Slot_bet_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "CASINO", "Slot_bet_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "CASINO", "Slot_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "CASINO", "Slot_lose_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "CASINO", "Slot_Plyr", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "CASINO", "Slot_wait", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "CASINO", "Slot_win_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "CASINO", "wof", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcasino [1 - 25]");
	}
	return 1;
}
CMD:animchainsaw(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CHAINSAW", "CSAW_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "CHAINSAW", "CSAW_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "CHAINSAW", "CSAW_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "CHAINSAW", "CSAW_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "CHAINSAW", "CSAW_Hit_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "CHAINSAW", "CSAW_Hit_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "CHAINSAW", "CSAW_Hit_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "CHAINSAW", "csaw_part", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "CHAINSAW", "IDLE_csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "CHAINSAW", "WEAPON_csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "CHAINSAW", "WEAPON_csawlo", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animsaw [1 - 11]");
	}
	return 1;
}
CMD:animchoppa(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_bunnyhop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_drivebyFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_driveby_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_driveby_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_getoffBACK", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_getoffLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_getoffRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_jumponL", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_jumponR", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_pedal", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_Pushes", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_ride", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_sprint", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "CHOPPA", "CHOPPA_Still", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animchoppa [1 - 18]");
	}
	return 1;
}
CMD:animclothes(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Buy", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "CLOTHES", "CLO_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Pose_Hat", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Pose_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Pose_In_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Pose_Legs", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Pose_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Pose_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Pose_Out_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Pose_Shoes", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Pose_Torso", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "CLOTHES", "CLO_Pose_Watch", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animclothes [1 - 13]");
	}
	return 1;
}
CMD:animcoach(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "COACH", "COACH_inL", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "COACH", "COACH_inR", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "COACH", "COACH_opnL", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "COACH", "COACH_opnR", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "COACH", "COACH_outL", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "COACH", "COACH_outR", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcoach [1 - 6]");
	}
	return 1;
}
CMD:animcolt(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "COLT45", "2guns_crouchfire", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "COLT45", "colt45_crouchfire", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "COLT45", "colt45_crouchreload", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "COLT45", "colt45_fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "COLT45", "colt45_fire_2hands", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "COLT45", "colt45_reload", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "COLT45", "sawnoff_reload", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcolt [1 - 7]");
	}
	return 1;
}
CMD:animcopambient(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "COP_AMBIENT", "Copbrowse_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "COP_AMBIENT", "Copbrowse_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "COP_AMBIENT", "Copbrowse_nod", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "COP_AMBIENT", "Copbrowse_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "COP_AMBIENT", "Copbrowse_shake", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "COP_AMBIENT", "Coplook_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "COP_AMBIENT", "Coplook_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "COP_AMBIENT", "Coplook_nod", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "COP_AMBIENT", "Coplook_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "COP_AMBIENT", "Coplook_shake", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "COP_AMBIENT", "Coplook_think", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "COP_AMBIENT", "Coplook_watch", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcopa [1 - 12]");
	}
	return 1;
}
CMD:animcopdvbyz(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "COP_DVBYZ", "COP_Dvby_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "COP_DVBYZ", "COP_Dvby_FT", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "COP_DVBYZ", "COP_Dvby_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "COP_DVBYZ", "COP_Dvby_R", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcopdvb [1 - 4]");
	}
	return 1;
}
CMD:animcrack(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CRACK", "Bbalbat_Idle_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "CRACK", "Bbalbat_Idle_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "CRACK", "crckdeth1", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "CRACK", "crckdeth3", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "CRACK", "crckdeth4", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "CRACK", "crckidle1", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "CRACK", "crckidle2", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "CRACK", "crckidle3", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "CRACK", "crckidle4", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcrack[1 - 10]");
	}
	return 1;
}
CMD:animcrib(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "CRIB", "CRIB_Console_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "CRIB", "CRIB_Use_Switch", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "CRIB", "PED_Console_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "CRIB", "PED_Console_Loose", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "CRIB", "PED_Console_Win", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animcrib [1 - 5]");
	}
	return 1;
}
CMD:animdamjump(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "DAM_JUMP", "DAM_Dive_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "DAM_JUMP", "DAM_Land", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "DAM_JUMP", "DAM_Launch", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "DAM_JUMP", "Jump_Roll", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "DAM_JUMP", "SF_JumpWall", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animdamjump [1 - 5]");
	}
	return 1;
}
CMD:animdancing(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "DANCING", "bd_clap", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "DANCING", "bd_clap1", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "DANCING", "dance_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "DANCING", "DAN_Down_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "DANCING", "DAN_Left_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "DANCING", "DAN_Loop_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "DANCING", "DAN_Right_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "DANCING", "DAN_Up_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "DANCING", "dnce_M_a", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "DANCING", "dnce_M_b", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "DANCING", "dnce_M_c", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "DANCING", "dnce_M_d", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "DANCING", "dnce_M_e", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
		case 15: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
		case 16: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
		case 17: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animdance [1 - 17]");
	}
	return 1;
}
CMD:animdealer(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "DEALER", "DEALER_DEAL", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "DEALER", "DEALER_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "DEALER", "DEALER_IDLE_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "DEALER", "DEALER_IDLE_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "DEALER", "DEALER_IDLE_03", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "DEALER", "DRUGS_BUY", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "DEALER", "shop_pay", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animdealer [1 - 7]");
	}
	return 1;
}
CMD:animdildo(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "DILDO", "DILDO_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "DILDO", "DILDO_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "DILDO", "DILDO_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "DILDO", "DILDO_block", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "DILDO", "DILDO_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "DILDO", "DILDO_Hit_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "DILDO", "DILDO_Hit_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "DILDO", "DILDO_Hit_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "DILDO", "DILDO_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animdildo [1 - 9]");
	}
	return 1;
}
CMD:animdodje(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "DODGE", "Cover_Dive_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "DODGE", "Cover_Dive_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "DODGE", "Crushed", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "DODGE", "Crush_Jump", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animdodge [1 - 4]");
	}
	return 1;
}
CMD:animdozer(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "DOZER", "DOZER_Align_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "DOZER", "DOZER_Align_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "DOZER", "DOZER_getin_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "DOZER", "DOZER_getin_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "DOZER", "DOZER_getout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "DOZER", "DOZER_getout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "DOZER", "DOZER_Jacked_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "DOZER", "DOZER_Jacked_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "DOZER", "DOZER_pullout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "DOZER", "DOZER_pullout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animdozer [1 - 10]");
	}
	return 1;
}
CMD:animdrivebys(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "DRIVEBYS", "Gang_DrivebyLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "DRIVEBYS", "Gang_DrivebyLHS_Bwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "DRIVEBYS", "Gang_DrivebyLHS_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "DRIVEBYS", "Gang_DrivebyRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "DRIVEBYS", "Gang_DrivebyRHS_Bwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "DRIVEBYS", "Gang_DrivebyRHS_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "DRIVEBYS", "Gang_DrivebyTop_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "DRIVEBYS", "Gang_DrivebyTop_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animdrivebys [1 - 8]");
	}
	return 1;
}
CMD:animfat(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "FAT", "FatIdle", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "FAT", "FatIdle_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "FAT", "FatIdle_Csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "FAT", "FatIdle_Rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "FAT", "FatRun", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "FAT", "FatRun_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "FAT", "FatRun_Csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "FAT", "FatRun_Rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "FAT", "FatSprint", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "FAT", "FatWalk", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "FAT", "FatWalkstart", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "FAT", "FatWalkstart_Csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "FAT", "FatWalkSt_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "FAT", "FatWalkSt_Rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "FAT", "FatWalk_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "FAT", "FatWalk_Csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "FAT", "FatWalk_Rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "FAT", "IDLE_tired", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animfat [1 - 18]");
	}
	return 1;
}
CMD:animfightb(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "FIGHT_B", "FightB_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "FIGHT_B", "FightB_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "FIGHT_B", "FightB_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "FIGHT_B", "FightB_block", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "FIGHT_B", "FightB_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "FIGHT_B", "FightB_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "FIGHT_B", "FightB_M", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "FIGHT_B", "HitB_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "FIGHT_B", "HitB_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "FIGHT_B", "HitB_3", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animfightb [1 - 10]");
	}
	return 1;
}
CMD:animfightc(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "FIGHT_C", "FightC_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "FIGHT_C", "FightC_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "FIGHT_C", "FightC_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "FIGHT_C", "FightC_block", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "FIGHT_C", "FightC_blocking", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "FIGHT_C", "FightC_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "FIGHT_C", "FightC_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "FIGHT_C", "FightC_M", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "FIGHT_C", "FightC_Spar", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "FIGHT_C", "HitC_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "FIGHT_C", "HitC_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "FIGHT_C", "HitC_3", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animfightc [1 - 12]");
	}
	return 1;
}
CMD:animfightd(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "FIGHT_D", "FightD_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "FIGHT_D", "FightD_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "FIGHT_D", "FightD_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "FIGHT_D", "FightD_block", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "FIGHT_D", "FightD_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "FIGHT_D", "FightD_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "FIGHT_D", "FightD_M", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "FIGHT_D", "HitD_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "FIGHT_D", "HitD_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "FIGHT_D", "HitD_3", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animfightd [1 - 10]");
	}
	return 1;
}
CMD:animfighte(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "FIGHT_E", "FightKick", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "FIGHT_E", "FightKick_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "FIGHT_E", "Hit_fightkick", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "FIGHT_E", "Hit_fightkick_B", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animfighte [1 - 4]");
	}
	return 1;
}
CMD:animfinale(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "FINALE", "FIN_Climb_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "FINALE", "FIN_Cop1_ClimbOut2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "FINALE", "FIN_Cop1_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "FINALE", "FIN_Cop1_Stomp", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "FINALE", "FIN_Hang_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "FINALE", "FIN_Hang_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "FINALE", "FIN_Hang_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "FINALE", "FIN_Hang_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "FINALE", "FIN_Jump_On", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "FINALE", "FIN_Land_Car", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "FINALE", "FIN_Land_Die", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "FINALE", "FIN_LegsUp", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "FINALE", "FIN_LegsUp_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "FINALE", "FIN_LegsUp_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "FINALE", "FIN_LegsUp_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "FINALE", "FIN_Let_Go", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animfinale [1 - 16]");
	}
	return 1;
}
CMD:animfinale2(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "FINALE2", "FIN_Cop1_ClimbOut", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "FINALE2", "FIN_Cop1_Fall", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "FINALE2", "FIN_Cop1_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "FINALE2", "FIN_Cop1_Shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "FINALE2", "FIN_Cop1_Swing", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "FINALE2", "FIN_Cop2_ClimbOut", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "FINALE2", "FIN_Switch_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "FINALE2", "FIN_Switch_S", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animfinale2 [1 - 8]");
	}
	return 1;
}
CMD:animflowers(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "Flowers", "Flower_attack", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "Flowers", "Flower_attack_M", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "Flowers", "Flower_Hit", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animflowers [1 - 3]");
	}
	return 1;
}
CMD:animfood(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "FOOD", "EAT_Chicken", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "FOOD", "EAT_Vomit_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "FOOD", "EAT_Vomit_SK", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "FOOD", "FF_Dam_Bkw", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "FOOD", "FF_Dam_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "FOOD", "FF_Dam_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "FOOD", "FF_Dam_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "FOOD", "FF_Die_Bkw", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "FOOD", "FF_Die_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "FOOD", "FF_Die_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "FOOD", "FF_Die_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_Eat1", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_Eat2", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_Eat3", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_In_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_In_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_Look", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_Out_180", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_Out_L_180", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "FOOD", "FF_Sit_Out_R_180", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "FOOD", "SHP_Thank", 4.1, 0, 1, 1, 1, 1, 1);
		case 26: ApplyAnimationEx(playerid, "FOOD", "SHP_Tray_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 27: ApplyAnimationEx(playerid, "FOOD", "SHP_Tray_Lift", 4.1, 0, 1, 1, 1, 1, 1);
		case 28: ApplyAnimationEx(playerid, "FOOD", "SHP_Tray_Lift_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 29: ApplyAnimationEx(playerid, "FOOD", "SHP_Tray_Lift_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 30: ApplyAnimationEx(playerid, "FOOD", "SHP_Tray_Lift_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 31: ApplyAnimationEx(playerid, "FOOD", "SHP_Tray_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 32: ApplyAnimationEx(playerid, "FOOD", "SHP_Tray_Pose", 4.1, 0, 1, 1, 1, 1, 1);
		case 33: ApplyAnimationEx(playerid, "FOOD", "SHP_Tray_Return", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animfood [1 - 33]");
	}
	return 1;
}
CMD:animfreeweights(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "Freeweights", "gym_barbell", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "Freeweights", "gym_free_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "Freeweights", "gym_free_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "Freeweights", "gym_free_celebrate", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "Freeweights", "gym_free_down", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "Freeweights", "gym_free_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "Freeweights", "gym_free_pickup", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "Freeweights", "gym_free_putdown", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "Freeweights", "gym_free_up_smooth", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animfw [1 - 9]");
	}
	return 1;
}
CMD:animgangs(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "GANGS", "DEALER_DEAL", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "GANGS", "DEALER_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "GANGS", "drnkbr_prtl", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "GANGS", "drnkbr_prtl_F", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "GANGS", "DRUGS_BUY", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "GANGS", "hndshkaa", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "GANGS", "hndshkba", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "GANGS", "hndshkca", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "GANGS", "hndshkcb", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "GANGS", "hndshkda", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "GANGS", "hndshkea", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "GANGS", "hndshkfa", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "GANGS", "hndshkfa_swt", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "GANGS", "Invite_No", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "GANGS", "Invite_Yes", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "GANGS", "leanIDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "GANGS", "leanIN", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "GANGS", "leanOUT", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "GANGS", "prtial_gngtlkA", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "GANGS", "prtial_gngtlkB", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "GANGS", "prtial_gngtlkCt", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "GANGS", "prtial_gngtlkD", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "GANGS", "prtial_gngtlkE", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "GANGS", "prtial_gngtlkF", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "GANGS", "prtial_gngtlkG", 4.1, 0, 1, 1, 1, 1, 1);
		case 26: ApplyAnimationEx(playerid, "GANGS", "prtial_gngtlkH", 4.1, 0, 1, 1, 1, 1, 1);
		case 27: ApplyAnimationEx(playerid, "GANGS", "prtial_hndshk_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 28: ApplyAnimationEx(playerid, "GANGS", "prtial_hndshk_biz_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 29: ApplyAnimationEx(playerid, "GANGS", "shake_cara", 4.1, 0, 1, 1, 1, 1, 1);
		case 30: ApplyAnimationEx(playerid, "GANGS", "shake_carK", 4.1, 0, 1, 1, 1, 1, 1);
		case 31: ApplyAnimationEx(playerid, "GANGS", "shake_carSH", 4.1, 0, 1, 1, 1, 1, 1);
		case 32: ApplyAnimationEx(playerid, "GANGS", "smkcig_prtl", 4.1, 0, 1, 1, 1, 1, 1);
		case 33: ApplyAnimationEx(playerid, "GANGS", "smkcig_prtl_F", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animgangs [1 - 33]");
	}
	return 1;
}
CMD:animghands(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "GHANDS", "gsign1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "GHANDS", "gsign1LH", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "GHANDS", "gsign2", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "GHANDS", "gsign2LH", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "GHANDS", "gsign3", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "GHANDS", "gsign3LH", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "GHANDS", "gsign4", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "GHANDS", "gsign4LH", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "GHANDS", "gsign5", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "GHANDS", "gsign5LH", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "GHANDS", "LHGsign1", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "GHANDS", "LHGsign2", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "GHANDS", "LHGsign3", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "GHANDS", "LHGsign4", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "GHANDS", "LHGsign5", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "GHANDS", "RHGsign1", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "GHANDS", "RHGsign2", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "GHANDS", "RHGsign3", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "GHANDS", "RHGsign4", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "GHANDS", "RHGsign5", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animghands [1 - 20]");
	}
	return 1;
}
CMD:animghettodb(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "GHETTO_DB", "GDB_Car2_PLY", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "GHETTO_DB", "GDB_Car2_SMO", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "GHETTO_DB", "GDB_Car2_SWE", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "GHETTO_DB", "GDB_Car_PLY", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "GHETTO_DB", "GDB_Car_RYD", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "GHETTO_DB", "GDB_Car_SMO", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "GHETTO_DB", "GDB_Car_SWE", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animghettodb [1 - 7]");
	}
	return 1;
}
CMD:animgraffity(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "GRAFFITI", "graffiti_Chkout", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "GRAFFITI", "spraycan_fire", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animgraffity [1 - 2]");
	}
	return 1;
}
CMD:animgraveyard(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "GRAVEYARD", "mrnF_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "GRAVEYARD", "mrnM_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "GRAVEYARD", "prst_loopa", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animgreya [1 - 3]");
	}
	return 1;
}
CMD:animgren(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "GRENADE", "WEAPON_start_throw", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "GRENADE", "WEAPON_throw", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "GRENADE", "WEAPON_throwu", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animgren [1 - 3]");
	}
	return 1;
}
CMD:animgym(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "GYMNASIUM", "GYMshadowbox", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_bike_celebrate", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_bike_fast", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_bike_faster", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_bike_getoff", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_bike_geton", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_bike_pedal", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_bike_slow", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_bike_still", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_jog_falloff", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_shadowbox", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_tread_celebrate", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_tread_falloff", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_tread_getoff", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_tread_geton", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_tread_jog", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_tread_sprint", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_tread_tired", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_tread_walk", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "GYMNASIUM", "gym_walk_falloff", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "GYMNASIUM", "Pedals_fast", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "GYMNASIUM", "Pedals_med", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "GYMNASIUM", "Pedals_slow", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "GYMNASIUM", "Pedals_still", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animgym [1 - 24]");
	}
	return 1;
}
CMD:animhaircuts(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Beard_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Buy", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Cut", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Cut_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Cut_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Hair_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Hair_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Sit_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Sit_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "HAIRCUTS", "BRB_Sit_Out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animhaircut [1 - 13]");
	}
	return 1;
}
CMD:animheists(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "HEIST9", "CAS_G2_GasKO", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "HEIST9", "swt_wllpk_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "HEIST9", "swt_wllpk_L_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "HEIST9", "swt_wllpk_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "HEIST9", "swt_wllpk_R_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "HEIST9", "swt_wllshoot_in_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "HEIST9", "swt_wllshoot_in_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "HEIST9", "swt_wllshoot_out_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "HEIST9", "swt_wllshoot_out_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "HEIST9", "Use_SwipeCard", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animheist [1 - 10]");
	}
	return 1;
}
CMD:animinthouse(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "INT_HOUSE", "BED_In_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "INT_HOUSE", "BED_In_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "INT_HOUSE", "BED_Loop_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "INT_HOUSE", "BED_Loop_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "INT_HOUSE", "BED_Out_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "INT_HOUSE", "BED_Out_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "INT_HOUSE", "LOU_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "INT_HOUSE", "LOU_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "INT_HOUSE", "LOU_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "INT_HOUSE", "wash_up", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animinthouse [1 - 10]");
	}
	return 1;
}
CMD:animintoffice(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "INT_OFFICE", "FF_Dam_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "INT_OFFICE", "OFF_Sit_2Idle_180", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "INT_OFFICE", "OFF_Sit_Bored_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "INT_OFFICE", "OFF_Sit_Crash", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "INT_OFFICE", "OFF_Sit_Drink", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "INT_OFFICE", "OFF_Sit_Idle_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "INT_OFFICE", "OFF_Sit_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "INT_OFFICE", "OFF_Sit_Read", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "INT_OFFICE", "OFF_Sit_Type_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "INT_OFFICE", "OFF_Sit_Watch", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animintoffice [1 - 10]");
	}
	return 1;
}
CMD:animintshop(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "INT_SHOP", "shop_cashier", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "INT_SHOP", "shop_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "INT_SHOP", "shop_lookA", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "INT_SHOP", "shop_lookB", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "INT_SHOP", "shop_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "INT_SHOP", "shop_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "INT_SHOP", "shop_shelf", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animintshop [1 - 8]");
	}
	return 1;
}
CMD:animjst(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "JST_BUISNESS", "girl_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "JST_BUISNESS", "girl_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "JST_BUISNESS", "player_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "JST_BUISNESS", "smoke_01", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animjst [1 - 4]");
	}
	return 1;
}
CMD:animkart(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "KART", "KART_getin_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "KART", "KART_getin_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "KART", "KART_getout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "KART", "KART_getout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animkart [1 - 4]");
	}
	return 1;
}
CMD:animkissing(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "KISSING", "BD_GF_Wave", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "KISSING", "gfwave2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "KISSING", "GF_CarArgue_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "KISSING", "GF_CarArgue_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "KISSING", "GF_CarSpot", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "KISSING", "GF_StreetArgue_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "KISSING", "GF_StreetArgue_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "KISSING", "gift_get", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "KISSING", "gift_give", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "KISSING", "Grlfrd_Kiss_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "KISSING", "Grlfrd_Kiss_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "KISSING", "Grlfrd_Kiss_03", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "KISSING", "Playa_Kiss_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "KISSING", "Playa_Kiss_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "KISSING", "Playa_Kiss_03", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animkissing [1 - 15]");
	}
	return 1;
}
CMD:animknife(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "KNIFE", "KILL_Knife_Ped_Damage", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "KNIFE", "KILL_Knife_Ped_Die", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "KNIFE", "KILL_Knife_Player", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "KNIFE", "KILL_Partial", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "KNIFE", "knife_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "KNIFE", "knife_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "KNIFE", "knife_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "KNIFE", "knife_4", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "KNIFE", "knife_block", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "KNIFE", "Knife_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "KNIFE", "knife_hit_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "KNIFE", "knife_hit_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "KNIFE", "knife_hit_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "KNIFE", "knife_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "KNIFE", "knife_part", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "KNIFE", "WEAPON_knifeidle", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animknife [1 - 16]");
	}
	return 1;
}
CMD:animlapdan1(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "LAPDAN1", "LAPDAN_D", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "LAPDAN1", "LAPDAN_P", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animlapdan1 [1 - 2]");
	}
	return 1;
}
CMD:animlapdan2(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "LAPDAN2", "LAPDAN_D", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "LAPDAN2", "LAPDAN_P", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animlapdan2 [1 - 2]");
	}
	return 1;
}
CMD:animlapdan3(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "LAPDAN3", "LAPDAN_D", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "LAPDAN3", "LAPDAN_P", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animlapdan3 [1 - 2]");
	}
	return 1;
}
CMD:animlowrider(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "LOWRIDER", "F_smklean_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_bdbnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_hair", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_hurry", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_idleloop", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_idle_to_l0", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l0_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l0_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l0_to_l1", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l12_to_l0", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l1_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l1_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l1_to_l2", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l2_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l2_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l2_to_l3", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l345_to_l1", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l3_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l3_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l3_to_l4", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l4_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l4_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l4_to_l5", 4.1, 0, 1, 1, 1, 1, 1);
                case 24: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l5_bnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "LOWRIDER", "lrgirl_l5_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 26: ApplyAnimationEx(playerid, "LOWRIDER", "M_smklean_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 27: ApplyAnimationEx(playerid, "LOWRIDER", "M_smkstnd_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 28: ApplyAnimationEx(playerid, "LOWRIDER", "prtial_gngtlkB", 4.1, 0, 1, 1, 1, 1, 1);
		case 29: ApplyAnimationEx(playerid, "LOWRIDER", "prtial_gngtlkC", 4.1, 0, 1, 1, 1, 1, 1);
		case 30: ApplyAnimationEx(playerid, "LOWRIDER", "prtial_gngtlkD", 4.1, 0, 1, 1, 1, 1, 1);
		case 31: ApplyAnimationEx(playerid, "LOWRIDER", "prtial_gngtlkE", 4.1, 0, 1, 1, 1, 1, 1);
		case 32: ApplyAnimationEx(playerid, "LOWRIDER", "prtial_gngtlkF", 4.1, 0, 1, 1, 1, 1, 1);
		case 33: ApplyAnimationEx(playerid, "LOWRIDER", "prtial_gngtlkG", 4.1, 0, 1, 1, 1, 1, 1);
		case 34: ApplyAnimationEx(playerid, "LOWRIDER", "prtial_gngtlkH", 4.1, 0, 1, 1, 1, 1, 1);
		case 35: ApplyAnimationEx(playerid, "LOWRIDER", "RAP_A_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 36: ApplyAnimationEx(playerid, "LOWRIDER", "RAP_B_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 37: ApplyAnimationEx(playerid, "LOWRIDER", "RAP_C_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 38: ApplyAnimationEx(playerid, "LOWRIDER", "Sit_relaxed", 4.1, 0, 1, 1, 1, 1, 1);
		case 39: ApplyAnimationEx(playerid, "LOWRIDER", "Tap_hand", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animlowrider [1 - 39]");
	}
	return 1;
}
CMD:animchase(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "MD_CHASE", "Carhit_Hangon", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "MD_CHASE", "Carhit_Tumble", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "MD_CHASE", "donutdrop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "MD_CHASE", "Fen_Choppa_L1", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "MD_CHASE", "Fen_Choppa_L2", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "MD_CHASE", "Fen_Choppa_L3", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "MD_CHASE", "Fen_Choppa_R1", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "MD_CHASE", "Fen_Choppa_R2", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "MD_CHASE", "Fen_Choppa_R3", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "MD_CHASE", "Hangon_Stun_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "MD_CHASE", "Hangon_Stun_Turn", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_2_HANG", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Jmp_BL", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Jmp_F", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Lnd_BL", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Lnd_Die_BL", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Lnd_Die_F", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Lnd_F", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Lnd_Roll", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Lnd_Roll_F", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Punch", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Punch_F", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "MD_CHASE", "MD_BIKE_Shot_F", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "MD_CHASE", "MD_HANG_Lnd_Roll", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "MD_CHASE", "MD_HANG_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animmdchase [1 - 25]");
	}
	return 1;
}
CMD:animmdend(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "MD_END", "END_SC1_PLY", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "MD_END", "END_SC1_RYD", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "MD_END", "END_SC1_SMO", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "MD_END", "END_SC1_SWE", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "MD_END", "END_SC2_PLY", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "MD_END", "END_SC2_RYD", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "MD_END", "END_SC2_SMO", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "MD_END", "END_SC2_SWE", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animmddend [1 - 8]");
	}
	return 1;
}
CMD:animms(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "MISC", "bitchslap", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "MISC", "BMX_celebrate", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "MISC", "BMX_comeon", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "MISC", "bmx_idleloop_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "MISC", "bmx_idleloop_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "MISC", "bmx_talkleft_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "MISC", "bmx_talkleft_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "MISC", "bmx_talkleft_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "MISC", "bmx_talkright_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "MISC", "bmx_talkright_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "MISC", "bmx_talkright_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "MISC", "bng_wndw", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "MISC", "bng_wndw_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "MISC", "Case_pickup", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "MISC", "door_jet", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "MISC", "GRAB_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "MISC", "GRAB_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "MISC", "Hiker_Pose", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "MISC", "Hiker_Pose_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "MISC", "Idle_Chat_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "MISC", "KAT_Throw_K", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "MISC", "KAT_Throw_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "MISC", "KAT_Throw_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "MISC", "PASS_Rifle_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "MISC", "PASS_Rifle_Ped", 4.1, 0, 1, 1, 1, 1, 1);
		case 26: ApplyAnimationEx(playerid, "MISC", "PASS_Rifle_Ply", 4.1, 0, 1, 1, 1, 1, 1);
		case 27: ApplyAnimationEx(playerid, "MISC", "pickup_box", 4.1, 0, 1, 1, 1, 1, 1);
		case 28: ApplyAnimationEx(playerid, "MISC", "Plane_door", 4.1, 0, 1, 1, 1, 1, 1);
		case 29: ApplyAnimationEx(playerid, "MISC", "Plane_exit", 4.1, 0, 1, 1, 1, 1, 1);
		case 30: ApplyAnimationEx(playerid, "MISC", "Plane_hijack", 4.1, 0, 1, 1, 1, 1, 1);
		case 31: ApplyAnimationEx(playerid, "MISC", "Plunger_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 32: ApplyAnimationEx(playerid, "MISC", "Plyrlean_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 33: ApplyAnimationEx(playerid, "MISC", "plyr_shkhead", 4.1, 0, 1, 1, 1, 1, 1);
		case 34: ApplyAnimationEx(playerid, "MISC", "Run_Dive", 4.1, 0, 1, 1, 1, 1, 1);
		case 35: ApplyAnimationEx(playerid, "MISC", "Scratchballs_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 36: ApplyAnimationEx(playerid, "MISC", "SEAT_LR", 4.1, 0, 1, 1, 1, 1, 1);
		case 37: ApplyAnimationEx(playerid, "MISC", "Seat_talk_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 38: ApplyAnimationEx(playerid, "MISC", "Seat_talk_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 39: ApplyAnimationEx(playerid, "MISC", "SEAT_watch", 4.1, 0, 1, 1, 1, 1, 1);
		case 40: ApplyAnimationEx(playerid, "MISC", "smalplane_door", 4.1, 0, 1, 1, 1, 1, 1);
		case 41: ApplyAnimationEx(playerid, "MISC", "smlplane_door", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animms [1 - 41]");
	}
	return 1;
}
CMD:animmtb(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "MTB", "MTB_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "MTB", "MTB_bunnyhop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "MTB", "MTB_drivebyFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "MTB", "MTB_driveby_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "MTB", "MTB_driveby_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "MTB", "MTB_fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "MTB", "MTB_getoffBACK", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "MTB", "MTB_pushes", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "MTB", "MTB_getoffLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "MTB", "MTB_getoffRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "MTB", "MTB_jumponL", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "MTB", "MTB_jumponR", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "MTB", "MTB_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "MTB", "MTB_pedal", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "MTB", "MTB_Ride", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "MTB", "MTB_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "MTB", "MTB_sprint", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "MTB", "MTB_still", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animmtb [1 - 18]");
	}
	return 1;
}
CMD:animmuscular(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "MUSCULAR", "MscleWalkst_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "MUSCULAR", "MscleWalkst_Csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "MUSCULAR", "Mscle_rckt_run", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "MUSCULAR", "Mscle_rckt_walkst", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "MUSCULAR", "Mscle_run_Csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "MUSCULAR", "MuscleIdle", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "MUSCULAR", "MuscleIdle_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "MUSCULAR", "MuscleIdle_Csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "MUSCULAR", "MuscleIdle_rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "MUSCULAR", "MuscleRun", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "MUSCULAR", "MuscleRun_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "MUSCULAR", "MuscleSprint", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "MUSCULAR", "MuscleWalk", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "MUSCULAR", "MuscleWalkstart", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "MUSCULAR", "MuscleWalk_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "MUSCULAR", "Musclewalk_Csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "MUSCULAR", "Musclewalk_rocket", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animmusculcar [1 - 17]");
	}
	return 1;
}
CMD:animnevada(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "NEVADA", "NEVADA_getin", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "NEVADA", "NEVADA_getout", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animnevada [1 - 2]");
	}
	return 1;
}
CMD:animonlookers(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "ON_LOOKERS", "lkaround_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "ON_LOOKERS", "lkaround_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "ON_LOOKERS", "lkaround_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "ON_LOOKERS", "lkup_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "ON_LOOKERS", "lkup_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "ON_LOOKERS", "lkup_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "ON_LOOKERS", "lkup_point", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "ON_LOOKERS", "panic_cower", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "ON_LOOKERS", "panic_hide", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "ON_LOOKERS", "panic_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "ON_LOOKERS", "panic_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "ON_LOOKERS", "panic_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "ON_LOOKERS", "panic_point", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "ON_LOOKERS", "panic_shout", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "ON_LOOKERS", "Pointup_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "ON_LOOKERS", "Pointup_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "ON_LOOKERS", "Pointup_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "ON_LOOKERS", "Pointup_shout", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "ON_LOOKERS", "point_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "ON_LOOKERS", "point_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "ON_LOOKERS", "point_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "ON_LOOKERS", "shout_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "ON_LOOKERS", "shout_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "ON_LOOKERS", "shout_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "ON_LOOKERS", "shout_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 26: ApplyAnimationEx(playerid, "ON_LOOKERS", "shout_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 27: ApplyAnimationEx(playerid, "ON_LOOKERS", "wave_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 28: ApplyAnimationEx(playerid, "ON_LOOKERS", "wave_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 29: ApplyAnimationEx(playerid, "ON_LOOKERS", "wave_out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animlookers [1 - 29]");
	}
	return 1;
}
CMD:animotb(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "OTB", "betslp_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "OTB", "betslp_lkabt", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "OTB", "betslp_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "OTB", "betslp_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "OTB", "betslp_tnk", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "OTB", "wtchrace_cmon", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "OTB", "wtchrace_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "OTB", "wtchrace_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "OTB", "wtchrace_lose", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "OTB", "wtchrace_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "OTB", "wtchrace_win", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animotb [1 - 11]");
	}
	return 1;
}
CMD:animparachute(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "PARACHUTE", "FALL_skyDive", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "PARACHUTE", "FALL_SkyDive_Accel", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "PARACHUTE", "FALL_skyDive_DIE", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "PARACHUTE", "FALL_SkyDive_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "PARACHUTE", "FALL_SkyDive_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_decel", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_decel_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_float", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_float_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_Land", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_Land_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_Land_Water", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_Land_Water_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_open", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_open_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_Rip_Land_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_Rip_Loop_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_Rip_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_steerL", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_steerL_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_steerR", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "PARACHUTE", "PARA_steerR_O", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animparachute [1 - 22]");
	}
	return 1;
}
CMD:animpark(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "PARK", "Tai_Chi_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "PARK", "Tai_Chi_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "PARK", "Tai_Chi_Out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animpark [1 - 3]");
	}
	return 1;
}
CMD:animpaulnmac(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "PAULNMAC", "Piss_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "PAULNMAC", "Piss_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "PAULNMAC", "Piss_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "PAULNMAC", "PnM_Argue1_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "PAULNMAC", "PnM_Argue1_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "PAULNMAC", "PnM_Argue2_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "PAULNMAC", "PnM_Argue2_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "PAULNMAC", "PnM_Loop_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "PAULNMAC", "PnM_Loop_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "PAULNMAC", "wank_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "PAULNMAC", "wank_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "PAULNMAC", "wank_out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animpaulnmac [1 - 12]");
	}
	return 1;
}
CMD:animped(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "PED", "abseil", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "PED", "ARRESTgun", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "PED", "ATM", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "PED", "BIKE_elbowL", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "PED", "BIKE_elbowR", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "PED", "BIKE_fallR", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "PED", "BIKE_fall_off", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "PED", "BIKE_pickupL", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "PED", "BIKE_pickupR", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "PED", "BIKE_pullupL", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "PED", "BIKE_pullupR", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "PED", "bomber", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "PED", "CAR_alignHI_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "PED", "CAR_alignHI_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "PED", "CAR_align_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "PED", "CAR_align_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "PED", "CAR_closedoorL_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "PED", "CAR_closedoorL_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "PED", "CAR_closedoor_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "PED", "CAR_closedoor_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "PED", "CAR_close_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "PED", "CAR_close_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "PED", "CAR_crawloutRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "PED", "CAR_dead_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "PED", "CAR_dead_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 26: ApplyAnimationEx(playerid, "PED", "CAR_doorlocked_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 27: ApplyAnimationEx(playerid, "PED", "CAR_doorlocked_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 28: ApplyAnimationEx(playerid, "PED", "CAR_fallout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 29: ApplyAnimationEx(playerid, "PED", "CAR_fallout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 30: ApplyAnimationEx(playerid, "PED", "CAR_getinL_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 31: ApplyAnimationEx(playerid, "PED", "CAR_getinL_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 32: ApplyAnimationEx(playerid, "PED", "CAR_getin_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 33: ApplyAnimationEx(playerid, "PED", "CAR_getin_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 34: ApplyAnimationEx(playerid, "PED", "CAR_getoutL_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 35: ApplyAnimationEx(playerid, "PED", "CAR_getoutL_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 36: ApplyAnimationEx(playerid, "PED", "CAR_getout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 37: ApplyAnimationEx(playerid, "PED", "CAR_getout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 38: ApplyAnimationEx(playerid, "PED", "car_hookertalk", 4.1, 0, 1, 1, 1, 1, 1);
		case 39: ApplyAnimationEx(playerid, "PED", "CAR_jackedLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 40: ApplyAnimationEx(playerid, "PED", "CAR_jackedRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 41: ApplyAnimationEx(playerid, "PED", "CAR_jumpin_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 42: ApplyAnimationEx(playerid, "PED", "CAR_LB", 4.1, 0, 1, 1, 1, 1, 1);
		case 43: ApplyAnimationEx(playerid, "PED", "CAR_LB_pro", 4.1, 0, 1, 1, 1, 1, 1);
		case 44: ApplyAnimationEx(playerid, "PED", "CAR_LB_weak", 4.1, 0, 1, 1, 1, 1, 1);
		case 45: ApplyAnimationEx(playerid, "PED", "CAR_LjackedLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 46: ApplyAnimationEx(playerid, "PED", "CAR_LjackedRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 47: ApplyAnimationEx(playerid, "PED", "CAR_Lshuffle_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 48: ApplyAnimationEx(playerid, "PED", "CAR_Lsit", 4.1, 0, 1, 1, 1, 1, 1);
		case 49: ApplyAnimationEx(playerid, "PED", "CAR_open_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 50: ApplyAnimationEx(playerid, "PED", "CAR_open_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 51: ApplyAnimationEx(playerid, "PED", "CAR_pulloutL_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 52: ApplyAnimationEx(playerid, "PED", "CAR_pulloutL_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 53: ApplyAnimationEx(playerid, "PED", "CAR_pullout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 54: ApplyAnimationEx(playerid, "PED", "CAR_pullout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 55: ApplyAnimationEx(playerid, "PED", "CAR_Qjacked", 4.1, 0, 1, 1, 1, 1, 1);
		case 56: ApplyAnimationEx(playerid, "PED", "CAR_rolldoor", 4.1, 0, 1, 1, 1, 1, 1);
		case 57: ApplyAnimationEx(playerid, "PED", "CAR_rolldoorLO", 4.1, 0, 1, 1, 1, 1, 1);
		case 58: ApplyAnimationEx(playerid, "PED", "CAR_rollout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 59: ApplyAnimationEx(playerid, "PED", "CAR_rollout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 60: ApplyAnimationEx(playerid, "PED", "CAR_shuffle_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 61: ApplyAnimationEx(playerid, "PED", "CAR_sit", 4.1, 0, 1, 1, 1, 1, 1);
		case 62: ApplyAnimationEx(playerid, "PED", "CAR_sitp", 4.1, 0, 1, 1, 1, 1, 1);
		case 63: ApplyAnimationEx(playerid, "PED", "CAR_sitpLO", 4.1, 0, 1, 1, 1, 1, 1);
		case 64: ApplyAnimationEx(playerid, "PED", "CAR_sit_pro", 4.1, 0, 1, 1, 1, 1, 1);
		case 65: ApplyAnimationEx(playerid, "PED", "CAR_sit_weak", 4.1, 0, 1, 1, 1, 1, 1);
		case 66: ApplyAnimationEx(playerid, "PED", "CAR_tune_radio", 4.1, 0, 1, 1, 1, 1, 1);
		case 67: ApplyAnimationEx(playerid, "PED", "CLIMB_idle", 4.1, 0, 1, 1, 1, 1, 1);
		case 68: ApplyAnimationEx(playerid, "PED", "CLIMB_jump", 4.1, 0, 1, 1, 1, 1, 1);
		case 69: ApplyAnimationEx(playerid, "PED", "CLIMB_jump2fall", 4.1, 0, 1, 1, 1, 1, 1);
		case 70: ApplyAnimationEx(playerid, "PED", "CLIMB_jump_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 71: ApplyAnimationEx(playerid, "PED", "CLIMB_Pull", 4.1, 0, 1, 1, 1, 1, 1);
		case 72: ApplyAnimationEx(playerid, "PED", "CLIMB_Stand", 4.1, 0, 1, 1, 1, 1, 1);
		case 73: ApplyAnimationEx(playerid, "PED", "CLIMB_Stand_finish", 4.1, 0, 1, 1, 1, 1, 1);
		case 74: ApplyAnimationEx(playerid, "PED", "cower", 4.1, 0, 1, 1, 1, 1, 1);
		case 75: ApplyAnimationEx(playerid, "PED", "Crouch_Roll_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 76: ApplyAnimationEx(playerid, "PED", "Crouch_Roll_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 77: ApplyAnimationEx(playerid, "PED", "DAM_armL_frmBK", 4.1, 0, 1, 1, 1, 1, 1);
		case 78: ApplyAnimationEx(playerid, "PED", "DAM_armL_frmFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 79: ApplyAnimationEx(playerid, "PED", "DAM_armL_frmLT", 4.1, 0, 1, 1, 1, 1, 1);
		case 80: ApplyAnimationEx(playerid, "PED", "DAM_armR_frmBK", 4.1, 0, 1, 1, 1, 1, 1);
		case 81: ApplyAnimationEx(playerid, "PED", "DAM_armR_frmFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 82: ApplyAnimationEx(playerid, "PED", "DAM_armR_frmRT", 4.1, 0, 1, 1, 1, 1, 1);
		case 83: ApplyAnimationEx(playerid, "PED", "DAM_LegL_frmBK", 4.1, 0, 1, 1, 1, 1, 1);
		case 84: ApplyAnimationEx(playerid, "PED", "DAM_LegL_frmFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 85: ApplyAnimationEx(playerid, "PED", "DAM_LegL_frmLT", 4.1, 0, 1, 1, 1, 1, 1);
		case 86: ApplyAnimationEx(playerid, "PED", "DAM_LegR_frmBK", 4.1, 0, 1, 1, 1, 1, 1);
		case 87: ApplyAnimationEx(playerid, "PED", "DAM_LegR_frmFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 88: ApplyAnimationEx(playerid, "PED", "DAM_LegR_frmRT", 4.1, 0, 1, 1, 1, 1, 1);
		case 89: ApplyAnimationEx(playerid, "PED", "DAM_stomach_frmBK", 4.1, 0, 1, 1, 1, 1, 1);
		case 90: ApplyAnimationEx(playerid, "PED", "DAM_stomach_frmFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 91: ApplyAnimationEx(playerid, "PED", "DAM_stomach_frmLT", 4.1, 0, 1, 1, 1, 1, 1);
		case 92: ApplyAnimationEx(playerid, "PED", "DAM_stomach_frmRT", 4.1, 0, 1, 1, 1, 1, 1);
		case 93: ApplyAnimationEx(playerid, "PED", "DOOR_LHinge_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 94: ApplyAnimationEx(playerid, "PED", "DOOR_RHinge_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 95: ApplyAnimationEx(playerid, "PED", "DrivebyL_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 96: ApplyAnimationEx(playerid, "PED", "DrivebyL_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 97: ApplyAnimationEx(playerid, "PED", "Driveby_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 98: ApplyAnimationEx(playerid, "PED", "Driveby_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 99: ApplyAnimationEx(playerid, "PED", "DRIVE_BOAT", 4.1, 0, 1, 1, 1, 1, 1);
		case 100: ApplyAnimationEx(playerid, "PED", "DRIVE_BOAT_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 101: ApplyAnimationEx(playerid, "PED", "DRIVE_BOAT_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 102: ApplyAnimationEx(playerid, "PED", "DRIVE_BOAT_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 103: ApplyAnimationEx(playerid, "PED", "Drive_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 104: ApplyAnimationEx(playerid, "PED", "Drive_LO_l", 4.1, 0, 1, 1, 1, 1, 1);
		case 105: ApplyAnimationEx(playerid, "PED", "Drive_LO_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 106: ApplyAnimationEx(playerid, "PED", "Drive_L_pro", 4.1, 0, 1, 1, 1, 1, 1);
		case 107: ApplyAnimationEx(playerid, "PED", "Drive_L_pro_slow", 4.1, 0, 1, 1, 1, 1, 1);
		case 108: ApplyAnimationEx(playerid, "PED", "Drive_L_slow", 4.1, 0, 1, 1, 1, 1, 1);
		case 109: ApplyAnimationEx(playerid, "PED", "Drive_L_weak", 4.1, 0, 1, 1, 1, 1, 1);
		case 110: ApplyAnimationEx(playerid, "PED", "Drive_L_weak_slow", 4.1, 0, 1, 1, 1, 1, 1);
		case 111: ApplyAnimationEx(playerid, "PED", "Drive_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 112: ApplyAnimationEx(playerid, "PED", "Drive_R_pro", 4.1, 0, 1, 1, 1, 1, 1);
		case 113: ApplyAnimationEx(playerid, "PED", "Drive_R_pro_slow", 4.1, 0, 1, 1, 1, 1, 1);
		case 114: ApplyAnimationEx(playerid, "PED", "Drive_R_slow", 4.1, 0, 1, 1, 1, 1, 1);
		case 115: ApplyAnimationEx(playerid, "PED", "Drive_R_weak", 4.1, 0, 1, 1, 1, 1, 1);
		case 116: ApplyAnimationEx(playerid, "PED", "Drive_R_weak_slow", 4.1, 0, 1, 1, 1, 1, 1);
		case 117: ApplyAnimationEx(playerid, "PED", "Drive_truck", 4.1, 0, 1, 1, 1, 1, 1);
		case 118: ApplyAnimationEx(playerid, "PED", "DRIVE_truck_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 119: ApplyAnimationEx(playerid, "PED", "DRIVE_truck_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 120: ApplyAnimationEx(playerid, "PED", "DRIVE_truck_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 121: ApplyAnimationEx(playerid, "PED", "Drown", 4.1, 0, 1, 1, 1, 1, 1);
		case 122: ApplyAnimationEx(playerid, "PED", "DUCK_cower", 4.1, 0, 1, 1, 1, 1, 1);
		case 123: ApplyAnimationEx(playerid, "PED", "endchat_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 124: ApplyAnimationEx(playerid, "PED", "endchat_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 125: ApplyAnimationEx(playerid, "PED", "endchat_03", 4.1, 0, 1, 1, 1, 1, 1);
		case 126: ApplyAnimationEx(playerid, "PED", "EV_dive", 4.1, 0, 1, 1, 1, 1, 1);
		case 127: ApplyAnimationEx(playerid, "PED", "EV_step", 4.1, 0, 1, 1, 1, 1, 1);
		case 128: ApplyAnimationEx(playerid, "PED", "facanger", 4.1, 0, 1, 1, 1, 1, 1);
		case 129: ApplyAnimationEx(playerid, "PED", "facanger", 4.1, 0, 1, 1, 1, 1, 1);
		case 130: ApplyAnimationEx(playerid, "PED", "facgum", 4.1, 0, 1, 1, 1, 1, 1);
		case 131: ApplyAnimationEx(playerid, "PED", "facsurp", 4.1, 0, 1, 1, 1, 1, 1);
		case 132: ApplyAnimationEx(playerid, "PED", "facsurpm", 4.1, 0, 1, 1, 1, 1, 1);
		case 133: ApplyAnimationEx(playerid, "PED", "factalk", 4.1, 0, 1, 1, 1, 1, 1);
		case 134: ApplyAnimationEx(playerid, "PED", "facurios", 4.1, 0, 1, 1, 1, 1, 1);
		case 135: ApplyAnimationEx(playerid, "PED", "FALL_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 136: ApplyAnimationEx(playerid, "PED", "FALL_collapse", 4.1, 0, 1, 1, 1, 1, 1);
		case 137: ApplyAnimationEx(playerid, "PED", "FALL_fall", 4.1, 0, 1, 1, 1, 1, 1);
		case 138: ApplyAnimationEx(playerid, "PED", "FALL_front", 4.1, 0, 1, 1, 1, 1, 1);
		case 139: ApplyAnimationEx(playerid, "PED", "FALL_glide", 4.1, 0, 1, 1, 1, 1, 1);
		case 140: ApplyAnimationEx(playerid, "PED", "FALL_land", 4.1, 0, 1, 1, 1, 1, 1);
		case 141: ApplyAnimationEx(playerid, "PED", "FALL_skyDive", 4.1, 0, 1, 1, 1, 1, 1);
		case 142: ApplyAnimationEx(playerid, "PED", "Fight2Idle", 4.1, 0, 1, 1, 1, 1, 1);
		case 143: ApplyAnimationEx(playerid, "PED", "FightA_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 144: ApplyAnimationEx(playerid, "PED", "FightA_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 145: ApplyAnimationEx(playerid, "PED", "FightA_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 146: ApplyAnimationEx(playerid, "PED", "FightA_block", 4.1, 0, 1, 1, 1, 1, 1);
		case 147: ApplyAnimationEx(playerid, "PED", "FightA_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 148: ApplyAnimationEx(playerid, "PED", "FightA_M", 4.1, 0, 1, 1, 1, 1, 1);
		case 149: ApplyAnimationEx(playerid, "PED", "FIGHTIDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 150: ApplyAnimationEx(playerid, "PED", "FightShB", 4.1, 0, 1, 1, 1, 1, 1);
		case 151: ApplyAnimationEx(playerid, "PED", "FightShF", 4.1, 0, 1, 1, 1, 1, 1);
		case 152: ApplyAnimationEx(playerid, "PED", "FightSh_BWD", 4.1, 0, 1, 1, 1, 1, 1);
		case 153: ApplyAnimationEx(playerid, "PED", "FightSh_FWD", 4.1, 0, 1, 1, 1, 1, 1);
		case 154: ApplyAnimationEx(playerid, "PED", "FightSh_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 155: ApplyAnimationEx(playerid, "PED", "FightSh_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 156: ApplyAnimationEx(playerid, "PED", "flee_lkaround_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 157: ApplyAnimationEx(playerid, "PED", "FLOOR_hit", 4.1, 0, 1, 1, 1, 1, 1);
		case 158: ApplyAnimationEx(playerid, "PED", "FLOOR_hit_f", 4.1, 0, 1, 1, 1, 1, 1);
		case 159: ApplyAnimationEx(playerid, "PED", "fucku", 4.1, 0, 1, 1, 1, 1, 1);
		case 160: ApplyAnimationEx(playerid, "PED", "gang_gunstand", 4.1, 0, 1, 1, 1, 1, 1);
		case 161: ApplyAnimationEx(playerid, "PED", "gas_cwr", 4.1, 0, 1, 1, 1, 1, 1);
		case 162: ApplyAnimationEx(playerid, "PED", "getup", 4.1, 0, 1, 1, 1, 1, 1);
		case 163: ApplyAnimationEx(playerid, "PED", "getup_front", 4.1, 0, 1, 1, 1, 1, 1);
		case 164: ApplyAnimationEx(playerid, "PED", "gum_eat", 4.1, 0, 1, 1, 1, 1, 1);
		case 165: ApplyAnimationEx(playerid, "PED", "GunCrouchBwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 166: ApplyAnimationEx(playerid, "PED", "GunCrouchFwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 167: ApplyAnimationEx(playerid, "PED", "GunMove_BWD", 4.1, 0, 1, 1, 1, 1, 1);
		case 168: ApplyAnimationEx(playerid, "PED", "GunMove_FWD", 4.1, 0, 1, 1, 1, 1, 1);
		case 169: ApplyAnimationEx(playerid, "PED", "GunMove_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 170: ApplyAnimationEx(playerid, "PED", "GunMove_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 171: ApplyAnimationEx(playerid, "PED", "Gun_2_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 172: ApplyAnimationEx(playerid, "PED", "GUN_BUTT", 4.1, 0, 1, 1, 1, 1, 1);
		case 173: ApplyAnimationEx(playerid, "PED", "GUN_BUTT_crouch", 4.1, 0, 1, 1, 1, 1, 1);
		case 174: ApplyAnimationEx(playerid, "PED", "Gun_stand", 4.1, 0, 1, 1, 1, 1, 1);
		case 175: ApplyAnimationEx(playerid, "PED", "handscower", 4.1, 0, 1, 1, 1, 1, 1);
		case 176: ApplyAnimationEx(playerid, "PED", "handsup", 4.1, 0, 1, 1, 1, 1, 1);
		case 177: ApplyAnimationEx(playerid, "PED", "HitA_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 178: ApplyAnimationEx(playerid, "PED", "HitA_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 179: ApplyAnimationEx(playerid, "PED", "HitA_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 180: ApplyAnimationEx(playerid, "PED", "HIT_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 181: ApplyAnimationEx(playerid, "PED", "HIT_behind", 4.1, 0, 1, 1, 1, 1, 1);
		case 182: ApplyAnimationEx(playerid, "PED", "HIT_front", 4.1, 0, 1, 1, 1, 1, 1);
		case 183: ApplyAnimationEx(playerid, "PED", "HIT_GUN_BUTT", 4.1, 0, 1, 1, 1, 1, 1);
		case 184: ApplyAnimationEx(playerid, "PED", "HIT_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 185: ApplyAnimationEx(playerid, "PED", "HIT_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 186: ApplyAnimationEx(playerid, "PED", "HIT_walk", 4.1, 0, 1, 1, 1, 1, 1);
		case 187: ApplyAnimationEx(playerid, "PED", "HIT_wall", 4.1, 0, 1, 1, 1, 1, 1);
		case 188: ApplyAnimationEx(playerid, "PED", "Idlestance_fat", 4.1, 0, 1, 1, 1, 1, 1);
		case 189: ApplyAnimationEx(playerid, "PED", "idlestance_old", 4.1, 0, 1, 1, 1, 1, 1);
		case 190: ApplyAnimationEx(playerid, "PED", "IDLE_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 191: ApplyAnimationEx(playerid, "PED", "IDLE_chat", 4.1, 0, 1, 1, 1, 1, 1);
		case 192: ApplyAnimationEx(playerid, "PED", "IDLE_csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 193: ApplyAnimationEx(playerid, "PED", "Idle_Gang1", 4.1, 0, 1, 1, 1, 1, 1);
		case 194: ApplyAnimationEx(playerid, "PED", "IDLE_HBHB", 4.1, 0, 1, 1, 1, 1, 1);
		case 195: ApplyAnimationEx(playerid, "PED", "IDLE_ROCKET", 4.1, 0, 1, 1, 1, 1, 1);
		case 196: ApplyAnimationEx(playerid, "PED", "IDLE_stance", 4.1, 0, 1, 1, 1, 1, 1);
		case 197: ApplyAnimationEx(playerid, "PED", "IDLE_taxi", 4.1, 0, 1, 1, 1, 1, 1);
		case 198: ApplyAnimationEx(playerid, "PED", "IDLE_tired", 4.1, 0, 1, 1, 1, 1, 1);
		case 199: ApplyAnimationEx(playerid, "PED", "Jetpack_Idle", 4.1, 0, 1, 1, 1, 1, 1);
		case 200: ApplyAnimationEx(playerid, "PED", "JOG_femaleA", 4.1, 0, 1, 1, 1, 1, 1);
		case 201: ApplyAnimationEx(playerid, "PED", "JOG_maleA", 4.1, 0, 1, 1, 1, 1, 1);
		case 202: ApplyAnimationEx(playerid, "PED", "JUMP_glide", 4.1, 0, 1, 1, 1, 1, 1);
		case 203: ApplyAnimationEx(playerid, "PED", "JUMP_land", 4.1, 0, 1, 1, 1, 1, 1);
		case 204: ApplyAnimationEx(playerid, "PED", "JUMP_launch", 4.1, 0, 1, 1, 1, 1, 1);
		case 205: ApplyAnimationEx(playerid, "PED", "JUMP_launch_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 206: ApplyAnimationEx(playerid, "PED", "KART_drive", 4.1, 0, 1, 1, 1, 1, 1);
		case 207: ApplyAnimationEx(playerid, "PED", "KART_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 208: ApplyAnimationEx(playerid, "PED", "KART_LB", 4.1, 0, 1, 1, 1, 1, 1);
		case 209: ApplyAnimationEx(playerid, "PED", "KART_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 210: ApplyAnimationEx(playerid, "PED", "KD_left", 4.1, 0, 1, 1, 1, 1, 1);
		case 211: ApplyAnimationEx(playerid, "PED", "KD_right", 4.1, 0, 1, 1, 1, 1, 1);
		case 212: ApplyAnimationEx(playerid, "PED", "KO_shot_face", 4.1, 0, 1, 1, 1, 1, 1);
		case 213: ApplyAnimationEx(playerid, "PED", "KO_shot_front", 4.1, 0, 1, 1, 1, 1, 1);
		case 214: ApplyAnimationEx(playerid, "PED", "KO_shot_stom", 4.1, 0, 1, 1, 1, 1, 1);
		case 215: ApplyAnimationEx(playerid, "PED", "KO_skid_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 216: ApplyAnimationEx(playerid, "PED", "KO_skid_front", 4.1, 0, 1, 1, 1, 1, 1);
		case 217: ApplyAnimationEx(playerid, "PED", "KO_spin_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 218: ApplyAnimationEx(playerid, "PED", "KO_spin_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 219: ApplyAnimationEx(playerid, "PED", "pass_Smoke_in_car", 4.1, 0, 1, 1, 1, 1, 1);
		case 220: ApplyAnimationEx(playerid, "PED", "phone_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 221: ApplyAnimationEx(playerid, "PED", "phone_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 222: ApplyAnimationEx(playerid, "PED", "phone_talk", 4.1, 0, 1, 1, 1, 1, 1);
		case 223: ApplyAnimationEx(playerid, "PED", "Player_Sneak", 4.1, 0, 1, 1, 1, 1, 1);
		case 224: ApplyAnimationEx(playerid, "PED", "Player_Sneak_walkstart", 4.1, 0, 1, 1, 1, 1, 1);
		case 225: ApplyAnimationEx(playerid, "PED", "roadcross", 4.1, 0, 1, 1, 1, 1, 1);
		case 226: ApplyAnimationEx(playerid, "PED", "roadcross_female", 4.1, 0, 1, 1, 1, 1, 1);
		case 227: ApplyAnimationEx(playerid, "PED", "roadcross_gang", 4.1, 0, 1, 1, 1, 1, 1);
		case 228: ApplyAnimationEx(playerid, "PED", "roadcross_old", 4.1, 0, 1, 1, 1, 1, 1);
		case 229: ApplyAnimationEx(playerid, "PED", "run_1armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 230: ApplyAnimationEx(playerid, "PED", "run_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 231: ApplyAnimationEx(playerid, "PED", "run_civi", 4.1, 0, 1, 1, 1, 1, 1);
		case 232: ApplyAnimationEx(playerid, "PED", "run_csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 233: ApplyAnimationEx(playerid, "PED", "run_fat", 4.1, 0, 1, 1, 1, 1, 1);
		case 234: ApplyAnimationEx(playerid, "PED", "run_fatold", 4.1, 0, 1, 1, 1, 1, 1);
		case 235: ApplyAnimationEx(playerid, "PED", "run_gang1", 4.1, 0, 1, 1, 1, 1, 1);
		case 236: ApplyAnimationEx(playerid, "PED", "run_left", 4.1, 0, 1, 1, 1, 1, 1);
		case 237: ApplyAnimationEx(playerid, "PED", "run_old", 4.1, 0, 1, 1, 1, 1, 1);
		case 238: ApplyAnimationEx(playerid, "PED", "run_player", 4.1, 0, 1, 1, 1, 1, 1);
		case 239: ApplyAnimationEx(playerid, "PED", "run_right", 4.1, 0, 1, 1, 1, 1, 1);
		case 240: ApplyAnimationEx(playerid, "PED", "run_rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 241: ApplyAnimationEx(playerid, "PED", "Run_stop", 4.1, 0, 1, 1, 1, 1, 1);
		case 242: ApplyAnimationEx(playerid, "PED", "Run_stopR", 4.1, 0, 1, 1, 1, 1, 1);
		case 243: ApplyAnimationEx(playerid, "PED", "Run_Wuzi", 4.1, 0, 1, 1, 1, 1, 1);
		case 244: ApplyAnimationEx(playerid, "PED", "SEAT_down", 4.1, 0, 1, 1, 1, 1, 1);
		case 245: ApplyAnimationEx(playerid, "PED", "SEAT_idle", 4.1, 0, 1, 1, 1, 1, 1);
		case 246: ApplyAnimationEx(playerid, "PED", "SEAT_up", 4.1, 0, 1, 1, 1, 1, 1);
		case 247: ApplyAnimationEx(playerid, "PED", "SHOT_leftP", 4.1, 0, 1, 1, 1, 1, 1);
		case 248: ApplyAnimationEx(playerid, "PED", "SHOT_partial", 4.1, 0, 1, 1, 1, 1, 1);
		case 249: ApplyAnimationEx(playerid, "PED", "SHOT_partial_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 250: ApplyAnimationEx(playerid, "PED", "SHOT_rightP", 4.1, 0, 1, 1, 1, 1, 1);
		case 251: ApplyAnimationEx(playerid, "PED", "Shove_Partial", 4.1, 0, 1, 1, 1, 1, 1);
		case 252: ApplyAnimationEx(playerid, "PED", "Smoke_in_car", 4.1, 0, 1, 1, 1, 1, 1);
		case 253: ApplyAnimationEx(playerid, "PED", "sprint_civi", 4.1, 0, 1, 1, 1, 1, 1);
		case 254: ApplyAnimationEx(playerid, "PED", "sprint_panic", 4.1, 0, 1, 1, 1, 1, 1);
		case 255: ApplyAnimationEx(playerid, "PED", "Sprint_Wuzi", 4.1, 0, 1, 1, 1, 1, 1);
		case 256: ApplyAnimationEx(playerid, "PED", "swat_run", 4.1, 0, 1, 1, 1, 1, 1);
		case 257: ApplyAnimationEx(playerid, "PED", "Swim_Tread", 4.1, 0, 1, 1, 1, 1, 1);
		case 258: ApplyAnimationEx(playerid, "PED", "Tap_hand", 4.1, 0, 1, 1, 1, 1, 1);
		case 259: ApplyAnimationEx(playerid, "PED", "Tap_handP", 4.1, 0, 1, 1, 1, 1, 1);
		case 260: ApplyAnimationEx(playerid, "PED", "turn_180", 4.1, 0, 1, 1, 1, 1, 1);
		case 261: ApplyAnimationEx(playerid, "PED", "Turn_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 262: ApplyAnimationEx(playerid, "PED", "Turn_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 263: ApplyAnimationEx(playerid, "PED", "WALK_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 264: ApplyAnimationEx(playerid, "PED", "WALK_civi", 4.1, 0, 1, 1, 1, 1, 1);
		case 265: ApplyAnimationEx(playerid, "PED", "WALK_csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 266: ApplyAnimationEx(playerid, "PED", "Walk_DoorPartial", 4.1, 0, 1, 1, 1, 1, 1);
		case 267: ApplyAnimationEx(playerid, "PED", "WALK_drunk", 4.1, 0, 1, 1, 1, 1, 1);
		case 268: ApplyAnimationEx(playerid, "PED", "WALK_fat", 4.1, 0, 1, 1, 1, 1, 1);
		case 269: ApplyAnimationEx(playerid, "PED", "WALK_fatold", 4.1, 0, 1, 1, 1, 1, 1);
		case 270: ApplyAnimationEx(playerid, "PED", "WALK_gang1", 4.1, 0, 1, 1, 1, 1, 1);
		case 271: ApplyAnimationEx(playerid, "PED", "WALK_gang2", 4.1, 0, 1, 1, 1, 1, 1);
		case 272: ApplyAnimationEx(playerid, "PED", "WALK_old", 4.1, 0, 1, 1, 1, 1, 1);
		case 273: ApplyAnimationEx(playerid, "PED", "WALK_player", 4.1, 0, 1, 1, 1, 1, 1);
		case 274: ApplyAnimationEx(playerid, "PED", "WALK_rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 275: ApplyAnimationEx(playerid, "PED", "WALK_shuffle", 4.1, 0, 1, 1, 1, 1, 1);
		case 276: ApplyAnimationEx(playerid, "PED", "WALK_start", 4.1, 0, 1, 1, 1, 1, 1);
		case 277: ApplyAnimationEx(playerid, "PED", "WALK_start_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 278: ApplyAnimationEx(playerid, "PED", "WALK_start_csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 279: ApplyAnimationEx(playerid, "PED", "WALK_start_rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 280: ApplyAnimationEx(playerid, "PED", "Walk_Wuzi", 4.1, 0, 1, 1, 1, 1, 1);
		case 281: ApplyAnimationEx(playerid, "PED", "WEAPON_crouch", 4.1, 0, 1, 1, 1, 1, 1);
		case 282: ApplyAnimationEx(playerid, "PED", "woman_idlestance", 4.1, 0, 1, 1, 1, 1, 1);
		case 283: ApplyAnimationEx(playerid, "PED", "woman_run", 4.1, 0, 1, 1, 1, 1, 1);
		case 284: ApplyAnimationEx(playerid, "PED", "WOMAN_runbusy", 4.1, 0, 1, 1, 1, 1, 1);
		case 285: ApplyAnimationEx(playerid, "PED", "WOMAN_runfatold", 4.1, 0, 1, 1, 1, 1, 1);
		case 286: ApplyAnimationEx(playerid, "PED", "woman_runpanic", 4.1, 0, 1, 1, 1, 1, 1);
		case 287: ApplyAnimationEx(playerid, "PED", "WOMAN_runsexy", 4.1, 0, 1, 1, 1, 1, 1);
		case 288: ApplyAnimationEx(playerid, "PED", "WOMAN_walkbusy", 4.1, 0, 1, 1, 1, 1, 1);
		case 289: ApplyAnimationEx(playerid, "PED", "WOMAN_walkfatold", 4.1, 0, 1, 1, 1, 1, 1);
		case 290: ApplyAnimationEx(playerid, "PED", "WOMAN_walknorm", 4.1, 0, 1, 1, 1, 1, 1);
		case 291: ApplyAnimationEx(playerid, "PED", "WOMAN_walkold", 4.1, 0, 1, 1, 1, 1, 1);
		case 292: ApplyAnimationEx(playerid, "PED", "WOMAN_walkpro", 4.1, 0, 1, 1, 1, 1, 1);
		case 293: ApplyAnimationEx(playerid, "PED", "WOMAN_walksexy", 4.1, 0, 1, 1, 1, 1, 1);
		case 294: ApplyAnimationEx(playerid, "PED", "WOMAN_walkshop", 4.1, 0, 1, 1, 1, 1, 1);
		case 295: ApplyAnimationEx(playerid, "PED", "XPRESSscratch", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animped [1 - 295]");
	}
	return 1;
}
CMD:animplayerdvbys(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "PLAYER_DVBYS", "Plyr_DrivebyBwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "PLAYER_DVBYS", "Plyr_DrivebyFwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "PLAYER_DVBYS", "Plyr_DrivebyLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "PLAYER_DVBYS", "Plyr_DrivebyRHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animplayerdvbys [1 - 4]");
	}
	return 1;
}
CMD:animplayidles(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "PLAYIDLES", "shift", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "PLAYIDLES", "shldr", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "PLAYIDLES", "stretch", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "PLAYIDLES", "strleg", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "PLAYIDLES", "time", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animplayidles [1 - 5]");
	}
	return 1;
}
CMD:animpolice(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "POLICE", "CopTraf_Away", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "POLICE", "CopTraf_Come", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "POLICE", "CopTraf_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "POLICE", "CopTraf_Stop", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "POLICE", "COP_getoutcar_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "POLICE", "Cop_move_FWD", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "POLICE", "crm_drgbst_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "POLICE", "Door_Kick", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "POLICE", "plc_drgbst_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "POLICE", "plc_drgbst_02", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animpolice [1 - 10]");
	}
	return 1;
}
CMD:animpool(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "POOL", "POOL_ChalkCue", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "POOL", "POOL_Idle_Stance", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "POOL", "POOL_Long_Shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "POOL", "POOL_Long_Shot_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "POOL", "POOL_Long_Start", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "POOL", "POOL_Long_Start_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "POOL", "POOL_Med_Shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "POOL", "POOL_Med_Shot_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "POOL", "POOL_Med_Start", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "POOL", "POOL_Med_Start_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "POOL", "POOL_Place_White", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "POOL", "POOL_Short_Shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "POOL", "POOL_Short_Shot_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "POOL", "POOL_Short_Start", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "POOL", "POOL_Short_Start_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "POOL", "POOL_Walk", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "POOL", "POOL_Walk_Start", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "POOL", "POOL_XLong_Shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "POOL", "POOL_XLong_Shot_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "POOL", "POOL_XLong_Start", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "POOL", "POOL_XLong_Start_O", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animpool [1 - 21]");
	}
	return 1;
}
CMD:animpoor(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "POOR", "WINWASH_Start", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "POOR", "WINWASH_Wash2Beg", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animpoor [1 - 2]");
	}
	return 1;
}
CMD:animpython(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "PYTHON", "python_crouchfire", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "PYTHON", "python_crouchreload", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "PYTHON", "python_fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "PYTHON", "python_fire_poor", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "PYTHON", "python_reload", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animpython [1 - 5]");
	}
	return 1;
}
CMD:animquad(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "QUAD", "QUAD_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "QUAD", "QUAD_driveby_FT", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "QUAD", "QUAD_driveby_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "QUAD", "QUAD_driveby_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "QUAD", "QUAD_FWD", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "QUAD", "QUAD_getoff_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "QUAD", "QUAD_getoff_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "QUAD", "QUAD_getoff_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "QUAD", "QUAD_geton_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "QUAD", "QUAD_geton_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "QUAD", "QUAD_hit", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "QUAD", "QUAD_kick", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "QUAD", "QUAD_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "QUAD", "QUAD_passenger", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "QUAD", "QUAD_reverse", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "QUAD", "QUAD_ride", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "QUAD", "QUAD_Right", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animquad [1 - 17]");
	}
	return 1;
}
CMD:animquaddbz(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "QUAD_DBZ", "Pass_Driveby_BWD", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "QUAD_DBZ", "Pass_Driveby_FWD", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "QUAD_DBZ", "Pass_Driveby_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "QUAD_DBZ", "Pass_Driveby_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animquadbz [1 - 4]");
	}
	return 1;
}
CMD:animrapping(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "RAPPING", "Laugh_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "RAPPING", "RAP_A_IN", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "RAPPING", "RAP_A_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "RAPPING", "RAP_A_OUT", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "RAPPING", "RAP_B_IN", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "RAPPING", "RAP_B_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "RAPPING", "RAP_B_OUT", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "RAPPING", "RAP_C_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animrapping [1 - 8]");
	}
	return 1;
}
CMD:animrifle(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "RIFLE", "RIFLE_crouchfire", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "RIFLE", "RIFLE_crouchload", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "RIFLE", "RIFLE_fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "RIFLE", "RIFLE_fire_poor", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "RIFLE", "RIFLE_load", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animrifle [1 - 5]");
	}
	return 1;
}
CMD:animriot(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "RIOT", "RIOT_ANGRY", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "RIOT", "RIOT_ANGRY_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "RIOT", "RIOT_challenge", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "RIOT", "RIOT_CHANT", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "RIOT", "RIOT_FUKU", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "RIOT", "RIOT_PUNCHES", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "RIOT", "RIOT_shout", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animriot [1 - 7]");
	}
	return 1;
}
CMD:animrobbank(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "ROB_BANK", "CAT_Safe_End", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "ROB_BANK", "CAT_Safe_Open", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "ROB_BANK", "CAT_Safe_Open_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "ROB_BANK", "SHP_HandsUp_Scr", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animrobbank [1 - 5]");
	}
	return 1;
}
CMD:animrocket(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "ROCKET", "idle_rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "ROCKET", "RocketFire", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "ROCKET", "run_rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "ROCKET", "walk_rocket", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "ROCKET", "WALK_start_rocket", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animrocket [1 - 5]");
	}
	return 1;
}
CMD:animrustler(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "RUSTLER", "Plane_align_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "RUSTLER", "Plane_close", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "RUSTLER", "Plane_getin", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "RUSTLER", "Plane_getout", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "RUSTLER", "Plane_open", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animrustler [1 - 5]");
	}
	return 1;
}
CMD:animryder(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "RYDER", "RYD_Beckon_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "RYDER", "RYD_Beckon_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "RYDER", "RYD_Beckon_03", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "RYDER", "RYD_Die_PT1", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "RYDER", "RYD_Die_PT2", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "RYDER", "Van_Crate_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "RYDER", "Van_Crate_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "RYDER", "Van_Fall_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "RYDER", "Van_Fall_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "RYDER", "Van_Lean_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "RYDER", "Van_Lean_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "RYDER", "VAN_PickUp_E", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "RYDER", "VAN_PickUp_S", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "RYDER", "Van_Stand", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "RYDER", "Van_Stand_Crate", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "RYDER", "Van_Throw", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animryder [1 - 16]");
	}
	return 1;
}
CMD:animscrathching(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SCRATCHING", "scdldlp", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SCRATCHING", "scdlulp", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SCRATCHING", "scdrdlp", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SCRATCHING", "scdrulp", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "SCRATCHING", "sclng_l", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "SCRATCHING", "sclng_r", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "SCRATCHING", "scmid_l", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "SCRATCHING", "scmid_r", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "SCRATCHING", "scshrtl", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "SCRATCHING", "scshrtr", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "SCRATCHING", "sc_ltor", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "SCRATCHING", "sc_rtol", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animscratching [1 - 12]");
	}
	return 1;
}
CMD:animshamal(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SHAMAL", "SHAMAL_align", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SHAMAL", "SHAMAL_getin_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SHAMAL", "SHAMAL_getout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SHAMAL", "SHAMAL_open", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animshamal [1 - 4]");
	}
	return 1;
}
CMD:animshop(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SHOP", "ROB_2Idle", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SHOP", "ROB_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SHOP", "ROB_Loop_Threat", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SHOP", "ROB_Shifty", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "SHOP", "ROB_StickUp_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "SHOP", "SHP_Duck", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "SHOP", "SHP_Duck_Aim", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "SHOP", "SHP_Duck_Fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "SHOP", "SHP_Gun_Aim", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "SHOP", "SHP_Gun_Duck", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "SHOP", "SHP_Gun_Fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "SHOP", "SHP_Gun_Grab", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "SHOP", "SHP_Gun_Threat", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "SHOP", "SHP_HandsUp_Scr", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "SHOP", "SHP_Jump_Glide", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "SHOP", "SHP_Jump_Land", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "SHOP", "SHP_Jump_Launch", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "SHOP", "SHP_Rob_GiveCash", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "SHOP", "SHP_Rob_HandsUp", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "SHOP", "SHP_Rob_React", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "SHOP", "SHP_Serve_End", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "SHOP", "SHP_Serve_Idle", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "SHOP", "SHP_Serve_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "SHOP", "SHP_Serve_Start", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "SHOP", "Smoke_RYD", 4.1, 0, 1, 1, 1, 1, 1);
		case 26: ApplyAnimationEx(playerid, "SHOP", "donutdrop", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animshop [1 - 26]");
	}
	return 1;
}
CMD:animshotgun(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SHOTGUN", "shotgun_crouchfire", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SHOTGUN", "shotgun_fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SHOTGUN", "shotgun_fire_poor", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animshotgun [1 - 3]");
	}
	return 1;
}
CMD:animsilenced(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SILENCED", "CrouchReload", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SILENCED", "SilenceCrouchfire", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SILENCED", "Silence_fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SILENCED", "Silence_reload", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animsilenced [1 - 4]");
	}
	return 1;
}
CMD:animskate(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SKATE", "skate_idle", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SKATE", "skate_run", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SKATE", "skate_sprint", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animskate [1 - 3]");
	}
	return 1;
}
CMD:animsmoking(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SMOKING", "F_smklean_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SMOKING", "M_smklean_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SMOKING", "M_smkstnd_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SMOKING", "M_smk_drag", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "SMOKING", "M_smk_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "SMOKING", "M_smk_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "SMOKING", "M_smk_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "SMOKING", "M_smk_tap", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animsmoking [1 - 9]");
	}
	return 1;
}
CMD:animspraycan(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SPRAYCAN", "spraycan_fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SPRAYCAN", "spraycan_full", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animspraycan [1 - 2]");
	}
	return 1;
}
CMD:animstrip(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "STRIP", "PLY_CASH", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "STRIP", "PUN_CASH", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "STRIP", "PUN_HOLLER", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "STRIP", "PUN_LOOP", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "STRIP", "strip_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "STRIP", "strip_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "STRIP", "strip_C", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "STRIP", "strip_D", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "STRIP", "strip_E", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "STRIP", "strip_F", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "STRIP", "strip_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "STRIP", "STR_A2B", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "STRIP", "STR_B2A", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "STRIP", "STR_B2C", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "STRIP", "STR_C1", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "STRIP", "STR_C2", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "STRIP", "STR_C2B", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "STRIP", "STR_Loop_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "STRIP", "STR_Loop_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "STRIP", "STR_Loop_C", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animstrip [1 - 20]");
	}
	return 1;
}
CMD:animsunbathe(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SUNBATHE", "batherdown", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SUNBATHE", "batherup", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SUNBATHE", "Lay_Bac_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SUNBATHE", "Lay_Bac_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "SUNBATHE", "ParkSit_M_IdleA", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "SUNBATHE", "ParkSit_M_IdleB", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "SUNBATHE", "ParkSit_M_IdleC", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "SUNBATHE", "ParkSit_M_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "SUNBATHE", "ParkSit_M_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "SUNBATHE", "ParkSit_W_idleA", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "SUNBATHE", "ParkSit_W_idleB", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "SUNBATHE", "ParkSit_W_idleC", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "SUNBATHE", "ParkSit_W_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "SUNBATHE", "ParkSit_W_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "SUNBATHE", "SBATHE_F_LieB2Sit", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "SUNBATHE", "SBATHE_F_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "SUNBATHE", "SitnWait_in_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "SUNBATHE", "SitnWait_out_W", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animbath [1 - 18]");
	}
	return 1;
}
CMD:animswat(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SWAT", "gnstwall_injurd", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SWAT", "JMP_Wall1m_180", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SWAT", "Rail_fall", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SWAT", "Rail_fall_crawl", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "SWAT", "swt_breach_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "SWAT", "swt_breach_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "SWAT", "swt_breach_03", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "SWAT", "swt_go", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "SWAT", "swt_lkt", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "SWAT", "swt_sty", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "SWAT", "swt_vent_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "SWAT", "swt_vent_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "SWAT", "swt_vnt_sht_die", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "SWAT", "swt_vnt_sht_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "SWAT", "swt_vnt_sht_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "SWAT", "swt_wllpk_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "SWAT", "swt_wllpk_L_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "SWAT", "swt_wllpk_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "SWAT", "swt_wllpk_R_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "SWAT", "swt_wllshoot_in_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "SWAT", "swt_wllshoot_in_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "SWAT", "swt_wllshoot_out_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "SWAT", "swt_wllshoot_out_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "SWAT", "cards_pick_02", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animswat [1 - 24]");
	}
	return 1;
}
CMD:animsweet(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SWEET", "ho_ass_slapped", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SWEET", "LaFin_Player", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SWEET", "LaFin_Sweet", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SWEET", "plyr_hndshldr_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "SWEET", "sweet_ass_slap", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "SWEET", "sweet_hndshldr_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animsweet [1 - 7]");
	}
	return 1;
}
CMD:animswim(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SWIM", "Swim_Breast", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SWIM", "SWIM_crawl", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SWIM", "Swim_Dive_Under", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SWIM", "Swim_Glide", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "SWIM", "Swim_jumpout", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "SWIM", "Swim_Tread", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "SWIM", "Swim_Under", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animswim [1 - 7]");
	}
	return 1;
}
CMD:animsword(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SWORD", "sword_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SWORD", "sword_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SWORD", "sword_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SWORD", "sword_4", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "SWORD", "sword_block", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "SWORD", "Sword_Hit_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "SWORD", "Sword_Hit_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "SWORD", "Sword_Hit_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "SWORD", "sword_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "SWORD", "sword_part", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animsword [1 - 10]");
	}
	return 1;
}
CMD:animtank(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "TANK", "TANK_align_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "TANK", "TANK_close_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "TANK", "TANK_doorlocked", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "TANK", "TANK_getin_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "TANK", "TANK_getout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "TANK", "TANK_open_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animtank [1 - 6]");
	}
	return 1;
}
CMD:animtattoos(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmL_In_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmL_In_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmL_In_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmL_Out_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmL_Out_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmL_Out_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmL_Pose_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmL_Pose_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmL_Pose_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmR_In_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmR_In_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmR_In_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmR_Out_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmR_Out_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmR_Out_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmR_Pose_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmR_Pose_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "TATTOOS", "TAT_ArmR_Pose_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_In_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_In_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 21: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_In_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 22: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_Out_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 23: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_Out_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 24: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_Out_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 25: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_Pose_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 26: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_Pose_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 27: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_Pose_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 28: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_Sit_In_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 29: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_Sit_Loop_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 30: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Back_Sit_Out_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 31: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Bel_In_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 32: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Bel_In_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 33: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Bel_Out_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 34: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Bel_Out_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 35: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Bel_Pose_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 36: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Bel_Pose_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 37: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Che_In_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 38: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Che_In_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 39: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Che_In_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 40: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Che_Out_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 41: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Che_Out_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 42: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Che_Out_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 43: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Che_Pose_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 44: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Che_Pose_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 45: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Che_Pose_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 46: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Drop_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 47: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Idle_Loop_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 48: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Idle_Loop_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 49: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Sit_In_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 50: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Sit_In_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 51: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Sit_In_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 52: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Sit_Loop_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 53: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Sit_Loop_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 54: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Sit_Loop_T", 4.1, 0, 1, 1, 1, 1, 1);
		case 55: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Sit_Out_O", 4.1, 0, 1, 1, 1, 1, 1);
		case 56: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Sit_Out_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 57: ApplyAnimationEx(playerid, "TATTOOS", "TAT_Sit_Out_T", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animtattoos [1 - 57]");
	}
	return 1;
}
CMD:animtec(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "TEC", "TEC_crouchfire", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "TEC", "TEC_crouchreload", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "TEC", "TEC_fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "TEC", "TEC_reload", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animtec [1 - 4]");
	}
	return 1;
}
CMD:animtrain(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "TRAIN", "tran_gtup", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "TRAIN", "tran_hng", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "TRAIN", "tran_ouch", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "TRAIN", "tran_stmb", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animtrain [1 - 4]");
	}
	return 1;
}
CMD:animtruck(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_ALIGN_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_ALIGN_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_closedoor_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_closedoor_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_close_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_close_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_getin_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_getin_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_getout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_getout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_jackedLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_jackedRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_open_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_open_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_pullout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_pullout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "TRUCK", "TRUCK_Shuffle", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animtruck [1 - 17]");
	}
	return 1;
}
CMD:animuzi(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "UZI", "UZI_crouchfire", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "UZI", "UZI_crouchreload", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "UZI", "UZI_fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "UZI", "UZI_fire_poor", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "UZI", "UZI_reload", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animuzi [1 - 5]");
	}
	return 1;
}
CMD:animvan(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "VAN", "VAN_close_back_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "VAN", "VAN_close_back_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "VAN", "VAN_getin_Back_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "VAN", "VAN_getin_Back_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "VAN", "VAN_getout_back_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "VAN", "VAN_getout_back_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "VAN", "VAN_open_back_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "VAN", "VAN_open_back_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animvan [1 - 8]");
	}
	return 1;
}
CMD:animvending(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "VENDING", "VEND_Drink_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "VENDING", "vend_eat1_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "VENDING", "VEND_Eat_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "VENDING", "VEND_Use", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "VENDING", "VEND_Use_pt2", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animvending [1 - 6]");
	}
	return 1;
}
CMD:animvortex(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "VORTEX", "CAR_jumpin_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "VORTEX", "CAR_jumpin_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "VORTEX", "vortex_getout_LHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "VORTEX", "vortex_getout_RHS", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animvortex [1 - 4]");
	}
	return 1;
}
CMD:animwayfarer(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "WAYFARER", "WF_Back", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "WAYFARER", "WF_drivebyFT", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "WAYFARER", "WF_drivebyLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "WAYFARER", "WF_drivebyRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "WAYFARER", "WF_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "WAYFARER", "WF_getoffBACK", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "WAYFARER", "WF_getoffLHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "WAYFARER", "WF_getoffRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "WAYFARER", "WF_hit", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "WAYFARER", "WF_jumponL", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "WAYFARER", "WF_jumponR", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "WAYFARER", "WF_kick", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "WAYFARER", "WF_Left", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "WAYFARER", "WF_passenger", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "WAYFARER", "WF_pushes", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "WAYFARER", "WF_Ride", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "WAYFARER", "WF_Right", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "WAYFARER", "WF_Still", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animway [1 - 18]");
	}
	return 1;
}
CMD:animweap(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "WEAPONS", "SHP_1H_Lift", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "WEAPONS", "SHP_1H_Lift_End", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "WEAPONS", "SHP_1H_Ret", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "WEAPONS", "SHP_1H_Ret_S", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "WEAPONS", "SHP_2H_Lift", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "WEAPONS", "SHP_2H_Lift_End", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "WEAPONS", "SHP_2H_Ret", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "WEAPONS", "SHP_2H_Ret_S", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "WEAPONS", "SHP_Ar_Lift", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "WEAPONS", "SHP_Ar_Lift_End", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "WEAPONS", "SHP_Ar_Ret", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "WEAPONS", "SHP_Ar_Ret_S", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "WEAPONS", "SHP_G_Lift_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "WEAPONS", "SHP_G_Lift_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "WEAPONS", "SHP_Tray_In", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "WEAPONS", "SHP_Tray_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "WEAPONS", "SHP_Tray_Pose", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animweap [1 - 17]");
	}
	return 1;
}
CMD:animwuzi(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "WUZI", "CS_Dead_Guy", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "WUZI", "CS_Plyr_pt1", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "WUZI", "CS_Plyr_pt2", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "WUZI", "CS_Wuzi_pt1", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "WUZI", "CS_Wuzi_pt2", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "WUZI", "Walkstart_Idle_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "WUZI", "Wuzi_follow", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "WUZI", "Wuzi_Greet_Plyr", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "WUZI", "Wuzi_Greet_Wuzi", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "WUZI", "Wuzi_grnd_chk", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "WUZI", "Wuzi_stand_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "WUZI", "Wuzi_Walk", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animwuzi [1 - 12]");
	}
	return 1;
}
CMD:animsnm(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SNM", "SPANKING_IDLEW", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SNM", "SPANKING_IDLEP", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SNM", "SPANKINGW", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SNM", "SPANKINGP", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "SNM", "SPANKEDW", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "SNM", "SPANKEDP", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "SNM", "SPANKING_ENDW", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "SNM", "SPANKING_ENDP", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animsnm [1 - 8]");
	}
	return 1;
}
CMD:animblowjob(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_COUCH_START_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_COUCH_END_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_COUCH_END_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_STAND_START_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_STAND_START_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_STAND_END_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "BLOWJOBZ", "BJ_STAND_END_W", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animblowjob [1 - 12]");
	}
	return 1;
}
CMD:animsex(playerid, params[])
{
    new animid;
	if(sscanf(params,"i",animid)) return PlayerPlaySound(playerid, S_DENY, 0.0, 0.0, 10.0);
	switch(animid)
	{
		case 1: ApplyAnimationEx(playerid, "SEX", "SEX_1_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimationEx(playerid, "SEX", "SEX_1_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimationEx(playerid, "SEX", "SEX_2_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimationEx(playerid, "SEX", "SEX_2_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimationEx(playerid, "SEX", "SEX_3_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimationEx(playerid, "SEX", "SEX_3_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimationEx(playerid, "SEX", "SEX_1_CUM_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimationEx(playerid, "SEX", "SEX_1_CUM_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimationEx(playerid, "SEX", "SEX_1_FAIL_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimationEx(playerid, "SEX", "SEX_1_FAIL_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimationEx(playerid, "SEX", "SEX_2_FAIL_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimationEx(playerid, "SEX", "SEX_2_FAIL_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimationEx(playerid, "SEX", "SEX_3_FAIL_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimationEx(playerid, "SEX", "SEX_3_FAIL_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: ApplyAnimationEx(playerid, "SEX", "SEX_1TO2_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: ApplyAnimationEx(playerid, "SEX", "SEX_1TO2_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: ApplyAnimationEx(playerid, "SEX", "SEX_2TO3_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: ApplyAnimationEx(playerid, "SEX", "SEX_2TO3_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: ApplyAnimationEx(playerid, "SEX", "SEX_3TO1_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: ApplyAnimationEx(playerid, "SEX", "SEX_3TO1_P", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_WHITE, "Syntax: /animsex [1 - 20]");
	}
	return 1;
}

CMD:animairport(playerid) return ApplyAnimationEx(playerid, "AIRPORT", "thrw_barl_thrw", 4.1, 0, 1, 1, 1, 1, 1);
CMD:animflame(playerid) return ApplyAnimationEx(playerid, "FLAME", "FLAME_fire", 4.1, 0, 1, 1, 1, 1, 1);
CMD:animgog(playerid) return ApplyAnimationEx(playerid, "goggles", "goggles_put_on", 4.1, 0, 1, 1, 1, 1, 1);
CMD:animmedic(playerid) return ApplyAnimationEx(playerid, "MEDIC", "CPR", 4.1, 0, 1, 1, 1, 1, 1);
CMD:animsniper(playerid) return ApplyAnimationEx(playerid, "SNIPER", "WEAPON_sniper", 4.1, 0, 1, 1, 1, 1, 1);

CMD:stopanim(playerid) return ClearAnimations(playerid);

CMD:beer(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
CMD:cellin(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
CMD:cellout(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
CMD:duck(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DUCK);
CMD:enterveh(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_ENTER_VEHICLE);
CMD:exitveh(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_EXIT_VEHICLE);
CMD:jetpack(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
CMD:sit(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SITTING);
CMD:sprunk(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
CMD:wine(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);

CMD:stopspac(playerid) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
